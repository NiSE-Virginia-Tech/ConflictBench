Found the following features in expression file:
left
base
right
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/services/TestDefaultKsqlClientFactory.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/services/TestDefaultKsqlClientFactory.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/services/TestDefaultKsqlClientFactory.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/services/TestDefaultKsqlClientFactory.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/services/TestDefaultKsqlClientFactory.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/services/TestDefaultKsqlClientFactory.java
[NT -> left : Feature]
	[NT -> ksqldb-rest-app : Folder]
		[NT -> src : Folder]
			[NT -> test : Folder]
				[NT -> java : Folder]
					[NT -> io : Folder]
						[NT -> confluent : Folder]
							[NT -> ksql : Folder]
								[NT -> rest : Folder]
									[NT -> server : Folder]
										[NT -> services : Folder]
											[NT -> TestDefaultKsqlClientFactory.java : Java-File]
[NT -> base : Feature]
	[NT -> ksqldb-rest-app : Folder]
		[NT -> src : Folder]
			[NT -> test : Folder]
				[NT -> java : Folder]
					[NT -> io : Folder]
						[NT -> confluent : Folder]
							[NT -> ksql : Folder]
								[NT -> rest : Folder]
									[NT -> server : Folder]
										[NT -> services : Folder]
											[NT -> TestDefaultKsqlClientFactory.java : Java-File]
												[NT -> - : CompilationUnit]
													[T -> - : PackageDeclaration "package io.confluent.ksql.rest.server.services;" compose:Replacement merge: Default]
													[T -> io.confluent.ksql.services.SimpleKsqlClient{ImportPackage} : ImportDeclaration "import io.confluent.ksql.services.SimpleKsqlClient;" compose:Replacement merge: Default]
													[T -> java.util.Map{ImportPackage} : ImportDeclaration "import java.util.Map;" compose:Replacement merge: Default]
													[T -> java.util.Optional{ImportPackage} : ImportDeclaration "import java.util.Optional;" compose:Replacement merge: Default]
													[NT -> TestDefaultKsqlClientFactory : ClassDeclaration]
														[T -> - : Modifiers "public" compose:Replacement merge: SemanticConflict]
														[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
														[T -> TestDefaultKsqlClientFactory : Id "TestDefaultKsqlClientFactory" compose:Replacement merge: Default]
														[T -> instance(Map<String,Object>-Map<String,Object>) : MethodDecl "public static SimpleKsqlClient instance(Map<String, Object> clientProps) {     return new DefaultKsqlClient(Optional.empty(), clientProps);   }" compose:Replacement merge: LineBased]
[NT -> right : Feature]
	[NT -> ksqldb-rest-app : Folder]
		[NT -> src : Folder]
			[NT -> test : Folder]
				[NT -> java : Folder]
					[NT -> io : Folder]
						[NT -> confluent : Folder]
							[NT -> ksql : Folder]
								[NT -> rest : Folder]
									[NT -> server : Folder]
										[NT -> services : Folder]
											[NT -> TestDefaultKsqlClientFactory.java : Java-File]
[NT -> left : Feature]
	[NT -> ksqldb-rest-app : Folder]
		[NT -> src : Folder]
			[NT -> test : Folder]
				[NT -> java : Folder]
					[NT -> io : Folder]
						[NT -> confluent : Folder]
							[NT -> ksql : Folder]
								[NT -> rest : Folder]
									[NT -> server : Folder]
										[NT -> services : Folder]
											[NT -> TestDefaultKsqlClientFactory.java.merge : .java.merge-File]
												[T -> TestDefaultKsqlClientFactory.java : .java-Content "package io.confluent.ksql.rest.server.services;  import io.confluent.ksql.services.SimpleKsqlClient; import io.vertx.core.net.SocketAddress; import java.util.Map; import java.util.Optional; import java.util.function.BiFunction;  /**  * Factory for creating the DefaultKsqlClient.  This is a test class that makes it easy to create  * for functional testing, but keeps the package visibility for non test code.  */ public class TestDefaultKsqlClientFactory {    // Creates an instance with no auth   public static SimpleKsqlClient instance(Map<String, Object> clientProps) {     return new DefaultKsqlClient(Optional.empty(), clientProps, SocketAddress::inetSocketAddress);   }    // Creates an instance with no auth   public static SimpleKsqlClient instance(Map<String, Object> clientProps,       final BiFunction<Integer, String, SocketAddress> socketAddressFactory) {     return new DefaultKsqlClient(Optional.empty(), clientProps, socketAddressFactory);   }  } " compose:StringConcatenation merge: LineBased]
[NT -> base : Feature]
	[NT -> ksqldb-rest-app : Folder]
		[NT -> src : Folder]
			[NT -> test : Folder]
				[NT -> java : Folder]
					[NT -> io : Folder]
						[NT -> confluent : Folder]
							[NT -> ksql : Folder]
								[NT -> rest : Folder]
									[NT -> server : Folder]
										[NT -> services : Folder]
											[NT -> TestDefaultKsqlClientFactory.java.merge : .java.merge-File]
												[T -> TestDefaultKsqlClientFactory.java : .java-Content "package io.confluent.ksql.rest.server.services;  import io.confluent.ksql.services.SimpleKsqlClient; import java.util.Map; import java.util.Optional;  /**  * Factory for creating the DefaultKsqlClient.  This is a test class that makes it easy to create  * for functional testing, but keeps the package visibility for non test code.  */ public class TestDefaultKsqlClientFactory {    // Creates an instance with no auth   public static SimpleKsqlClient instance(Map<String, Object> clientProps) {     return new DefaultKsqlClient(Optional.empty(), clientProps);   }  } " compose:StringConcatenation merge: LineBased]
[NT -> right : Feature]
	[NT -> ksqldb-rest-app : Folder]
		[NT -> src : Folder]
			[NT -> test : Folder]
				[NT -> java : Folder]
					[NT -> io : Folder]
						[NT -> confluent : Folder]
							[NT -> ksql : Folder]
								[NT -> rest : Folder]
									[NT -> server : Folder]
										[NT -> services : Folder]
											[NT -> TestDefaultKsqlClientFactory.java.merge : .java.merge-File]
												[T -> TestDefaultKsqlClientFactory.java : .java-Content "package io.confluent.ksql.rest.server.services;  import io.confluent.ksql.services.SimpleKsqlClient; import io.vertx.core.net.SocketAddress; import java.util.Map; import java.util.Optional;  /**  * Factory for creating the DefaultKsqlClient.  This is a test class that makes it easy to create  * for functional testing, but keeps the package visibility for non test code.  */ public class TestDefaultKsqlClientFactory {    // Creates an instance with no auth   public static SimpleKsqlClient instance(Map<String, Object> clientProps) {     return new DefaultKsqlClient(Optional.empty(), clientProps, SocketAddress::inetSocketAddress);   }  } " compose:StringConcatenation merge: LineBased]
