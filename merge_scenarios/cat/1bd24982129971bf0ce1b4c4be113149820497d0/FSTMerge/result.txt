Found the following features in expression file:
left
base
right
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/cat-home/src/main/java/com/dianping/cat/report/page/network/JspViewer.java
[NT -> left : Feature]
	[NT -> cat-home : Folder]
		[NT -> src : Folder]
			[NT -> main : Folder]
				[NT -> java : Folder]
					[NT -> com : Folder]
						[NT -> dianping : Folder]
							[NT -> cat : Folder]
								[NT -> report : Folder]
									[NT -> page : Folder]
										[NT -> network : Folder]
											[NT -> JspViewer.java : Java-File]
												[NT -> - : CompilationUnit]
													[T -> - : PackageDeclaration "package com.dianping.cat.report.page.network;" compose:Replacement merge: Default]
													[T -> com.dianping.cat.report.ReportPage{ImportPackage} : ImportDeclaration "import com.dianping.cat.report.ReportPage;" compose:Replacement merge: Default]
													[T -> org.unidal.web.mvc.view.BaseJspViewer{ImportPackage} : ImportDeclaration "import org.unidal.web.mvc.view.BaseJspViewer;" compose:Replacement merge: Default]
													[NT -> JspViewer : ClassDeclaration]
														[T -> - : Modifiers "public" compose:Replacement merge: SemanticConflict]
														[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
														[T -> JspViewer : Id "JspViewer" compose:Replacement merge: Default]
														[T -> - : ExtendsList "extends BaseJspViewer<ReportPage, Action, Context, Model>" compose:Replacement merge: Default]
														[T -> getJspFilePath(Context-Context-Model-Model) : MethodDecl "@Override  protected String getJspFilePath(Context ctx, Model model) {   Action action = model.getAction();    switch (action) {   case NETWORK:    return JspFile.NETWORK.getPath();   case AGGREGATION:    return JspFile.DASHBOARD.getPath();   case NETTOPOLOGY:    return JspFile.NETTOPOLOGY.getPath();   }    throw new RuntimeException("Unknown action: " + action);  }" compose:Replacement merge: LineBased]
[NT -> base : Feature]
	[NT -> cat-home : Folder]
		[NT -> src : Folder]
			[NT -> main : Folder]
				[NT -> java : Folder]
					[NT -> com : Folder]
						[NT -> dianping : Folder]
							[NT -> cat : Folder]
								[NT -> report : Folder]
									[NT -> page : Folder]
										[NT -> network : Folder]
											[NT -> JspViewer.java : Java-File]
												[NT -> - : CompilationUnit]
													[T -> - : PackageDeclaration "package com.dianping.cat.report.page.network;" compose:Replacement merge: Default]
													[T -> com.dianping.cat.report.ReportPage{ImportPackage} : ImportDeclaration "import com.dianping.cat.report.ReportPage;" compose:Replacement merge: Default]
													[T -> org.unidal.web.mvc.view.BaseJspViewer{ImportPackage} : ImportDeclaration "import org.unidal.web.mvc.view.BaseJspViewer;" compose:Replacement merge: Default]
													[NT -> JspViewer : ClassDeclaration]
														[T -> - : Modifiers "public" compose:Replacement merge: SemanticConflict]
														[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
														[T -> JspViewer : Id "JspViewer" compose:Replacement merge: Default]
														[T -> - : ExtendsList "extends BaseJspViewer<ReportPage, Action, Context, Model>" compose:Replacement merge: Default]
														[T -> getJspFilePath(Context-Context-Model-Model) : MethodDecl "@Override  protected String getJspFilePath(Context ctx, Model model) {   Action action = model.getAction();    switch (action) {   case NETWORK:    return JspFile.NETWORK.getPath();   case AGGREGATION:    return JspFile.DASHBOARD.getPath();   }    throw new RuntimeException("Unknown action: " + action);  }" compose:Replacement merge: LineBased]
[NT -> right : Feature]
	[NT -> cat-home : Folder]
		[NT -> src : Folder]
			[NT -> main : Folder]
				[NT -> java : Folder]
					[NT -> com : Folder]
						[NT -> dianping : Folder]
							[NT -> cat : Folder]
								[NT -> report : Folder]
									[NT -> page : Folder]
										[NT -> network : Folder]
											[NT -> JspViewer.java : Java-File]
												[NT -> - : CompilationUnit]
													[T -> - : PackageDeclaration "package com.dianping.cat.report.page.network;" compose:Replacement merge: Default]
													[T -> com.dianping.cat.report.ReportPage{ImportPackage} : ImportDeclaration "import com.dianping.cat.report.ReportPage;" compose:Replacement merge: Default]
													[T -> org.unidal.web.mvc.view.BaseJspViewer{ImportPackage} : ImportDeclaration "import org.unidal.web.mvc.view.BaseJspViewer;" compose:Replacement merge: Default]
													[NT -> JspViewer : ClassDeclaration]
														[T -> - : Modifiers "public" compose:Replacement merge: SemanticConflict]
														[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
														[T -> JspViewer : Id "JspViewer" compose:Replacement merge: Default]
														[T -> - : ExtendsList "extends BaseJspViewer<ReportPage, Action, Context, Model>" compose:Replacement merge: Default]
														[T -> getJspFilePath(Context-Context-Model-Model) : MethodDecl "@Override  protected String getJspFilePath(Context ctx, Model model) {   Action action = model.getAction();    switch (action) {   case NETWORK:    return JspFile.NETWORK.getPath();   case AGGREGATION:    return JspFile.AGGREGATION.getPath();   }    throw new RuntimeException("Unknown action: " + action);  }" compose:Replacement merge: LineBased]
[NT -> left : Feature]
	[NT -> cat-home : Folder]
		[NT -> src : Folder]
			[NT -> main : Folder]
				[NT -> java : Folder]
					[NT -> com : Folder]
						[NT -> dianping : Folder]
							[NT -> cat : Folder]
								[NT -> report : Folder]
									[NT -> page : Folder]
										[NT -> network : Folder]
											[NT -> JspViewer.java.merge : .java.merge-File]
												[T -> JspViewer.java : .java-Content "package com.dianping.cat.report.page.network;  import com.dianping.cat.report.ReportPage; import org.unidal.web.mvc.view.BaseJspViewer;  public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {  @Override  protected String getJspFilePath(Context ctx, Model model) {   Action action = model.getAction();    switch (action) {   case NETWORK:    return JspFile.NETWORK.getPath();   case AGGREGATION:    return JspFile.DASHBOARD.getPath();   case NETTOPOLOGY:    return JspFile.NETTOPOLOGY.getPath();   }    throw new RuntimeException("Unknown action: " + action);  } } " compose:StringConcatenation merge: LineBased]
[NT -> base : Feature]
	[NT -> cat-home : Folder]
		[NT -> src : Folder]
			[NT -> main : Folder]
				[NT -> java : Folder]
					[NT -> com : Folder]
						[NT -> dianping : Folder]
							[NT -> cat : Folder]
								[NT -> report : Folder]
									[NT -> page : Folder]
										[NT -> network : Folder]
											[NT -> JspViewer.java.merge : .java.merge-File]
												[T -> JspViewer.java : .java-Content "package com.dianping.cat.report.page.network;  import com.dianping.cat.report.ReportPage; import org.unidal.web.mvc.view.BaseJspViewer;  public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {  @Override  protected String getJspFilePath(Context ctx, Model model) {   Action action = model.getAction();    switch (action) {   case NETWORK:    return JspFile.NETWORK.getPath();   case AGGREGATION:    return JspFile.DASHBOARD.getPath();   }    throw new RuntimeException("Unknown action: " + action);  } } " compose:StringConcatenation merge: LineBased]
[NT -> right : Feature]
	[NT -> cat-home : Folder]
		[NT -> src : Folder]
			[NT -> main : Folder]
				[NT -> java : Folder]
					[NT -> com : Folder]
						[NT -> dianping : Folder]
							[NT -> cat : Folder]
								[NT -> report : Folder]
									[NT -> page : Folder]
										[NT -> network : Folder]
											[NT -> JspViewer.java.merge : .java.merge-File]
												[T -> JspViewer.java : .java-Content "package com.dianping.cat.report.page.network;  import com.dianping.cat.report.ReportPage; import org.unidal.web.mvc.view.BaseJspViewer;  public class JspViewer extends BaseJspViewer<ReportPage, Action, Context, Model> {  @Override  protected String getJspFilePath(Context ctx, Model model) {   Action action = model.getAction();    switch (action) {   case NETWORK:    return JspFile.NETWORK.getPath();   case AGGREGATION:    return JspFile.AGGREGATION.getPath();   }    throw new RuntimeException("Unknown action: " + action);  } } " compose:StringConcatenation merge: LineBased]
