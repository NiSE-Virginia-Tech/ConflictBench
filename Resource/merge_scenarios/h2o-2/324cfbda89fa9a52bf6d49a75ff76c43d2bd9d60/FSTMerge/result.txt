Found the following features in expression file:
left
base
right
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/src/test/java/hex/DeepLearningProstateTest.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/src/test/java/hex/DeepLearningProstateTest.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/codeStyleSettings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/modules.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/encodings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/compiler.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/uiDesigner.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/gradle.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/vcs.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/misc.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/copyright/profiles_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/scopes/scope_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/lib.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/jets3t.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/apache.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/s3.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/jogamp.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/junit.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/log4j.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/gson.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/jama.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/mockito.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/poi.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/cdh3.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/joda_time_2_3.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/h2o-cookbook/.idea/libraries/h2o.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/R/tests/.idea/modules.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/R/tests/.idea/uiDesigner.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/R/tests/.idea/misc.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/R/tests/.idea/inspectionProfiles/Project_Default.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/R/tests/.idea/inspectionProfiles/profiles_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/R/tests/.idea/copyright/profiles_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/R/tests/.idea/scopes/scope_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/src/test/java/hex/DeepLearningProstateTest.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/src/test/java/hex/DeepLearningProstateTest.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/codeStyleSettings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/modules.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/encodings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/compiler.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/uiDesigner.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/gradle.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/vcs.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/misc.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/copyright/profiles_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/scopes/scope_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/lib.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/jets3t.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/apache.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/s3.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/jogamp.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/junit.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/log4j.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/gson.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/jama.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/mockito.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/poi.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/cdh3.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/joda_time_2_3.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/h2o-cookbook/.idea/libraries/h2o.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/R/tests/.idea/modules.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/R/tests/.idea/uiDesigner.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/R/tests/.idea/misc.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/R/tests/.idea/inspectionProfiles/Project_Default.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/R/tests/.idea/inspectionProfiles/profiles_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/R/tests/.idea/copyright/profiles_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/R/tests/.idea/scopes/scope_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/src/test/java/hex/DeepLearningProstateTest.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/src/test/java/hex/DeepLearningProstateTest.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/codeStyleSettings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/modules.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/encodings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/compiler.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/uiDesigner.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/gradle.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/vcs.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/misc.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/copyright/profiles_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/scopes/scope_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/lib.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/jets3t.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/apache.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/s3.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/jogamp.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/junit.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/log4j.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/gson.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/jama.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/mockito.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/poi.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/cdh3.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/joda_time_2_3.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/h2o-cookbook/.idea/libraries/h2o.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/R/tests/.idea/modules.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/R/tests/.idea/uiDesigner.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/R/tests/.idea/misc.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/R/tests/.idea/inspectionProfiles/Project_Default.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/R/tests/.idea/inspectionProfiles/profiles_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/R/tests/.idea/copyright/profiles_settings.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/R/tests/.idea/scopes/scope_settings.xml
[NT -> left : Feature]
	[NT -> h2o-cookbook : Folder]
		[NT -> .idea : Folder]
			[NT -> codeStyleSettings.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> ProjectCodeStyleSettingsManager : component]
						[T -> name : attribute "ProjectCodeStyleSettingsManager" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectCodeStyleSettingsManager" compose:Replacement merge: Default]
						[NT -> PER_PROJECT_SETTINGS : option]
							[T -> name : attribute "PER_PROJECT_SETTINGS" compose:Replacement merge: Default]
							[T -> name : attribute "PER_PROJECT_SETTINGS" compose:Replacement merge: Default]
							[NT ->  : value]
								[NT ->  : XML]
									[NT -> XML_LEGACY_SETTINGS_IMPORTED : option]
										[T -> name : attribute "XML_LEGACY_SETTINGS_IMPORTED" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[T -> name : attribute "XML_LEGACY_SETTINGS_IMPORTED" compose:Replacement merge: Default]
			[NT -> modules.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> ProjectModuleManager : component]
						[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
						[NT ->  : modules]
							[NT ->  : module]
								[T -> filepath : attribute "$PROJECT_DIR$/src/test/test.iml" compose:Replacement merge: Default]
								[T -> fileurl : attribute "file://$PROJECT_DIR$/src/test/test.iml" compose:Replacement merge: Default]
			[NT -> encodings.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> Encoding : component]
						[T -> name : attribute "Encoding" compose:Replacement merge: Default]
						[T -> native2AsciiForPropertiesFiles : attribute "false" compose:Replacement merge: Default]
						[T -> useUTFGuessing : attribute "true" compose:Replacement merge: Default]
						[T -> name : attribute "Encoding" compose:Replacement merge: Default]
			[NT -> compiler.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> CompilerConfiguration : component]
						[T -> name : attribute "CompilerConfiguration" compose:Replacement merge: Default]
						[T -> name : attribute "CompilerConfiguration" compose:Replacement merge: Default]
						[NT -> DEFAULT_COMPILER : option]
							[T -> name : attribute "DEFAULT_COMPILER" compose:Replacement merge: Default]
							[T -> value : attribute "Javac" compose:Replacement merge: Default]
							[T -> name : attribute "DEFAULT_COMPILER" compose:Replacement merge: Default]
						[NT ->  : resourceExtensions]
						[NT ->  : wildcardResourcePatterns]
							[NT -> !?*.java : entry]
								[T -> name : attribute "!?*.java" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.java" compose:Replacement merge: Default]
							[NT -> !?*.form : entry]
								[T -> name : attribute "!?*.form" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.form" compose:Replacement merge: Default]
							[NT -> !?*.class : entry]
								[T -> name : attribute "!?*.class" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.class" compose:Replacement merge: Default]
							[NT -> !?*.groovy : entry]
								[T -> name : attribute "!?*.groovy" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.groovy" compose:Replacement merge: Default]
							[NT -> !?*.scala : entry]
								[T -> name : attribute "!?*.scala" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.scala" compose:Replacement merge: Default]
							[NT -> !?*.flex : entry]
								[T -> name : attribute "!?*.flex" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.flex" compose:Replacement merge: Default]
							[NT -> !?*.kt : entry]
								[T -> name : attribute "!?*.kt" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.kt" compose:Replacement merge: Default]
							[NT -> !?*.clj : entry]
								[T -> name : attribute "!?*.clj" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.clj" compose:Replacement merge: Default]
						[NT ->  : annotationProcessing]
							[NT -> Default : profile]
								[T -> default : attribute "true" compose:Replacement merge: Default]
								[T -> enabled : attribute "false" compose:Replacement merge: Default]
								[T -> name : attribute "Default" compose:Replacement merge: Default]
								[T -> name : attribute "Default" compose:Replacement merge: Default]
								[NT ->  : processorPath]
									[T -> useClasspath : attribute "true" compose:Replacement merge: Default]
			[NT -> uiDesigner.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> Palette2 : component]
						[T -> name : attribute "Palette2" compose:Replacement merge: Default]
						[T -> name : attribute "Palette2" compose:Replacement merge: Default]
						[NT -> Swing : group]
							[T -> name : attribute "Swing" compose:Replacement merge: Default]
							[T -> name : attribute "Swing" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "com.intellij.uiDesigner.HSpacer" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/hspacer.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[T -> tooltip-text : attribute "Horizontal Spacer" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "1" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "com.intellij.uiDesigner.VSpacer" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/vspacer.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[T -> tooltip-text : attribute "Vertical Spacer" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "2" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "1" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JPanel" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/panel.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JScrollPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "7" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "7" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JButton" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/button.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "Button" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JRadioButton" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/radioButton.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "0" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "RadioButton" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JCheckBox" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/checkBox.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "0" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "CheckBox" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JLabel" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/label.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "0" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "Label" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTextField" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/textField.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "-1" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JPasswordField" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/passwordField.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "-1" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JFormattedTextField" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/formattedTextField.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "-1" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTextArea" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/textArea.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTextPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/textPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JEditorPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/editorPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JComboBox" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/comboBox.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTable" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/table.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JList" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/list.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTree" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/tree.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTabbedPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/tabbedPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "200" compose:Replacement merge: Default]
										[T -> width : attribute "200" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSplitPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/splitPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "200" compose:Replacement merge: Default]
										[T -> width : attribute "200" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSpinner" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/spinner.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSlider" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/slider.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSeparator" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/separator.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JProgressBar" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/progressbar.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JToolBar" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbar.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "20" compose:Replacement merge: Default]
										[T -> width : attribute "-1" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JToolBar$Separator" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbarSeparator.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JScrollBar" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollbar.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "2" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
			[NT -> gradle.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
			[NT -> vcs.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> VcsDirectoryMappings : component]
						[T -> name : attribute "VcsDirectoryMappings" compose:Replacement merge: Default]
						[T -> name : attribute "VcsDirectoryMappings" compose:Replacement merge: Default]
						[NT ->  : mapping]
							[T -> directory : attribute "" compose:Replacement merge: Default]
							[T -> vcs : attribute "" compose:Replacement merge: Default]
						[NT ->  : mapping]
							[T -> directory : attribute "$PROJECT_DIR$/.." compose:Replacement merge: Default]
							[T -> vcs : attribute "Git" compose:Replacement merge: Default]
			[NT -> misc.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> EntryPointsManager : component]
						[T -> name : attribute "EntryPointsManager" compose:Replacement merge: Default]
						[T -> name : attribute "EntryPointsManager" compose:Replacement merge: Default]
						[NT ->  : entry_points]
							[T -> version : attribute "2.0" compose:Replacement merge: Default]
					[NT -> IdProvider : component]
						[T -> IDEtalkID : attribute "C456CDD4CCAB951B7CEAAEB5041242D8" compose:Replacement merge: Default]
						[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
						[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
					[NT -> JavadocGenerationManager : component]
						[T -> name : attribute "JavadocGenerationManager" compose:Replacement merge: Default]
						[T -> name : attribute "JavadocGenerationManager" compose:Replacement merge: Default]
						[NT -> OUTPUT_DIRECTORY : option]
							[T -> name : attribute "OUTPUT_DIRECTORY" compose:Replacement merge: Default]
							[T -> value : attribute "$PROJECT_DIR$/../target/cookbook-javadoc" compose:Replacement merge: Default]
							[T -> name : attribute "OUTPUT_DIRECTORY" compose:Replacement merge: Default]
						[NT -> OPTION_SCOPE : option]
							[T -> name : attribute "OPTION_SCOPE" compose:Replacement merge: Default]
							[T -> value : attribute "protected" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_SCOPE" compose:Replacement merge: Default]
						[NT -> OPTION_HIERARCHY : option]
							[T -> name : attribute "OPTION_HIERARCHY" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_HIERARCHY" compose:Replacement merge: Default]
						[NT -> OPTION_NAVIGATOR : option]
							[T -> name : attribute "OPTION_NAVIGATOR" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_NAVIGATOR" compose:Replacement merge: Default]
						[NT -> OPTION_INDEX : option]
							[T -> name : attribute "OPTION_INDEX" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_INDEX" compose:Replacement merge: Default]
						[NT -> OPTION_SEPARATE_INDEX : option]
							[T -> name : attribute "OPTION_SEPARATE_INDEX" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_SEPARATE_INDEX" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_USE : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_USE" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_USE" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_AUTHOR : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_AUTHOR" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_AUTHOR" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_VERSION : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_VERSION" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_VERSION" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_DEPRECATED : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_DEPRECATED" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_DEPRECATED" compose:Replacement merge: Default]
						[NT -> OPTION_DEPRECATED_LIST : option]
							[T -> name : attribute "OPTION_DEPRECATED_LIST" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DEPRECATED_LIST" compose:Replacement merge: Default]
						[NT -> OTHER_OPTIONS : option]
							[T -> name : attribute "OTHER_OPTIONS" compose:Replacement merge: Default]
							[T -> value : attribute "-overview /Users/tomk/0xdata/ws/h2o/h2o-cookbook/src/test/java/overview.html" compose:Replacement merge: Default]
							[T -> name : attribute "OTHER_OPTIONS" compose:Replacement merge: Default]
						[NT -> HEAP_SIZE : option]
							[T -> name : attribute "HEAP_SIZE" compose:Replacement merge: Default]
							[T -> name : attribute "HEAP_SIZE" compose:Replacement merge: Default]
						[NT -> LOCALE : option]
							[T -> name : attribute "LOCALE" compose:Replacement merge: Default]
							[T -> name : attribute "LOCALE" compose:Replacement merge: Default]
						[NT -> OPEN_IN_BROWSER : option]
							[T -> name : attribute "OPEN_IN_BROWSER" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPEN_IN_BROWSER" compose:Replacement merge: Default]
						[NT -> OPTION_INCLUDE_LIBS : option]
							[T -> name : attribute "OPTION_INCLUDE_LIBS" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_INCLUDE_LIBS" compose:Replacement merge: Default]
					[NT -> ProjectRootManager : component]
						[T -> assert-keyword : attribute "true" compose:Replacement merge: Default]
						[T -> jdk-15 : attribute "true" compose:Replacement merge: Default]
						[T -> languageLevel : attribute "JDK_1_6" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
						[T -> project-jdk-name : attribute "1.7" compose:Replacement merge: Default]
						[T -> project-jdk-type : attribute "JavaSDK" compose:Replacement merge: Default]
						[T -> version : attribute "2" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
						[NT ->  : output]
							[T -> url : attribute "file://$PROJECT_DIR$/out" compose:Replacement merge: Default]
			[NT -> copyright : Folder]
				[NT -> profiles_settings.xml : XML-File]
					[NT -> CopyrightManager : component]
						[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
						[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
						[NT ->  : settings]
							[T -> default : attribute "" compose:Replacement merge: Default]
			[NT -> scopes : Folder]
				[NT -> scope_settings.xml : XML-File]
					[NT -> DependencyValidationManager : component]
						[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
						[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
						[NT ->  : state]
							[NT -> SKIP_IMPORT_STATEMENTS : option]
								[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
			[NT -> libraries : Folder]
				[NT -> lib.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> lib : library]
							[T -> name : attribute "lib" compose:Replacement merge: Default]
							[T -> name : attribute "lib" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
				[NT -> jets3t.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> jets3t : library]
							[T -> name : attribute "jets3t" compose:Replacement merge: Default]
							[T -> name : attribute "jets3t" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
				[NT -> apache.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> apache : library]
							[T -> name : attribute "apache" compose:Replacement merge: Default]
							[T -> name : attribute "apache" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
				[NT -> s3.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> s3 : library]
							[T -> name : attribute "s3" compose:Replacement merge: Default]
							[T -> name : attribute "s3" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
				[NT -> jogamp.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> jogamp : library]
							[T -> name : attribute "jogamp" compose:Replacement merge: Default]
							[T -> name : attribute "jogamp" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
				[NT -> junit.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> junit : library]
							[T -> name : attribute "junit" compose:Replacement merge: Default]
							[T -> name : attribute "junit" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
				[NT -> log4j.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> log4j : library]
							[T -> name : attribute "log4j" compose:Replacement merge: Default]
							[T -> name : attribute "log4j" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
				[NT -> gson.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> gson : library]
							[T -> name : attribute "gson" compose:Replacement merge: Default]
							[T -> name : attribute "gson" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
				[NT -> jama.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> jama : library]
							[T -> name : attribute "jama" compose:Replacement merge: Default]
							[T -> name : attribute "jama" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
				[NT -> mockito.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> mockito : library]
							[T -> name : attribute "mockito" compose:Replacement merge: Default]
							[T -> name : attribute "mockito" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
				[NT -> poi.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> poi : library]
							[T -> name : attribute "poi" compose:Replacement merge: Default]
							[T -> name : attribute "poi" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
				[NT -> cdh3.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> cdh3 : library]
							[T -> name : attribute "cdh3" compose:Replacement merge: Default]
							[T -> name : attribute "cdh3" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
				[NT -> joda_time_2_3.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> joda-time-2.3 : library]
							[T -> name : attribute "joda-time-2.3" compose:Replacement merge: Default]
							[T -> name : attribute "joda-time-2.3" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "jar://$PROJECT_DIR$/../lib/joda/joda-time-2.3.jar!/" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
				[NT -> h2o.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> h2o : library]
							[T -> name : attribute "h2o" compose:Replacement merge: Default]
							[T -> name : attribute "h2o" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "jar://$PROJECT_DIR$/../target/h2o.jar!/" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "jar://$PROJECT_DIR$/../target/h2o-sources.jar!/" compose:Replacement merge: Default]
	[NT -> R : Folder]
		[NT -> tests : Folder]
			[NT -> .idea : Folder]
				[NT -> modules.xml : XML-File]
					[NT ->  : project]
						[T -> version : attribute "4" compose:Replacement merge: Default]
						[NT -> ProjectModuleManager : component]
							[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
							[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
							[NT ->  : modules]
								[NT ->  : module]
									[T -> filepath : attribute "$PROJECT_DIR$/tests.iml" compose:Replacement merge: Default]
									[T -> fileurl : attribute "file://$PROJECT_DIR$/tests.iml" compose:Replacement merge: Default]
				[NT -> uiDesigner.xml : XML-File]
					[NT ->  : project]
						[T -> version : attribute "4" compose:Replacement merge: Default]
						[NT -> Palette2 : component]
							[T -> name : attribute "Palette2" compose:Replacement merge: Default]
							[T -> name : attribute "Palette2" compose:Replacement merge: Default]
							[NT -> Swing : group]
								[T -> name : attribute "Swing" compose:Replacement merge: Default]
								[T -> name : attribute "Swing" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "com.intellij.uiDesigner.HSpacer" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/hspacer.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[T -> tooltip-text : attribute "Horizontal Spacer" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "1" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "com.intellij.uiDesigner.VSpacer" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/vspacer.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[T -> tooltip-text : attribute "Vertical Spacer" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "2" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "1" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JPanel" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/panel.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JScrollPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "7" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "7" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JButton" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/button.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "Button" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JRadioButton" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/radioButton.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "0" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "RadioButton" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JCheckBox" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/checkBox.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "0" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "CheckBox" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JLabel" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/label.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "0" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "Label" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTextField" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/textField.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "-1" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JPasswordField" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/passwordField.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "-1" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JFormattedTextField" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/formattedTextField.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "-1" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTextArea" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/textArea.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTextPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/textPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JEditorPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/editorPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JComboBox" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/comboBox.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTable" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/table.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JList" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/list.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTree" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/tree.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTabbedPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/tabbedPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "200" compose:Replacement merge: Default]
											[T -> width : attribute "200" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSplitPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/splitPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "200" compose:Replacement merge: Default]
											[T -> width : attribute "200" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSpinner" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/spinner.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSlider" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/slider.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSeparator" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/separator.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JProgressBar" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/progressbar.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JToolBar" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbar.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "20" compose:Replacement merge: Default]
											[T -> width : attribute "-1" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JToolBar$Separator" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbarSeparator.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JScrollBar" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollbar.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "2" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
				[NT -> misc.xml : XML-File]
					[NT ->  : project]
						[T -> version : attribute "4" compose:Replacement merge: Default]
						[NT -> IdProvider : component]
							[T -> IDEtalkID : attribute "71BF6219F8210A6EC9FBEBE448179BA5" compose:Replacement merge: Default]
							[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
							[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
						[NT -> ProjectRootManager : component]
							[T -> assert-keyword : attribute "true" compose:Replacement merge: Default]
							[T -> jdk-15 : attribute "true" compose:Replacement merge: Default]
							[T -> languageLevel : attribute "JDK_1_6" compose:Replacement merge: Default]
							[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
							[T -> project-jdk-name : attribute "Python 2.7.5 (/usr/bin/python)" compose:Replacement merge: Default]
							[T -> project-jdk-type : attribute "Python SDK" compose:Replacement merge: Default]
							[T -> version : attribute "2" compose:Replacement merge: Default]
							[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
							[NT ->  : output]
								[T -> url : attribute "file://$PROJECT_DIR$/out" compose:Replacement merge: Default]
				[NT -> inspectionProfiles : Folder]
					[NT -> Project_Default.xml : XML-File]
						[NT -> InspectionProjectProfileManager : component]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[NT ->  : profile]
								[T -> is_locked : attribute "false" compose:Replacement merge: Default]
								[T -> version : attribute "1.0" compose:Replacement merge: Default]
								[NT -> myName : option]
									[T -> name : attribute "myName" compose:Replacement merge: Default]
									[T -> value : attribute "Project Default" compose:Replacement merge: Default]
									[T -> name : attribute "myName" compose:Replacement merge: Default]
								[NT -> myLocal : option]
									[T -> name : attribute "myLocal" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[T -> name : attribute "myLocal" compose:Replacement merge: Default]
								[NT ->  : inspection_tool]
									[T -> class : attribute "PyRedundantParenthesesInspection" compose:Replacement merge: Default]
									[T -> enabled : attribute "false" compose:Replacement merge: Default]
									[T -> enabled_by_default : attribute "false" compose:Replacement merge: Default]
									[T -> level : attribute "WEAK WARNING" compose:Replacement merge: Default]
									[NT -> myIgnorePercOperator : option]
										[T -> name : attribute "myIgnorePercOperator" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "myIgnorePercOperator" compose:Replacement merge: Default]
									[NT -> myIgnoreTupleInReturn : option]
										[T -> name : attribute "myIgnoreTupleInReturn" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "myIgnoreTupleInReturn" compose:Replacement merge: Default]
								[NT ->  : inspection_tool]
									[T -> class : attribute "SpellCheckingInspection" compose:Replacement merge: Default]
									[T -> enabled : attribute "true" compose:Replacement merge: Default]
									[T -> enabled_by_default : attribute "true" compose:Replacement merge: Default]
									[T -> level : attribute "TYPO" compose:Replacement merge: Default]
									[NT -> processCode : option]
										[T -> name : attribute "processCode" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "processCode" compose:Replacement merge: Default]
									[NT -> processLiterals : option]
										[T -> name : attribute "processLiterals" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "processLiterals" compose:Replacement merge: Default]
									[NT -> processComments : option]
										[T -> name : attribute "processComments" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[T -> name : attribute "processComments" compose:Replacement merge: Default]
					[NT -> profiles_settings.xml : XML-File]
						[NT -> InspectionProjectProfileManager : component]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[NT ->  : settings]
								[NT -> PROJECT_PROFILE : option]
									[T -> name : attribute "PROJECT_PROFILE" compose:Replacement merge: Default]
									[T -> value : attribute "Project Default" compose:Replacement merge: Default]
									[T -> name : attribute "PROJECT_PROFILE" compose:Replacement merge: Default]
								[NT -> USE_PROJECT_PROFILE : option]
									[T -> name : attribute "USE_PROJECT_PROFILE" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[T -> name : attribute "USE_PROJECT_PROFILE" compose:Replacement merge: Default]
								[NT ->  : version]
									[T -> value : attribute "1.0" compose:Replacement merge: Default]
				[NT -> copyright : Folder]
					[NT -> profiles_settings.xml : XML-File]
						[NT -> CopyrightManager : component]
							[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
							[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
							[NT ->  : settings]
								[T -> default : attribute "" compose:Replacement merge: Default]
				[NT -> scopes : Folder]
					[NT -> scope_settings.xml : XML-File]
						[NT -> DependencyValidationManager : component]
							[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
							[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
							[NT ->  : state]
								[NT -> SKIP_IMPORT_STATEMENTS : option]
									[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
[NT -> base : Feature]
	[NT -> h2o-cookbook : Folder]
		[NT -> .idea : Folder]
			[NT -> codeStyleSettings.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> ProjectCodeStyleSettingsManager : component]
						[T -> name : attribute "ProjectCodeStyleSettingsManager" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectCodeStyleSettingsManager" compose:Replacement merge: Default]
						[NT -> PER_PROJECT_SETTINGS : option]
							[T -> name : attribute "PER_PROJECT_SETTINGS" compose:Replacement merge: Default]
							[T -> name : attribute "PER_PROJECT_SETTINGS" compose:Replacement merge: Default]
							[NT ->  : value]
								[NT ->  : XML]
									[NT -> XML_LEGACY_SETTINGS_IMPORTED : option]
										[T -> name : attribute "XML_LEGACY_SETTINGS_IMPORTED" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[T -> name : attribute "XML_LEGACY_SETTINGS_IMPORTED" compose:Replacement merge: Default]
			[NT -> modules.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> ProjectModuleManager : component]
						[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
						[NT ->  : modules]
							[NT ->  : module]
								[T -> filepath : attribute "$PROJECT_DIR$/src/test/test.iml" compose:Replacement merge: Default]
								[T -> fileurl : attribute "file://$PROJECT_DIR$/src/test/test.iml" compose:Replacement merge: Default]
			[NT -> encodings.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> Encoding : component]
						[T -> name : attribute "Encoding" compose:Replacement merge: Default]
						[T -> native2AsciiForPropertiesFiles : attribute "false" compose:Replacement merge: Default]
						[T -> useUTFGuessing : attribute "true" compose:Replacement merge: Default]
						[T -> name : attribute "Encoding" compose:Replacement merge: Default]
			[NT -> compiler.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> CompilerConfiguration : component]
						[T -> name : attribute "CompilerConfiguration" compose:Replacement merge: Default]
						[T -> name : attribute "CompilerConfiguration" compose:Replacement merge: Default]
						[NT -> DEFAULT_COMPILER : option]
							[T -> name : attribute "DEFAULT_COMPILER" compose:Replacement merge: Default]
							[T -> value : attribute "Javac" compose:Replacement merge: Default]
							[T -> name : attribute "DEFAULT_COMPILER" compose:Replacement merge: Default]
						[NT ->  : resourceExtensions]
						[NT ->  : wildcardResourcePatterns]
							[NT -> !?*.java : entry]
								[T -> name : attribute "!?*.java" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.java" compose:Replacement merge: Default]
							[NT -> !?*.form : entry]
								[T -> name : attribute "!?*.form" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.form" compose:Replacement merge: Default]
							[NT -> !?*.class : entry]
								[T -> name : attribute "!?*.class" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.class" compose:Replacement merge: Default]
							[NT -> !?*.groovy : entry]
								[T -> name : attribute "!?*.groovy" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.groovy" compose:Replacement merge: Default]
							[NT -> !?*.scala : entry]
								[T -> name : attribute "!?*.scala" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.scala" compose:Replacement merge: Default]
							[NT -> !?*.flex : entry]
								[T -> name : attribute "!?*.flex" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.flex" compose:Replacement merge: Default]
							[NT -> !?*.kt : entry]
								[T -> name : attribute "!?*.kt" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.kt" compose:Replacement merge: Default]
							[NT -> !?*.clj : entry]
								[T -> name : attribute "!?*.clj" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.clj" compose:Replacement merge: Default]
						[NT ->  : annotationProcessing]
							[NT -> Default : profile]
								[T -> default : attribute "true" compose:Replacement merge: Default]
								[T -> enabled : attribute "false" compose:Replacement merge: Default]
								[T -> name : attribute "Default" compose:Replacement merge: Default]
								[T -> name : attribute "Default" compose:Replacement merge: Default]
								[NT ->  : processorPath]
									[T -> useClasspath : attribute "true" compose:Replacement merge: Default]
			[NT -> uiDesigner.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> Palette2 : component]
						[T -> name : attribute "Palette2" compose:Replacement merge: Default]
						[T -> name : attribute "Palette2" compose:Replacement merge: Default]
						[NT -> Swing : group]
							[T -> name : attribute "Swing" compose:Replacement merge: Default]
							[T -> name : attribute "Swing" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "com.intellij.uiDesigner.HSpacer" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/hspacer.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[T -> tooltip-text : attribute "Horizontal Spacer" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "1" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "com.intellij.uiDesigner.VSpacer" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/vspacer.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[T -> tooltip-text : attribute "Vertical Spacer" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "2" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "1" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JPanel" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/panel.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JScrollPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "7" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "7" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JButton" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/button.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "Button" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JRadioButton" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/radioButton.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "0" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "RadioButton" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JCheckBox" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/checkBox.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "0" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "CheckBox" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JLabel" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/label.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "0" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "Label" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTextField" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/textField.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "-1" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JPasswordField" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/passwordField.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "-1" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JFormattedTextField" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/formattedTextField.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "-1" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTextArea" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/textArea.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTextPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/textPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JEditorPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/editorPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JComboBox" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/comboBox.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTable" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/table.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JList" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/list.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTree" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/tree.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTabbedPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/tabbedPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "200" compose:Replacement merge: Default]
										[T -> width : attribute "200" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSplitPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/splitPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "200" compose:Replacement merge: Default]
										[T -> width : attribute "200" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSpinner" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/spinner.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSlider" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/slider.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSeparator" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/separator.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JProgressBar" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/progressbar.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JToolBar" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbar.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "20" compose:Replacement merge: Default]
										[T -> width : attribute "-1" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JToolBar$Separator" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbarSeparator.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JScrollBar" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollbar.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "2" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
			[NT -> gradle.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
			[NT -> vcs.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> VcsDirectoryMappings : component]
						[T -> name : attribute "VcsDirectoryMappings" compose:Replacement merge: Default]
						[T -> name : attribute "VcsDirectoryMappings" compose:Replacement merge: Default]
						[NT ->  : mapping]
							[T -> directory : attribute "" compose:Replacement merge: Default]
							[T -> vcs : attribute "" compose:Replacement merge: Default]
						[NT ->  : mapping]
							[T -> directory : attribute "$PROJECT_DIR$/.." compose:Replacement merge: Default]
							[T -> vcs : attribute "Git" compose:Replacement merge: Default]
			[NT -> misc.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> EntryPointsManager : component]
						[T -> name : attribute "EntryPointsManager" compose:Replacement merge: Default]
						[T -> name : attribute "EntryPointsManager" compose:Replacement merge: Default]
						[NT ->  : entry_points]
							[T -> version : attribute "2.0" compose:Replacement merge: Default]
					[NT -> IdProvider : component]
						[T -> IDEtalkID : attribute "C456CDD4CCAB951B7CEAAEB5041242D8" compose:Replacement merge: Default]
						[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
						[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
					[NT -> JavadocGenerationManager : component]
						[T -> name : attribute "JavadocGenerationManager" compose:Replacement merge: Default]
						[T -> name : attribute "JavadocGenerationManager" compose:Replacement merge: Default]
						[NT -> OUTPUT_DIRECTORY : option]
							[T -> name : attribute "OUTPUT_DIRECTORY" compose:Replacement merge: Default]
							[T -> value : attribute "$PROJECT_DIR$/../target/cookbook-javadoc" compose:Replacement merge: Default]
							[T -> name : attribute "OUTPUT_DIRECTORY" compose:Replacement merge: Default]
						[NT -> OPTION_SCOPE : option]
							[T -> name : attribute "OPTION_SCOPE" compose:Replacement merge: Default]
							[T -> value : attribute "protected" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_SCOPE" compose:Replacement merge: Default]
						[NT -> OPTION_HIERARCHY : option]
							[T -> name : attribute "OPTION_HIERARCHY" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_HIERARCHY" compose:Replacement merge: Default]
						[NT -> OPTION_NAVIGATOR : option]
							[T -> name : attribute "OPTION_NAVIGATOR" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_NAVIGATOR" compose:Replacement merge: Default]
						[NT -> OPTION_INDEX : option]
							[T -> name : attribute "OPTION_INDEX" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_INDEX" compose:Replacement merge: Default]
						[NT -> OPTION_SEPARATE_INDEX : option]
							[T -> name : attribute "OPTION_SEPARATE_INDEX" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_SEPARATE_INDEX" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_USE : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_USE" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_USE" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_AUTHOR : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_AUTHOR" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_AUTHOR" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_VERSION : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_VERSION" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_VERSION" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_DEPRECATED : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_DEPRECATED" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_DEPRECATED" compose:Replacement merge: Default]
						[NT -> OPTION_DEPRECATED_LIST : option]
							[T -> name : attribute "OPTION_DEPRECATED_LIST" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DEPRECATED_LIST" compose:Replacement merge: Default]
						[NT -> OTHER_OPTIONS : option]
							[T -> name : attribute "OTHER_OPTIONS" compose:Replacement merge: Default]
							[T -> value : attribute "-overview /Users/tomk/0xdata/ws/h2o/h2o-cookbook/src/test/java/overview.html" compose:Replacement merge: Default]
							[T -> name : attribute "OTHER_OPTIONS" compose:Replacement merge: Default]
						[NT -> HEAP_SIZE : option]
							[T -> name : attribute "HEAP_SIZE" compose:Replacement merge: Default]
							[T -> name : attribute "HEAP_SIZE" compose:Replacement merge: Default]
						[NT -> LOCALE : option]
							[T -> name : attribute "LOCALE" compose:Replacement merge: Default]
							[T -> name : attribute "LOCALE" compose:Replacement merge: Default]
						[NT -> OPEN_IN_BROWSER : option]
							[T -> name : attribute "OPEN_IN_BROWSER" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPEN_IN_BROWSER" compose:Replacement merge: Default]
						[NT -> OPTION_INCLUDE_LIBS : option]
							[T -> name : attribute "OPTION_INCLUDE_LIBS" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_INCLUDE_LIBS" compose:Replacement merge: Default]
					[NT -> ProjectRootManager : component]
						[T -> assert-keyword : attribute "true" compose:Replacement merge: Default]
						[T -> jdk-15 : attribute "true" compose:Replacement merge: Default]
						[T -> languageLevel : attribute "JDK_1_6" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
						[T -> project-jdk-name : attribute "1.7" compose:Replacement merge: Default]
						[T -> project-jdk-type : attribute "JavaSDK" compose:Replacement merge: Default]
						[T -> version : attribute "2" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
						[NT ->  : output]
							[T -> url : attribute "file://$PROJECT_DIR$/out" compose:Replacement merge: Default]
			[NT -> copyright : Folder]
				[NT -> profiles_settings.xml : XML-File]
					[NT -> CopyrightManager : component]
						[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
						[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
						[NT ->  : settings]
							[T -> default : attribute "" compose:Replacement merge: Default]
			[NT -> scopes : Folder]
				[NT -> scope_settings.xml : XML-File]
					[NT -> DependencyValidationManager : component]
						[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
						[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
						[NT ->  : state]
							[NT -> SKIP_IMPORT_STATEMENTS : option]
								[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
			[NT -> libraries : Folder]
				[NT -> lib.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> lib : library]
							[T -> name : attribute "lib" compose:Replacement merge: Default]
							[T -> name : attribute "lib" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
				[NT -> jets3t.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> jets3t : library]
							[T -> name : attribute "jets3t" compose:Replacement merge: Default]
							[T -> name : attribute "jets3t" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
				[NT -> apache.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> apache : library]
							[T -> name : attribute "apache" compose:Replacement merge: Default]
							[T -> name : attribute "apache" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
				[NT -> s3.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> s3 : library]
							[T -> name : attribute "s3" compose:Replacement merge: Default]
							[T -> name : attribute "s3" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
				[NT -> jogamp.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> jogamp : library]
							[T -> name : attribute "jogamp" compose:Replacement merge: Default]
							[T -> name : attribute "jogamp" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
				[NT -> junit.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> junit : library]
							[T -> name : attribute "junit" compose:Replacement merge: Default]
							[T -> name : attribute "junit" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
				[NT -> log4j.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> log4j : library]
							[T -> name : attribute "log4j" compose:Replacement merge: Default]
							[T -> name : attribute "log4j" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
				[NT -> gson.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> gson : library]
							[T -> name : attribute "gson" compose:Replacement merge: Default]
							[T -> name : attribute "gson" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
				[NT -> jama.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> jama : library]
							[T -> name : attribute "jama" compose:Replacement merge: Default]
							[T -> name : attribute "jama" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
				[NT -> mockito.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> mockito : library]
							[T -> name : attribute "mockito" compose:Replacement merge: Default]
							[T -> name : attribute "mockito" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
				[NT -> poi.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> poi : library]
							[T -> name : attribute "poi" compose:Replacement merge: Default]
							[T -> name : attribute "poi" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
				[NT -> cdh3.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> cdh3 : library]
							[T -> name : attribute "cdh3" compose:Replacement merge: Default]
							[T -> name : attribute "cdh3" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
				[NT -> joda_time_2_3.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> joda-time-2.3 : library]
							[T -> name : attribute "joda-time-2.3" compose:Replacement merge: Default]
							[T -> name : attribute "joda-time-2.3" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "jar://$PROJECT_DIR$/../lib/joda/joda-time-2.3.jar!/" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
				[NT -> h2o.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> h2o : library]
							[T -> name : attribute "h2o" compose:Replacement merge: Default]
							[T -> name : attribute "h2o" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "jar://$PROJECT_DIR$/../target/h2o.jar!/" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "jar://$PROJECT_DIR$/../target/h2o-sources.jar!/" compose:Replacement merge: Default]
	[NT -> R : Folder]
		[NT -> tests : Folder]
			[NT -> .idea : Folder]
				[NT -> modules.xml : XML-File]
					[NT ->  : project]
						[T -> version : attribute "4" compose:Replacement merge: Default]
						[NT -> ProjectModuleManager : component]
							[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
							[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
							[NT ->  : modules]
								[NT ->  : module]
									[T -> filepath : attribute "$PROJECT_DIR$/tests.iml" compose:Replacement merge: Default]
									[T -> fileurl : attribute "file://$PROJECT_DIR$/tests.iml" compose:Replacement merge: Default]
				[NT -> uiDesigner.xml : XML-File]
					[NT ->  : project]
						[T -> version : attribute "4" compose:Replacement merge: Default]
						[NT -> Palette2 : component]
							[T -> name : attribute "Palette2" compose:Replacement merge: Default]
							[T -> name : attribute "Palette2" compose:Replacement merge: Default]
							[NT -> Swing : group]
								[T -> name : attribute "Swing" compose:Replacement merge: Default]
								[T -> name : attribute "Swing" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "com.intellij.uiDesigner.HSpacer" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/hspacer.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[T -> tooltip-text : attribute "Horizontal Spacer" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "1" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "com.intellij.uiDesigner.VSpacer" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/vspacer.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[T -> tooltip-text : attribute "Vertical Spacer" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "2" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "1" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JPanel" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/panel.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JScrollPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "7" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "7" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JButton" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/button.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "Button" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JRadioButton" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/radioButton.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "0" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "RadioButton" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JCheckBox" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/checkBox.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "0" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "CheckBox" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JLabel" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/label.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "0" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "Label" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTextField" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/textField.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "-1" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JPasswordField" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/passwordField.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "-1" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JFormattedTextField" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/formattedTextField.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "-1" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTextArea" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/textArea.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTextPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/textPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JEditorPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/editorPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JComboBox" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/comboBox.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTable" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/table.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JList" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/list.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTree" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/tree.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTabbedPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/tabbedPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "200" compose:Replacement merge: Default]
											[T -> width : attribute "200" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSplitPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/splitPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "200" compose:Replacement merge: Default]
											[T -> width : attribute "200" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSpinner" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/spinner.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSlider" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/slider.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSeparator" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/separator.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JProgressBar" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/progressbar.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JToolBar" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbar.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "20" compose:Replacement merge: Default]
											[T -> width : attribute "-1" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JToolBar$Separator" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbarSeparator.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JScrollBar" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollbar.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "2" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
				[NT -> misc.xml : XML-File]
					[NT ->  : project]
						[T -> version : attribute "4" compose:Replacement merge: Default]
						[NT -> IdProvider : component]
							[T -> IDEtalkID : attribute "71BF6219F8210A6EC9FBEBE448179BA5" compose:Replacement merge: Default]
							[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
							[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
						[NT -> ProjectRootManager : component]
							[T -> assert-keyword : attribute "true" compose:Replacement merge: Default]
							[T -> jdk-15 : attribute "true" compose:Replacement merge: Default]
							[T -> languageLevel : attribute "JDK_1_6" compose:Replacement merge: Default]
							[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
							[T -> project-jdk-name : attribute "Python 2.7.5 (/usr/bin/python)" compose:Replacement merge: Default]
							[T -> project-jdk-type : attribute "Python SDK" compose:Replacement merge: Default]
							[T -> version : attribute "2" compose:Replacement merge: Default]
							[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
							[NT ->  : output]
								[T -> url : attribute "file://$PROJECT_DIR$/out" compose:Replacement merge: Default]
				[NT -> inspectionProfiles : Folder]
					[NT -> Project_Default.xml : XML-File]
						[NT -> InspectionProjectProfileManager : component]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[NT ->  : profile]
								[T -> is_locked : attribute "false" compose:Replacement merge: Default]
								[T -> version : attribute "1.0" compose:Replacement merge: Default]
								[NT -> myName : option]
									[T -> name : attribute "myName" compose:Replacement merge: Default]
									[T -> value : attribute "Project Default" compose:Replacement merge: Default]
									[T -> name : attribute "myName" compose:Replacement merge: Default]
								[NT -> myLocal : option]
									[T -> name : attribute "myLocal" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[T -> name : attribute "myLocal" compose:Replacement merge: Default]
								[NT ->  : inspection_tool]
									[T -> class : attribute "PyRedundantParenthesesInspection" compose:Replacement merge: Default]
									[T -> enabled : attribute "false" compose:Replacement merge: Default]
									[T -> enabled_by_default : attribute "false" compose:Replacement merge: Default]
									[T -> level : attribute "WEAK WARNING" compose:Replacement merge: Default]
									[NT -> myIgnorePercOperator : option]
										[T -> name : attribute "myIgnorePercOperator" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "myIgnorePercOperator" compose:Replacement merge: Default]
									[NT -> myIgnoreTupleInReturn : option]
										[T -> name : attribute "myIgnoreTupleInReturn" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "myIgnoreTupleInReturn" compose:Replacement merge: Default]
								[NT ->  : inspection_tool]
									[T -> class : attribute "SpellCheckingInspection" compose:Replacement merge: Default]
									[T -> enabled : attribute "true" compose:Replacement merge: Default]
									[T -> enabled_by_default : attribute "true" compose:Replacement merge: Default]
									[T -> level : attribute "TYPO" compose:Replacement merge: Default]
									[NT -> processCode : option]
										[T -> name : attribute "processCode" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "processCode" compose:Replacement merge: Default]
									[NT -> processLiterals : option]
										[T -> name : attribute "processLiterals" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "processLiterals" compose:Replacement merge: Default]
									[NT -> processComments : option]
										[T -> name : attribute "processComments" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[T -> name : attribute "processComments" compose:Replacement merge: Default]
					[NT -> profiles_settings.xml : XML-File]
						[NT -> InspectionProjectProfileManager : component]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[NT ->  : settings]
								[NT -> PROJECT_PROFILE : option]
									[T -> name : attribute "PROJECT_PROFILE" compose:Replacement merge: Default]
									[T -> value : attribute "Project Default" compose:Replacement merge: Default]
									[T -> name : attribute "PROJECT_PROFILE" compose:Replacement merge: Default]
								[NT -> USE_PROJECT_PROFILE : option]
									[T -> name : attribute "USE_PROJECT_PROFILE" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[T -> name : attribute "USE_PROJECT_PROFILE" compose:Replacement merge: Default]
								[NT ->  : version]
									[T -> value : attribute "1.0" compose:Replacement merge: Default]
				[NT -> copyright : Folder]
					[NT -> profiles_settings.xml : XML-File]
						[NT -> CopyrightManager : component]
							[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
							[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
							[NT ->  : settings]
								[T -> default : attribute "" compose:Replacement merge: Default]
				[NT -> scopes : Folder]
					[NT -> scope_settings.xml : XML-File]
						[NT -> DependencyValidationManager : component]
							[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
							[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
							[NT ->  : state]
								[NT -> SKIP_IMPORT_STATEMENTS : option]
									[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
[NT -> right : Feature]
	[NT -> h2o-cookbook : Folder]
		[NT -> .idea : Folder]
			[NT -> codeStyleSettings.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> ProjectCodeStyleSettingsManager : component]
						[T -> name : attribute "ProjectCodeStyleSettingsManager" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectCodeStyleSettingsManager" compose:Replacement merge: Default]
						[NT -> PER_PROJECT_SETTINGS : option]
							[T -> name : attribute "PER_PROJECT_SETTINGS" compose:Replacement merge: Default]
							[T -> name : attribute "PER_PROJECT_SETTINGS" compose:Replacement merge: Default]
							[NT ->  : value]
								[NT ->  : XML]
									[NT -> XML_LEGACY_SETTINGS_IMPORTED : option]
										[T -> name : attribute "XML_LEGACY_SETTINGS_IMPORTED" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[T -> name : attribute "XML_LEGACY_SETTINGS_IMPORTED" compose:Replacement merge: Default]
			[NT -> modules.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> ProjectModuleManager : component]
						[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
						[NT ->  : modules]
							[NT ->  : module]
								[T -> filepath : attribute "$PROJECT_DIR$/src/test/test.iml" compose:Replacement merge: Default]
								[T -> fileurl : attribute "file://$PROJECT_DIR$/src/test/test.iml" compose:Replacement merge: Default]
			[NT -> encodings.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> Encoding : component]
						[T -> name : attribute "Encoding" compose:Replacement merge: Default]
						[T -> native2AsciiForPropertiesFiles : attribute "false" compose:Replacement merge: Default]
						[T -> useUTFGuessing : attribute "true" compose:Replacement merge: Default]
						[T -> name : attribute "Encoding" compose:Replacement merge: Default]
			[NT -> compiler.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> CompilerConfiguration : component]
						[T -> name : attribute "CompilerConfiguration" compose:Replacement merge: Default]
						[T -> name : attribute "CompilerConfiguration" compose:Replacement merge: Default]
						[NT -> DEFAULT_COMPILER : option]
							[T -> name : attribute "DEFAULT_COMPILER" compose:Replacement merge: Default]
							[T -> value : attribute "Javac" compose:Replacement merge: Default]
							[T -> name : attribute "DEFAULT_COMPILER" compose:Replacement merge: Default]
						[NT ->  : resourceExtensions]
						[NT ->  : wildcardResourcePatterns]
							[NT -> !?*.java : entry]
								[T -> name : attribute "!?*.java" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.java" compose:Replacement merge: Default]
							[NT -> !?*.form : entry]
								[T -> name : attribute "!?*.form" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.form" compose:Replacement merge: Default]
							[NT -> !?*.class : entry]
								[T -> name : attribute "!?*.class" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.class" compose:Replacement merge: Default]
							[NT -> !?*.groovy : entry]
								[T -> name : attribute "!?*.groovy" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.groovy" compose:Replacement merge: Default]
							[NT -> !?*.scala : entry]
								[T -> name : attribute "!?*.scala" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.scala" compose:Replacement merge: Default]
							[NT -> !?*.flex : entry]
								[T -> name : attribute "!?*.flex" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.flex" compose:Replacement merge: Default]
							[NT -> !?*.kt : entry]
								[T -> name : attribute "!?*.kt" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.kt" compose:Replacement merge: Default]
							[NT -> !?*.clj : entry]
								[T -> name : attribute "!?*.clj" compose:Replacement merge: Default]
								[T -> name : attribute "!?*.clj" compose:Replacement merge: Default]
						[NT ->  : annotationProcessing]
							[NT -> Default : profile]
								[T -> default : attribute "true" compose:Replacement merge: Default]
								[T -> enabled : attribute "false" compose:Replacement merge: Default]
								[T -> name : attribute "Default" compose:Replacement merge: Default]
								[T -> name : attribute "Default" compose:Replacement merge: Default]
								[NT ->  : processorPath]
									[T -> useClasspath : attribute "true" compose:Replacement merge: Default]
			[NT -> uiDesigner.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> Palette2 : component]
						[T -> name : attribute "Palette2" compose:Replacement merge: Default]
						[T -> name : attribute "Palette2" compose:Replacement merge: Default]
						[NT -> Swing : group]
							[T -> name : attribute "Swing" compose:Replacement merge: Default]
							[T -> name : attribute "Swing" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "com.intellij.uiDesigner.HSpacer" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/hspacer.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[T -> tooltip-text : attribute "Horizontal Spacer" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "1" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "com.intellij.uiDesigner.VSpacer" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/vspacer.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[T -> tooltip-text : attribute "Vertical Spacer" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "2" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "1" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JPanel" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/panel.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JScrollPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "7" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "7" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JButton" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/button.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "Button" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JRadioButton" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/radioButton.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "0" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "RadioButton" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JCheckBox" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/checkBox.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "0" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "CheckBox" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JLabel" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/label.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "0" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : initial-values]
									[NT -> text : property]
										[T -> name : attribute "text" compose:Replacement merge: Default]
										[T -> value : attribute "Label" compose:Replacement merge: Default]
										[T -> name : attribute "text" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTextField" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/textField.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "-1" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JPasswordField" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/passwordField.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "-1" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JFormattedTextField" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/formattedTextField.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "-1" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTextArea" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/textArea.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTextPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/textPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JEditorPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/editorPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JComboBox" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/comboBox.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTable" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/table.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JList" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/list.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTree" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/tree.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "50" compose:Replacement merge: Default]
										[T -> width : attribute "150" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JTabbedPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/tabbedPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "200" compose:Replacement merge: Default]
										[T -> width : attribute "200" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSplitPane" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/splitPane.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "200" compose:Replacement merge: Default]
										[T -> width : attribute "200" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSpinner" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/spinner.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSlider" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/slider.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "8" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JSeparator" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/separator.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "3" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JProgressBar" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/progressbar.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JToolBar" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbar.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : preferred-size]
										[T -> height : attribute "20" compose:Replacement merge: Default]
										[T -> width : attribute "-1" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JToolBar$Separator" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbarSeparator.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "1" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
							[NT ->  : item]
								[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
								[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
								[T -> class : attribute "javax.swing.JScrollBar" compose:Replacement merge: Default]
								[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollbar.png" compose:Replacement merge: Default]
								[T -> removable : attribute "false" compose:Replacement merge: Default]
								[NT ->  : default-constraints]
									[T -> anchor : attribute "0" compose:Replacement merge: Default]
									[T -> fill : attribute "2" compose:Replacement merge: Default]
									[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
									[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
			[NT -> gradle.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
			[NT -> vcs.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> VcsDirectoryMappings : component]
						[T -> name : attribute "VcsDirectoryMappings" compose:Replacement merge: Default]
						[T -> name : attribute "VcsDirectoryMappings" compose:Replacement merge: Default]
						[NT ->  : mapping]
							[T -> directory : attribute "" compose:Replacement merge: Default]
							[T -> vcs : attribute "" compose:Replacement merge: Default]
						[NT ->  : mapping]
							[T -> directory : attribute "$PROJECT_DIR$/.." compose:Replacement merge: Default]
							[T -> vcs : attribute "Git" compose:Replacement merge: Default]
			[NT -> misc.xml : XML-File]
				[NT ->  : project]
					[T -> version : attribute "4" compose:Replacement merge: Default]
					[NT -> EntryPointsManager : component]
						[T -> name : attribute "EntryPointsManager" compose:Replacement merge: Default]
						[T -> name : attribute "EntryPointsManager" compose:Replacement merge: Default]
						[NT ->  : entry_points]
							[T -> version : attribute "2.0" compose:Replacement merge: Default]
					[NT -> IdProvider : component]
						[T -> IDEtalkID : attribute "C456CDD4CCAB951B7CEAAEB5041242D8" compose:Replacement merge: Default]
						[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
						[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
					[NT -> JavadocGenerationManager : component]
						[T -> name : attribute "JavadocGenerationManager" compose:Replacement merge: Default]
						[T -> name : attribute "JavadocGenerationManager" compose:Replacement merge: Default]
						[NT -> OUTPUT_DIRECTORY : option]
							[T -> name : attribute "OUTPUT_DIRECTORY" compose:Replacement merge: Default]
							[T -> value : attribute "$PROJECT_DIR$/../target/cookbook-javadoc" compose:Replacement merge: Default]
							[T -> name : attribute "OUTPUT_DIRECTORY" compose:Replacement merge: Default]
						[NT -> OPTION_SCOPE : option]
							[T -> name : attribute "OPTION_SCOPE" compose:Replacement merge: Default]
							[T -> value : attribute "protected" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_SCOPE" compose:Replacement merge: Default]
						[NT -> OPTION_HIERARCHY : option]
							[T -> name : attribute "OPTION_HIERARCHY" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_HIERARCHY" compose:Replacement merge: Default]
						[NT -> OPTION_NAVIGATOR : option]
							[T -> name : attribute "OPTION_NAVIGATOR" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_NAVIGATOR" compose:Replacement merge: Default]
						[NT -> OPTION_INDEX : option]
							[T -> name : attribute "OPTION_INDEX" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_INDEX" compose:Replacement merge: Default]
						[NT -> OPTION_SEPARATE_INDEX : option]
							[T -> name : attribute "OPTION_SEPARATE_INDEX" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_SEPARATE_INDEX" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_USE : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_USE" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_USE" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_AUTHOR : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_AUTHOR" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_AUTHOR" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_VERSION : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_VERSION" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_VERSION" compose:Replacement merge: Default]
						[NT -> OPTION_DOCUMENT_TAG_DEPRECATED : option]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_DEPRECATED" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DOCUMENT_TAG_DEPRECATED" compose:Replacement merge: Default]
						[NT -> OPTION_DEPRECATED_LIST : option]
							[T -> name : attribute "OPTION_DEPRECATED_LIST" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_DEPRECATED_LIST" compose:Replacement merge: Default]
						[NT -> OTHER_OPTIONS : option]
							[T -> name : attribute "OTHER_OPTIONS" compose:Replacement merge: Default]
							[T -> value : attribute "-overview /Users/tomk/0xdata/ws/h2o/h2o-cookbook/src/test/java/overview.html" compose:Replacement merge: Default]
							[T -> name : attribute "OTHER_OPTIONS" compose:Replacement merge: Default]
						[NT -> HEAP_SIZE : option]
							[T -> name : attribute "HEAP_SIZE" compose:Replacement merge: Default]
							[T -> name : attribute "HEAP_SIZE" compose:Replacement merge: Default]
						[NT -> LOCALE : option]
							[T -> name : attribute "LOCALE" compose:Replacement merge: Default]
							[T -> name : attribute "LOCALE" compose:Replacement merge: Default]
						[NT -> OPEN_IN_BROWSER : option]
							[T -> name : attribute "OPEN_IN_BROWSER" compose:Replacement merge: Default]
							[T -> value : attribute "true" compose:Replacement merge: Default]
							[T -> name : attribute "OPEN_IN_BROWSER" compose:Replacement merge: Default]
						[NT -> OPTION_INCLUDE_LIBS : option]
							[T -> name : attribute "OPTION_INCLUDE_LIBS" compose:Replacement merge: Default]
							[T -> value : attribute "false" compose:Replacement merge: Default]
							[T -> name : attribute "OPTION_INCLUDE_LIBS" compose:Replacement merge: Default]
					[NT -> ProjectRootManager : component]
						[T -> assert-keyword : attribute "true" compose:Replacement merge: Default]
						[T -> jdk-15 : attribute "true" compose:Replacement merge: Default]
						[T -> languageLevel : attribute "JDK_1_6" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
						[T -> project-jdk-name : attribute "1.7" compose:Replacement merge: Default]
						[T -> project-jdk-type : attribute "JavaSDK" compose:Replacement merge: Default]
						[T -> version : attribute "2" compose:Replacement merge: Default]
						[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
						[NT ->  : output]
							[T -> url : attribute "file://$PROJECT_DIR$/out" compose:Replacement merge: Default]
			[NT -> copyright : Folder]
				[NT -> profiles_settings.xml : XML-File]
					[NT -> CopyrightManager : component]
						[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
						[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
						[NT ->  : settings]
							[T -> default : attribute "" compose:Replacement merge: Default]
			[NT -> scopes : Folder]
				[NT -> scope_settings.xml : XML-File]
					[NT -> DependencyValidationManager : component]
						[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
						[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
						[NT ->  : state]
							[NT -> SKIP_IMPORT_STATEMENTS : option]
								[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
			[NT -> libraries : Folder]
				[NT -> lib.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> lib : library]
							[T -> name : attribute "lib" compose:Replacement merge: Default]
							[T -> name : attribute "lib" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib" compose:Replacement merge: Default]
				[NT -> jets3t.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> jets3t : library]
							[T -> name : attribute "jets3t" compose:Replacement merge: Default]
							[T -> name : attribute "jets3t" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jets3t" compose:Replacement merge: Default]
				[NT -> apache.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> apache : library]
							[T -> name : attribute "apache" compose:Replacement merge: Default]
							[T -> name : attribute "apache" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/apache" compose:Replacement merge: Default]
				[NT -> s3.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> s3 : library]
							[T -> name : attribute "s3" compose:Replacement merge: Default]
							[T -> name : attribute "s3" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/s3" compose:Replacement merge: Default]
				[NT -> jogamp.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> jogamp : library]
							[T -> name : attribute "jogamp" compose:Replacement merge: Default]
							[T -> name : attribute "jogamp" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jogamp" compose:Replacement merge: Default]
				[NT -> junit.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> junit : library]
							[T -> name : attribute "junit" compose:Replacement merge: Default]
							[T -> name : attribute "junit" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/junit" compose:Replacement merge: Default]
				[NT -> log4j.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> log4j : library]
							[T -> name : attribute "log4j" compose:Replacement merge: Default]
							[T -> name : attribute "log4j" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/log4j" compose:Replacement merge: Default]
				[NT -> gson.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> gson : library]
							[T -> name : attribute "gson" compose:Replacement merge: Default]
							[T -> name : attribute "gson" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/gson" compose:Replacement merge: Default]
				[NT -> jama.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> jama : library]
							[T -> name : attribute "jama" compose:Replacement merge: Default]
							[T -> name : attribute "jama" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/jama" compose:Replacement merge: Default]
				[NT -> mockito.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> mockito : library]
							[T -> name : attribute "mockito" compose:Replacement merge: Default]
							[T -> name : attribute "mockito" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/mockito" compose:Replacement merge: Default]
				[NT -> poi.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> poi : library]
							[T -> name : attribute "poi" compose:Replacement merge: Default]
							[T -> name : attribute "poi" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/poi" compose:Replacement merge: Default]
				[NT -> cdh3.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> cdh3 : library]
							[T -> name : attribute "cdh3" compose:Replacement merge: Default]
							[T -> name : attribute "cdh3" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
							[NT ->  : jarDirectory]
								[T -> recursive : attribute "false" compose:Replacement merge: Default]
								[T -> type : attribute "SOURCES" compose:Replacement merge: Default]
								[T -> url : attribute "file://$PROJECT_DIR$/../lib/hadoop/cdh3" compose:Replacement merge: Default]
				[NT -> joda_time_2_3.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> joda-time-2.3 : library]
							[T -> name : attribute "joda-time-2.3" compose:Replacement merge: Default]
							[T -> name : attribute "joda-time-2.3" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "jar://$PROJECT_DIR$/../lib/joda/joda-time-2.3.jar!/" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
				[NT -> h2o.xml : XML-File]
					[NT -> libraryTable : component]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[T -> name : attribute "libraryTable" compose:Replacement merge: Default]
						[NT -> h2o : library]
							[T -> name : attribute "h2o" compose:Replacement merge: Default]
							[T -> name : attribute "h2o" compose:Replacement merge: Default]
							[NT ->  : CLASSES]
								[NT ->  : root]
									[T -> url : attribute "jar://$PROJECT_DIR$/../target/h2o.jar!/" compose:Replacement merge: Default]
							[NT ->  : JAVADOC]
							[NT ->  : SOURCES]
								[NT ->  : root]
									[T -> url : attribute "jar://$PROJECT_DIR$/../target/h2o-sources.jar!/" compose:Replacement merge: Default]
	[NT -> R : Folder]
		[NT -> tests : Folder]
			[NT -> .idea : Folder]
				[NT -> modules.xml : XML-File]
					[NT ->  : project]
						[T -> version : attribute "4" compose:Replacement merge: Default]
						[NT -> ProjectModuleManager : component]
							[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
							[T -> name : attribute "ProjectModuleManager" compose:Replacement merge: Default]
							[NT ->  : modules]
								[NT ->  : module]
									[T -> filepath : attribute "$PROJECT_DIR$/tests.iml" compose:Replacement merge: Default]
									[T -> fileurl : attribute "file://$PROJECT_DIR$/tests.iml" compose:Replacement merge: Default]
				[NT -> uiDesigner.xml : XML-File]
					[NT ->  : project]
						[T -> version : attribute "4" compose:Replacement merge: Default]
						[NT -> Palette2 : component]
							[T -> name : attribute "Palette2" compose:Replacement merge: Default]
							[T -> name : attribute "Palette2" compose:Replacement merge: Default]
							[NT -> Swing : group]
								[T -> name : attribute "Swing" compose:Replacement merge: Default]
								[T -> name : attribute "Swing" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "com.intellij.uiDesigner.HSpacer" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/hspacer.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[T -> tooltip-text : attribute "Horizontal Spacer" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "1" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "com.intellij.uiDesigner.VSpacer" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/vspacer.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[T -> tooltip-text : attribute "Vertical Spacer" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "2" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "1" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JPanel" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/panel.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JScrollPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "7" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "7" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JButton" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/button.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "Button" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JRadioButton" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/radioButton.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "0" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "RadioButton" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JCheckBox" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/checkBox.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "0" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "CheckBox" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JLabel" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/label.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "0" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
									[NT ->  : initial-values]
										[NT -> text : property]
											[T -> name : attribute "text" compose:Replacement merge: Default]
											[T -> value : attribute "Label" compose:Replacement merge: Default]
											[T -> name : attribute "text" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTextField" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/textField.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "-1" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JPasswordField" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/passwordField.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "-1" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JFormattedTextField" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/formattedTextField.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "-1" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTextArea" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/textArea.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTextPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/textPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JEditorPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/editorPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JComboBox" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/comboBox.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTable" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/table.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JList" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/list.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "2" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTree" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/tree.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "50" compose:Replacement merge: Default]
											[T -> width : attribute "150" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JTabbedPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/tabbedPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "200" compose:Replacement merge: Default]
											[T -> width : attribute "200" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSplitPane" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/splitPane.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "3" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "3" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "200" compose:Replacement merge: Default]
											[T -> width : attribute "200" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "true" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSpinner" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/spinner.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSlider" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/slider.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "8" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JSeparator" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/separator.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "3" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JProgressBar" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/progressbar.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JToolBar" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbar.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "6" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
										[NT ->  : preferred-size]
											[T -> height : attribute "20" compose:Replacement merge: Default]
											[T -> width : attribute "-1" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "false" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JToolBar$Separator" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/toolbarSeparator.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "1" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "0" compose:Replacement merge: Default]
								[NT ->  : item]
									[T -> auto-create-binding : attribute "true" compose:Replacement merge: Default]
									[T -> can-attach-label : attribute "false" compose:Replacement merge: Default]
									[T -> class : attribute "javax.swing.JScrollBar" compose:Replacement merge: Default]
									[T -> icon : attribute "/com/intellij/uiDesigner/icons/scrollbar.png" compose:Replacement merge: Default]
									[T -> removable : attribute "false" compose:Replacement merge: Default]
									[NT ->  : default-constraints]
										[T -> anchor : attribute "0" compose:Replacement merge: Default]
										[T -> fill : attribute "2" compose:Replacement merge: Default]
										[T -> hsize-policy : attribute "0" compose:Replacement merge: Default]
										[T -> vsize-policy : attribute "6" compose:Replacement merge: Default]
				[NT -> misc.xml : XML-File]
					[NT ->  : project]
						[T -> version : attribute "4" compose:Replacement merge: Default]
						[NT -> IdProvider : component]
							[T -> IDEtalkID : attribute "71BF6219F8210A6EC9FBEBE448179BA5" compose:Replacement merge: Default]
							[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
							[T -> name : attribute "IdProvider" compose:Replacement merge: Default]
						[NT -> ProjectRootManager : component]
							[T -> assert-keyword : attribute "true" compose:Replacement merge: Default]
							[T -> jdk-15 : attribute "true" compose:Replacement merge: Default]
							[T -> languageLevel : attribute "JDK_1_6" compose:Replacement merge: Default]
							[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
							[T -> project-jdk-name : attribute "Python 2.7.5 (/usr/bin/python)" compose:Replacement merge: Default]
							[T -> project-jdk-type : attribute "Python SDK" compose:Replacement merge: Default]
							[T -> version : attribute "2" compose:Replacement merge: Default]
							[T -> name : attribute "ProjectRootManager" compose:Replacement merge: Default]
							[NT ->  : output]
								[T -> url : attribute "file://$PROJECT_DIR$/out" compose:Replacement merge: Default]
				[NT -> inspectionProfiles : Folder]
					[NT -> Project_Default.xml : XML-File]
						[NT -> InspectionProjectProfileManager : component]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[NT ->  : profile]
								[T -> is_locked : attribute "false" compose:Replacement merge: Default]
								[T -> version : attribute "1.0" compose:Replacement merge: Default]
								[NT -> myName : option]
									[T -> name : attribute "myName" compose:Replacement merge: Default]
									[T -> value : attribute "Project Default" compose:Replacement merge: Default]
									[T -> name : attribute "myName" compose:Replacement merge: Default]
								[NT -> myLocal : option]
									[T -> name : attribute "myLocal" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[T -> name : attribute "myLocal" compose:Replacement merge: Default]
								[NT ->  : inspection_tool]
									[T -> class : attribute "PyRedundantParenthesesInspection" compose:Replacement merge: Default]
									[T -> enabled : attribute "false" compose:Replacement merge: Default]
									[T -> enabled_by_default : attribute "false" compose:Replacement merge: Default]
									[T -> level : attribute "WEAK WARNING" compose:Replacement merge: Default]
									[NT -> myIgnorePercOperator : option]
										[T -> name : attribute "myIgnorePercOperator" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "myIgnorePercOperator" compose:Replacement merge: Default]
									[NT -> myIgnoreTupleInReturn : option]
										[T -> name : attribute "myIgnoreTupleInReturn" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "myIgnoreTupleInReturn" compose:Replacement merge: Default]
								[NT ->  : inspection_tool]
									[T -> class : attribute "SpellCheckingInspection" compose:Replacement merge: Default]
									[T -> enabled : attribute "true" compose:Replacement merge: Default]
									[T -> enabled_by_default : attribute "true" compose:Replacement merge: Default]
									[T -> level : attribute "TYPO" compose:Replacement merge: Default]
									[NT -> processCode : option]
										[T -> name : attribute "processCode" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "processCode" compose:Replacement merge: Default]
									[NT -> processLiterals : option]
										[T -> name : attribute "processLiterals" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[T -> name : attribute "processLiterals" compose:Replacement merge: Default]
									[NT -> processComments : option]
										[T -> name : attribute "processComments" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[T -> name : attribute "processComments" compose:Replacement merge: Default]
					[NT -> profiles_settings.xml : XML-File]
						[NT -> InspectionProjectProfileManager : component]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[T -> name : attribute "InspectionProjectProfileManager" compose:Replacement merge: Default]
							[NT ->  : settings]
								[NT -> PROJECT_PROFILE : option]
									[T -> name : attribute "PROJECT_PROFILE" compose:Replacement merge: Default]
									[T -> value : attribute "Project Default" compose:Replacement merge: Default]
									[T -> name : attribute "PROJECT_PROFILE" compose:Replacement merge: Default]
								[NT -> USE_PROJECT_PROFILE : option]
									[T -> name : attribute "USE_PROJECT_PROFILE" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[T -> name : attribute "USE_PROJECT_PROFILE" compose:Replacement merge: Default]
								[NT ->  : version]
									[T -> value : attribute "1.0" compose:Replacement merge: Default]
				[NT -> copyright : Folder]
					[NT -> profiles_settings.xml : XML-File]
						[NT -> CopyrightManager : component]
							[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
							[T -> name : attribute "CopyrightManager" compose:Replacement merge: Default]
							[NT ->  : settings]
								[T -> default : attribute "" compose:Replacement merge: Default]
				[NT -> scopes : Folder]
					[NT -> scope_settings.xml : XML-File]
						[NT -> DependencyValidationManager : component]
							[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
							[T -> name : attribute "DependencyValidationManager" compose:Replacement merge: Default]
							[NT ->  : state]
								[NT -> SKIP_IMPORT_STATEMENTS : option]
									[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[T -> name : attribute "SKIP_IMPORT_STATEMENTS" compose:Replacement merge: Default]
[NT -> left : Feature]
	[NT -> src : Folder]
		[NT -> test : Folder]
			[NT -> java : Folder]
				[NT -> hex : Folder]
					[NT -> DeepLearningProstateTest.java : Java-File]
						[NT -> - : CompilationUnit]
							[T -> - : PackageDeclaration "package hex;" compose:Replacement merge: Default]
							[T -> hex.deeplearning.DeepLearning{ImportPackage} : ImportDeclaration "import hex.deeplearning.DeepLearning;" compose:Replacement merge: Default]
							[T -> hex.deeplearning.DeepLearningModel{ImportPackage} : ImportDeclaration "import hex.deeplearning.DeepLearningModel;" compose:Replacement merge: Default]
							[T -> org.junit.Assert{ImportPackage} : ImportDeclaration "import org.junit.Assert;" compose:Replacement merge: Default]
							[T -> org.junit.BeforeClass{ImportPackage} : ImportDeclaration "import org.junit.BeforeClass;" compose:Replacement merge: Default]
							[T -> org.junit.Ignore{ImportPackage} : ImportDeclaration "import org.junit.Ignore;" compose:Replacement merge: Default]
							[T -> org.junit.Test{ImportPackage} : ImportDeclaration "import org.junit.Test;" compose:Replacement merge: Default]
							[T -> water.* : ImportDeclaration "import water.*;" compose:Replacement merge: Default]
							[T -> water.api.AUC{ImportPackage} : ImportDeclaration "import water.api.AUC;" compose:Replacement merge: Default]
							[T -> water.api.AUCData{ImportPackage} : ImportDeclaration "import water.api.AUCData;" compose:Replacement merge: Default]
							[T -> water.exec.Env{ImportPackage} : ImportDeclaration "import water.exec.Env;" compose:Replacement merge: Default]
							[T -> water.exec.Exec2{ImportPackage} : ImportDeclaration "import water.exec.Exec2;" compose:Replacement merge: Default]
							[T -> water.fvec.Frame{ImportPackage} : ImportDeclaration "import water.fvec.Frame;" compose:Replacement merge: Default]
							[T -> water.fvec.NFSFileVec{ImportPackage} : ImportDeclaration "import water.fvec.NFSFileVec;" compose:Replacement merge: Default]
							[T -> water.fvec.ParseDataset2{ImportPackage} : ImportDeclaration "import water.fvec.ParseDataset2;" compose:Replacement merge: Default]
							[T -> water.util.Log{ImportPackage} : ImportDeclaration "import water.util.Log;" compose:Replacement merge: Default]
							[T -> java.util.Random{ImportPackage} : ImportDeclaration "import java.util.Random;" compose:Replacement merge: Default]
							[NT -> DeepLearningProstateTest : ClassDeclaration]
								[T -> - : Modifiers "public" compose:Replacement merge: SemanticConflict]
								[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
								[T -> DeepLearningProstateTest : Id "DeepLearningProstateTest" compose:Replacement merge: Default]
								[T -> - : ExtendsList "extends TestUtil" compose:Replacement merge: Default]
								[T -> stall({FormalParametersInternal}) : MethodDecl "@BeforeClass public static void stall() {     stall_till_cloudsize(JUnitRunnerDebug.NODES);   }" compose:Replacement merge: LineBased]
								[T -> runFraction(float-float) : MethodDecl "public void runFraction(float fraction) {     long seed = 0xDECAF;     Random rng = new Random(seed);     String[] datasets = new String[2];     int[][] responses = new int[datasets.length][];     datasets[0] = "smalldata/./logreg/prostate.csv"; responses[0] = new int[]{1,2,8}; //CAPSULE (binomial), AGE (regression), GLEASON (multi-class)     datasets[1] = "smalldata/iris/iris.csv";  responses[1] = new int[]{4}; //Iris-type (multi-class)      int testcount = 0;     int count = 0;     for (int i =0;i<datasets.length;++i) {       String dataset = datasets[i];       Key file = NFSFileVec.make(find_test_file(dataset));       Frame frame = ParseDataset2.parse(Key.make(), new Key[]{file});       Key vfile = NFSFileVec.make(find_test_file(dataset));       Frame vframe = ParseDataset2.parse(Key.make(), new Key[]{vfile});        try {         for (boolean replicate : new boolean[]{                 true,                 false,         }) {           for (boolean load_balance : new boolean[]{                   true,                   false,           }) {             for (boolean shuffle : new boolean[]{                     true,                     false,             }) {               for (boolean balance_classes : new boolean[]{                       true,                       false,               }) {                 for (int resp : responses[i]) {                   for (DeepLearning.ClassSamplingMethod csm : new DeepLearning.ClassSamplingMethod[]{                           DeepLearning.ClassSamplingMethod.Stratified,                           DeepLearning.ClassSamplingMethod.Uniform                   }) {                     for (int scoretraining : new int[]{                             200,                             20,                             0,                     }) {                       for (int scorevalidation : new int[]{                               200,                               20,                               0,                       }) {                         for (int vf : new int[]{                                 0,  //no validation                                 1,  //same as source                                 -1, //different validation frame                         }) {                           for (int n_folds : new int[]{                                   0,                                   2,                           }) {                             if (n_folds != 0 && vf != 0) continue;                             for (boolean keep_cv_splits : new boolean[]{false}) { //otherwise it leaks                               for (boolean override_with_best_model : new boolean[]{false, true}) {                                 for (int train_samples_per_iteration : new int[]{                                         -2, //auto-tune                                         -1, //N epochs per iteration                                         0, //1 epoch per iteration                                         rng.nextInt(100), // <1 epoch per iteration                                         500, //>1 epoch per iteration                                 }) {                                   DeepLearningModel model1 = null, model2 = null;                                   Key dest = null, dest_tmp = null;                                   count++;                                   if (fraction < rng.nextFloat()) continue;                                    try {                                     Log.info("**************************)");                                     Log.info("Starting test #" + count);                                     Log.info("**************************)");                                     final double epochs = 7 + rng.nextDouble() + rng.nextInt(4);                                     final int[] hidden = new int[]{1 + rng.nextInt(4), 1 + rng.nextInt(6)};                                     Frame valid = null; //no validation                                     if (vf == 1) valid = frame; //use the same frame for validation                                     else if (vf == -1) valid = vframe; //different validation frame (here: from the same file)                                      // build the model, with all kinds of shuffling/rebalancing/sampling                                     dest_tmp = Key.make("first");                                     {                                       Log.info("Using seed: " + seed);                                       DeepLearning p = new DeepLearning();                                       p.checkpoint = null;                                       p.destination_key = dest_tmp;                                        p.source = frame;                                       p.response = frame.vecs()[resp];                                       p.validation = valid;                                        p.hidden = hidden;                                       if (i == 0 && resp == 2) p.classification = false; //                                      p.best_model_key = best_model_key;                                       p.override_with_best_model = override_with_best_model;                                       p.epochs = epochs;                                       p.n_folds = n_folds;                                       p.keep_cross_validation_splits = keep_cv_splits;                                       p.seed = seed;                                       p.train_samples_per_iteration = train_samples_per_iteration;                                       p.force_load_balance = load_balance;                                       p.replicate_training_data = replicate;                                       p.shuffle_training_data = shuffle;                                       p.score_training_samples = scoretraining;                                       p.score_validation_samples = scorevalidation;                                       p.classification_stop = -1;                                       p.regression_stop = -1;                                       p.balance_classes = balance_classes;                                       p.quiet_mode = true;                                       p.score_validation_sampling = csm;                                       try {                                         p.invoke();                                       } catch (Throwable t) {                                         t.printStackTrace();                                         throw new RuntimeException(t);                                       } finally {                                         p.delete();                                       }                                        model1 = UKV.get(dest_tmp);                                       Assert.assertTrue(p.train_samples_per_iteration <= 0 || model1.epoch_counter > epochs || Math.abs(model1.epoch_counter - epochs)/epochs < 0.1);                                        if (n_folds != 0)                                       // test HTML of cv models                                       {                                         for (Key k : model1.get_params().xval_models) {                                           DeepLearningModel cv_model = UKV.get(k);                                           StringBuilder sb = new StringBuilder();                                           cv_model.generateHTML("cv", sb);                                           cv_model.delete_best_model();                                           cv_model.delete();                                         }                                       }                                     }                                      // Do some more training via checkpoint restart                                     // For n_folds, continue without n_folds (not yet implemented) - from now on, model2 will have n_folds=0...                                     dest = Key.make("restart");                                     DeepLearning p = new DeepLearning();                                     final DeepLearningModel tmp_model = UKV.get(dest_tmp); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(tmp_model.get_params().state == Job.JobState.DONE); //HEX-1817                                     Assert.assertTrue(tmp_model.model_info().get_processed_total() >= frame.numRows() * epochs);                                     assert (tmp_model != null);                                      p.checkpoint = dest_tmp;                                     p.destination_key = dest;                                     p.n_folds = 0;                                      p.source = frame;                                     p.validation = valid;                                     p.response = frame.vecs()[resp];                                     if (i == 0 && resp == 2) p.classification = false;                                     p.override_with_best_model = override_with_best_model;                                     p.epochs = epochs;                                     p.seed = seed;                                     p.train_samples_per_iteration = train_samples_per_iteration;                                     try {                                       p.invoke();                                     } catch (Throwable t) {                                       t.printStackTrace();                                       throw new RuntimeException(t);                                     } finally {                                       p.delete();                                     }                                      // score and check result (on full data)                                     model2 = UKV.get(dest); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(model2.get_params().state == Job.JobState.DONE); //HEX-1817                                     // test HTML                                     {                                       StringBuilder sb = new StringBuilder();                                       model2.generateHTML("test", sb);                                     }                                      // score and check result of the best_model                                     if (model2.actual_best_model_key != null) {                                       final DeepLearningModel best_model = UKV.get(model2.actual_best_model_key);                                       Assert.assertTrue(best_model.get_params().state == Job.JobState.DONE); //HEX-1817                                       // test HTML                                       {                                         StringBuilder sb = new StringBuilder();                                         best_model.generateHTML("test", sb);                                       }                                       if (override_with_best_model) {                                         Assert.assertEquals(best_model.error(), model2.error(), 0);                                       }                                     }                                      if (valid == null) valid = frame;                                     double threshold = 0;                                     if (model2.isClassifier()) {                                       Frame pred = null, pred2 = null;                                       try {                                         pred = model2.score(valid);                                         StringBuilder sb = new StringBuilder();                                          AUC auc = new AUC();                                         double error = 0;                                         // binary                                         if (model2.nclasses() == 2) {                                           auc.actual = valid;                                           assert (resp == 1);                                           auc.vactual = valid.vecs()[resp];                                           auc.predict = pred;                                           auc.vpredict = pred.vecs()[2];                                           auc.invoke();                                           auc.toASCII(sb);                                           AUCData aucd = auc.data();                                           threshold = aucd.threshold();                                           error = aucd.err();                                           Log.info(sb);                                            // check that auc.cm() is the right CM                                           Assert.assertEquals(new ConfusionMatrix(aucd.cm()).err(), error, 1e-15);                                            // check that calcError() is consistent as well (for CM=null, AUC!=null)                                           Assert.assertEquals(model2.calcError(valid, auc.vactual, pred, pred, "training", false, 0, null, auc, null), error, 1e-15);                                         }                                          // Compute CM                                         double CMerrorOrig;                                         {                                           sb = new StringBuilder();                                           water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[resp];                                           CM.predict = pred;                                           CM.vpredict = pred.vecs()[0];                                           CM.invoke();                                           sb.append("\n");                                           sb.append("Threshold: " + "default\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           CMerrorOrig = new ConfusionMatrix(CM.cm).err();                                         }                                          // confirm that orig CM was made with threshold 0.5                                         // put pred2 into UKV, and allow access                                         pred2 = new Frame(Key.make("pred2"), pred.names(), pred.vecs());                                         pred2.delete_and_lock(null);                                         pred2.unlock(null);                                          if (model2.nclasses() == 2) {                                           // make labels with 0.5 threshold for binary classifier                                           Env ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + 0.5);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev!=null) ev.remove_and_unlock();                                           }                                            water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: " + 0.5 + "\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr, CMerrorOrig, 1e-15);                                            // make labels with AUC-given threshold for best F1                                           ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + threshold);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev != null) ev.remove_and_unlock();                                           }                                            CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: ").append(threshold).append("\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr2 = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr2, error, 1e-15);                                         }                                       } finally {                                         if (pred != null) pred.delete();                                         if (pred2 != null) pred2.delete();                                       }                                     } //classifier                                     Log.info("Parameters combination " + count + ": PASS");                                     testcount++;                                   } catch (Throwable t) {                                     t.printStackTrace();                                     throw new RuntimeException(t);                                   } finally {                                     if (model1 != null) {                                       model1.delete_xval_models();                                       model1.delete_best_model();                                       model1.delete();                                     }                                     if (model2 != null) {                                       model2.delete_xval_models();                                       model2.delete_best_model();                                       model2.delete();                                     }                                   }                                 }                               }                             }                           }                         }                       }                     }                   }                 }               }             }           }         }       } finally {         frame.delete();         vframe.delete();       }     }     Log.info("\n\n=============================================");     Log.info("Tested " + testcount + " out of " + count + " parameter combinations.");     Log.info("=============================================");   }" compose:Replacement merge: LineBased]
								[NT -> Long : InnerClassDecl]
									[T -> - : Modifiers "public static" compose:Replacement merge: SemanticConflict]
									[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
									[T -> Long : Id "Long" compose:Replacement merge: Default]
									[T -> - : ExtendsList "extends DeepLearningProstateTest" compose:Replacement merge: Default]
									[T -> run({FormalParametersInternal}) : MethodDecl "@Test     @Ignore     public void run() throws Exception { runFraction(1f); }" compose:Replacement merge: LineBased]
								[NT -> Mid : InnerClassDecl]
									[T -> - : Modifiers "public static" compose:Replacement merge: SemanticConflict]
									[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
									[T -> Mid : Id "Mid" compose:Replacement merge: Default]
									[T -> - : ExtendsList "extends DeepLearningProstateTest" compose:Replacement merge: Default]
									[T -> run({FormalParametersInternal}) : MethodDecl "@Test     public void run() throws Exception { runFraction(0.01f); }" compose:Replacement merge: LineBased]
								[NT -> Short : InnerClassDecl]
									[T -> - : Modifiers "public static" compose:Replacement merge: SemanticConflict]
									[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
									[T -> Short : Id "Short" compose:Replacement merge: Default]
									[T -> - : ExtendsList "extends DeepLearningProstateTest" compose:Replacement merge: Default]
									[T -> run({FormalParametersInternal}) : MethodDecl "@Test public void run() throws Exception { runFraction(0.001f); }" compose:Replacement merge: LineBased]
[NT -> base : Feature]
	[NT -> src : Folder]
		[NT -> test : Folder]
			[NT -> java : Folder]
				[NT -> hex : Folder]
					[NT -> DeepLearningProstateTest.java : Java-File]
						[NT -> - : CompilationUnit]
							[T -> - : PackageDeclaration "package hex;" compose:Replacement merge: Default]
							[T -> hex.deeplearning.DeepLearning{ImportPackage} : ImportDeclaration "import hex.deeplearning.DeepLearning;" compose:Replacement merge: Default]
							[T -> hex.deeplearning.DeepLearningModel{ImportPackage} : ImportDeclaration "import hex.deeplearning.DeepLearningModel;" compose:Replacement merge: Default]
							[T -> org.junit.Assert{ImportPackage} : ImportDeclaration "import org.junit.Assert;" compose:Replacement merge: Default]
							[T -> org.junit.BeforeClass{ImportPackage} : ImportDeclaration "import org.junit.BeforeClass;" compose:Replacement merge: Default]
							[T -> org.junit.Ignore{ImportPackage} : ImportDeclaration "import org.junit.Ignore;" compose:Replacement merge: Default]
							[T -> org.junit.Test{ImportPackage} : ImportDeclaration "import org.junit.Test;" compose:Replacement merge: Default]
							[T -> water.* : ImportDeclaration "import water.*;" compose:Replacement merge: Default]
							[T -> water.api.AUC{ImportPackage} : ImportDeclaration "import water.api.AUC;" compose:Replacement merge: Default]
							[T -> water.api.AUCData{ImportPackage} : ImportDeclaration "import water.api.AUCData;" compose:Replacement merge: Default]
							[T -> water.exec.Env{ImportPackage} : ImportDeclaration "import water.exec.Env;" compose:Replacement merge: Default]
							[T -> water.exec.Exec2{ImportPackage} : ImportDeclaration "import water.exec.Exec2;" compose:Replacement merge: Default]
							[T -> water.fvec.Frame{ImportPackage} : ImportDeclaration "import water.fvec.Frame;" compose:Replacement merge: Default]
							[T -> water.fvec.NFSFileVec{ImportPackage} : ImportDeclaration "import water.fvec.NFSFileVec;" compose:Replacement merge: Default]
							[T -> water.fvec.ParseDataset2{ImportPackage} : ImportDeclaration "import water.fvec.ParseDataset2;" compose:Replacement merge: Default]
							[T -> water.util.Log{ImportPackage} : ImportDeclaration "import water.util.Log;" compose:Replacement merge: Default]
							[T -> java.util.Random{ImportPackage} : ImportDeclaration "import java.util.Random;" compose:Replacement merge: Default]
							[NT -> DeepLearningProstateTest : ClassDeclaration]
								[T -> - : Modifiers "public" compose:Replacement merge: SemanticConflict]
								[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
								[T -> DeepLearningProstateTest : Id "DeepLearningProstateTest" compose:Replacement merge: Default]
								[T -> - : ExtendsList "extends TestUtil" compose:Replacement merge: Default]
								[T -> stall({FormalParametersInternal}) : MethodDecl "@BeforeClass public static void stall() {     stall_till_cloudsize(JUnitRunnerDebug.NODES);   }" compose:Replacement merge: LineBased]
								[T -> runFraction(float-float) : MethodDecl "public void runFraction(float fraction) {     long seed = 0xDECAF;     Random rng = new Random(seed);     String[] datasets = new String[2];     int[][] responses = new int[datasets.length][];     datasets[0] = "smalldata/./logreg/prostate.csv"; responses[0] = new int[]{1,2,8}; //CAPSULE (binomial), AGE (regression), GLEASON (multi-class)     datasets[1] = "smalldata/iris/iris.csv";  responses[1] = new int[]{4}; //Iris-type (multi-class)      int testcount = 0;     int count = 0;     for (int i =0;i<datasets.length;++i) {       String dataset = datasets[i];       Key file = NFSFileVec.make(find_test_file(dataset));       Frame frame = ParseDataset2.parse(Key.make(), new Key[]{file});       Key vfile = NFSFileVec.make(find_test_file(dataset));       Frame vframe = ParseDataset2.parse(Key.make(), new Key[]{vfile});        try {         for (boolean replicate : new boolean[]{                 true,                 false,         }) {           for (boolean load_balance : new boolean[]{                   true,                   false,           }) {             for (boolean shuffle : new boolean[]{                     true,                     false,             }) {               for (boolean balance_classes : new boolean[]{                       true,                       false,               }) {                 for (int resp : responses[i]) {                   for (DeepLearning.ClassSamplingMethod csm : new DeepLearning.ClassSamplingMethod[]{                           DeepLearning.ClassSamplingMethod.Stratified,                           DeepLearning.ClassSamplingMethod.Uniform                   }) {                     for (int scoretraining : new int[]{                             200,                             20,                             0,                     }) {                       for (int scorevalidation : new int[]{                               200,                               20,                               0,                       }) {                         for (int vf : new int[]{                                 0,  //no validation                                 1,  //same as source                                 -1, //different validation frame                         }) {                           for (int n_folds : new int[]{                                   0,                                   2,                           }) {                             if (n_folds != 0 && vf != 0) continue;                             for (boolean keep_cv_splits : new boolean[]{false}) { //otherwise it leaks                               for (boolean override_with_best_model : new boolean[]{false, true}) {                                 for (int train_samples_per_iteration : new int[]{                                         -2, //auto-tune                                         -1, //N epochs per iteration                                         0, //1 epoch per iteration                                         rng.nextInt(100), // <1 epoch per iteration                                         500, //>1 epoch per iteration                                 }) {                                   DeepLearningModel model1 = null, model2 = null;                                   Key dest = null, dest_tmp = null;                                   count++;                                   if (fraction < rng.nextFloat()) continue;                                    try {                                     Log.info("**************************)");                                     Log.info("Starting test #" + count);                                     Log.info("**************************)");                                     final double epochs = 7 + rng.nextDouble() + rng.nextInt(4);                                     final int[] hidden = new int[]{1 + rng.nextInt(4), 1 + rng.nextInt(6)};                                     Frame valid = null; //no validation                                     if (vf == 1) valid = frame; //use the same frame for validation                                     else if (vf == -1) valid = vframe; //different validation frame (here: from the same file)                                      // build the model, with all kinds of shuffling/rebalancing/sampling                                     dest_tmp = Key.make("first");                                     {                                       Log.info("Using seed: " + seed);                                       DeepLearning p = new DeepLearning();                                       p.checkpoint = null;                                       p.destination_key = dest_tmp;                                        p.source = frame;                                       p.response = frame.vecs()[resp];                                       p.validation = valid;                                        p.hidden = hidden;                                       if (i == 0 && resp == 2) p.classification = false; //                                      p.best_model_key = best_model_key;                                       p.override_with_best_model = override_with_best_model;                                       p.epochs = epochs;                                       p.n_folds = n_folds;                                       p.keep_cross_validation_splits = keep_cv_splits;                                       p.seed = seed;                                       p.train_samples_per_iteration = train_samples_per_iteration;                                       p.force_load_balance = load_balance;                                       p.replicate_training_data = replicate;                                       p.shuffle_training_data = shuffle;                                       p.score_training_samples = scoretraining;                                       p.score_validation_samples = scorevalidation;                                       p.classification_stop = -1;                                       p.regression_stop = -1;                                       p.balance_classes = balance_classes;                                       p.quiet_mode = true;                                       p.score_validation_sampling = csm;                                       try {                                         p.invoke();                                       } catch (Throwable t) {                                         t.printStackTrace();                                         throw new RuntimeException(t);                                       } finally {                                         p.delete();                                       }                                        model1 = UKV.get(dest_tmp);                                        if (n_folds != 0)                                       // test HTML of cv models                                       {                                         for (Key k : model1.get_params().xval_models) {                                           DeepLearningModel cv_model = UKV.get(k);                                           StringBuilder sb = new StringBuilder();                                           cv_model.generateHTML("cv", sb);                                           cv_model.delete_best_model();                                           cv_model.delete();                                         }                                       }                                     }                                      // Do some more training via checkpoint restart                                     // For n_folds, continue without n_folds (not yet implemented) - from now on, model2 will have n_folds=0...                                     dest = Key.make("restart");                                     DeepLearning p = new DeepLearning();                                     final DeepLearningModel tmp_model = UKV.get(dest_tmp); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(tmp_model.get_params().state == Job.JobState.DONE); //HEX-1817                                     Assert.assertTrue(tmp_model.model_info().get_processed_total() >= frame.numRows() * epochs);                                     assert (tmp_model != null);                                      p.checkpoint = dest_tmp;                                     p.destination_key = dest;                                     p.n_folds = 0;                                      p.source = frame;                                     p.validation = valid;                                     p.response = frame.vecs()[resp];                                     if (i == 0 && resp == 2) p.classification = false;                                     p.override_with_best_model = override_with_best_model;                                     p.epochs = epochs;                                     p.seed = seed;                                     p.train_samples_per_iteration = train_samples_per_iteration;                                     try {                                       p.invoke();                                     } catch (Throwable t) {                                       t.printStackTrace();                                       throw new RuntimeException(t);                                     } finally {                                       p.delete();                                     }                                      // score and check result (on full data)                                     model2 = UKV.get(dest); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(model2.get_params().state == Job.JobState.DONE); //HEX-1817                                     // test HTML                                     {                                       StringBuilder sb = new StringBuilder();                                       model2.generateHTML("test", sb);                                     }                                      // score and check result of the best_model                                     if (model2.actual_best_model_key != null) {                                       final DeepLearningModel best_model = UKV.get(model2.actual_best_model_key);                                       Assert.assertTrue(best_model.get_params().state == Job.JobState.DONE); //HEX-1817                                       // test HTML                                       {                                         StringBuilder sb = new StringBuilder();                                         best_model.generateHTML("test", sb);                                       }                                       if (override_with_best_model) {                                         Assert.assertEquals(best_model.error(), model2.error(), 0);                                       }                                     }                                      if (valid == null) valid = frame;                                     double threshold = 0;                                     if (model2.isClassifier()) {                                       Frame pred = null, pred2 = null;                                       try {                                         pred = model2.score(valid);                                         StringBuilder sb = new StringBuilder();                                          AUC auc = new AUC();                                         double error = 0;                                         // binary                                         if (model2.nclasses() == 2) {                                           auc.actual = valid;                                           assert (resp == 1);                                           auc.vactual = valid.vecs()[resp];                                           auc.predict = pred;                                           auc.vpredict = pred.vecs()[2];                                           auc.invoke();                                           auc.toASCII(sb);                                           AUCData aucd = auc.data();                                           threshold = aucd.threshold();                                           error = aucd.err();                                           Log.info(sb);                                            // check that auc.cm() is the right CM                                           Assert.assertEquals(new ConfusionMatrix(aucd.cm()).err(), error, 1e-15);                                            // check that calcError() is consistent as well (for CM=null, AUC!=null)                                           Assert.assertEquals(model2.calcError(valid, auc.vactual, pred, pred, "training", false, 0, null, auc, null), error, 1e-15);                                         }                                          // Compute CM                                         double CMerrorOrig;                                         {                                           sb = new StringBuilder();                                           water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[resp];                                           CM.predict = pred;                                           CM.vpredict = pred.vecs()[0];                                           CM.invoke();                                           sb.append("\n");                                           sb.append("Threshold: " + "default\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           CMerrorOrig = new ConfusionMatrix(CM.cm).err();                                         }                                          // confirm that orig CM was made with threshold 0.5                                         // put pred2 into UKV, and allow access                                         pred2 = new Frame(Key.make("pred2"), pred.names(), pred.vecs());                                         pred2.delete_and_lock(null);                                         pred2.unlock(null);                                          if (model2.nclasses() == 2) {                                           // make labels with 0.5 threshold for binary classifier                                           Env ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + 0.5);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev!=null) ev.remove_and_unlock();                                           }                                            water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: " + 0.5 + "\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr, CMerrorOrig, 1e-15);                                            // make labels with AUC-given threshold for best F1                                           ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + threshold);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev != null) ev.remove_and_unlock();                                           }                                            CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: ").append(threshold).append("\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr2 = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr2, error, 1e-15);                                         }                                       } finally {                                         if (pred != null) pred.delete();                                         if (pred2 != null) pred2.delete();                                       }                                     } //classifier                                     Log.info("Parameters combination " + count + ": PASS");                                     testcount++;                                   } catch (Throwable t) {                                     t.printStackTrace();                                     throw new RuntimeException(t);                                   } finally {                                     if (model1 != null) {                                       model1.delete_xval_models();                                       model1.delete_best_model();                                       model1.delete();                                     }                                     if (model2 != null) {                                       model2.delete_xval_models();                                       model2.delete_best_model();                                       model2.delete();                                     }                                   }                                 }                               }                             }                           }                         }                       }                     }                   }                 }               }             }           }         }       } finally {         frame.delete();         vframe.delete();       }     }     Log.info("\n\n=============================================");     Log.info("Tested " + testcount + " out of " + count + " parameter combinations.");     Log.info("=============================================");   }" compose:Replacement merge: LineBased]
								[NT -> Long : InnerClassDecl]
									[T -> - : Modifiers "public static" compose:Replacement merge: SemanticConflict]
									[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
									[T -> Long : Id "Long" compose:Replacement merge: Default]
									[T -> - : ExtendsList "extends DeepLearningProstateTest" compose:Replacement merge: Default]
									[T -> run({FormalParametersInternal}) : MethodDecl "@Test     @Ignore     public void run() throws Exception { runFraction(1f); }" compose:Replacement merge: LineBased]
								[NT -> Mid : InnerClassDecl]
									[T -> - : Modifiers "public static" compose:Replacement merge: SemanticConflict]
									[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
									[T -> Mid : Id "Mid" compose:Replacement merge: Default]
									[T -> - : ExtendsList "extends DeepLearningProstateTest" compose:Replacement merge: Default]
									[T -> run({FormalParametersInternal}) : MethodDecl "@Test     public void run() throws Exception { runFraction(0.01f); }" compose:Replacement merge: LineBased]
								[NT -> Short : InnerClassDecl]
									[T -> - : Modifiers "public static" compose:Replacement merge: SemanticConflict]
									[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
									[T -> Short : Id "Short" compose:Replacement merge: Default]
									[T -> - : ExtendsList "extends DeepLearningProstateTest" compose:Replacement merge: Default]
									[T -> run({FormalParametersInternal}) : MethodDecl "@Test public void run() throws Exception { runFraction(0.001f); }" compose:Replacement merge: LineBased]
[NT -> right : Feature]
	[NT -> src : Folder]
		[NT -> test : Folder]
			[NT -> java : Folder]
				[NT -> hex : Folder]
					[NT -> DeepLearningProstateTest.java : Java-File]
						[NT -> - : CompilationUnit]
							[T -> - : PackageDeclaration "package hex;" compose:Replacement merge: Default]
							[T -> hex.deeplearning.DeepLearning{ImportPackage} : ImportDeclaration "import hex.deeplearning.DeepLearning;" compose:Replacement merge: Default]
							[T -> hex.deeplearning.DeepLearningModel{ImportPackage} : ImportDeclaration "import hex.deeplearning.DeepLearningModel;" compose:Replacement merge: Default]
							[T -> org.junit.Assert{ImportPackage} : ImportDeclaration "import org.junit.Assert;" compose:Replacement merge: Default]
							[T -> org.junit.BeforeClass{ImportPackage} : ImportDeclaration "import org.junit.BeforeClass;" compose:Replacement merge: Default]
							[T -> org.junit.Ignore{ImportPackage} : ImportDeclaration "import org.junit.Ignore;" compose:Replacement merge: Default]
							[T -> org.junit.Test{ImportPackage} : ImportDeclaration "import org.junit.Test;" compose:Replacement merge: Default]
							[T -> water.* : ImportDeclaration "import water.*;" compose:Replacement merge: Default]
							[T -> water.api.AUC{ImportPackage} : ImportDeclaration "import water.api.AUC;" compose:Replacement merge: Default]
							[T -> water.api.AUCData{ImportPackage} : ImportDeclaration "import water.api.AUCData;" compose:Replacement merge: Default]
							[T -> water.exec.Env{ImportPackage} : ImportDeclaration "import water.exec.Env;" compose:Replacement merge: Default]
							[T -> water.exec.Exec2{ImportPackage} : ImportDeclaration "import water.exec.Exec2;" compose:Replacement merge: Default]
							[T -> water.fvec.Frame{ImportPackage} : ImportDeclaration "import water.fvec.Frame;" compose:Replacement merge: Default]
							[T -> water.fvec.NFSFileVec{ImportPackage} : ImportDeclaration "import water.fvec.NFSFileVec;" compose:Replacement merge: Default]
							[T -> water.fvec.ParseDataset2{ImportPackage} : ImportDeclaration "import water.fvec.ParseDataset2;" compose:Replacement merge: Default]
							[T -> water.util.Log{ImportPackage} : ImportDeclaration "import water.util.Log;" compose:Replacement merge: Default]
							[T -> java.util.Random{ImportPackage} : ImportDeclaration "import java.util.Random;" compose:Replacement merge: Default]
							[NT -> DeepLearningProstateTest : ClassDeclaration]
								[T -> - : Modifiers "public" compose:Replacement merge: SemanticConflict]
								[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
								[T -> DeepLearningProstateTest : Id "DeepLearningProstateTest" compose:Replacement merge: Default]
								[T -> - : ExtendsList "extends TestUtil" compose:Replacement merge: Default]
								[T -> stall({FormalParametersInternal}) : MethodDecl "@BeforeClass public static void stall() {     stall_till_cloudsize(JUnitRunnerDebug.NODES);   }" compose:Replacement merge: LineBased]
								[T -> runFraction(float-float) : MethodDecl "public void runFraction(float fraction) {     long seed = 0xDECAF;     Random rng = new Random(seed);     String[] datasets = new String[2];     int[][] responses = new int[datasets.length][];     datasets[0] = "smalldata/./logreg/prostate.csv"; responses[0] = new int[]{1,2,8}; //CAPSULE (binomial), AGE (regression), GLEASON (multi-class)     datasets[1] = "smalldata/iris/iris.csv";  responses[1] = new int[]{4}; //Iris-type (multi-class)      int testcount = 0;     int count = 0;     for (int i =0;i<datasets.length;++i) {       String dataset = datasets[i];       Key file = NFSFileVec.make(find_test_file(dataset));       Frame frame = ParseDataset2.parse(Key.make(), new Key[]{file});       Key vfile = NFSFileVec.make(find_test_file(dataset));       Frame vframe = ParseDataset2.parse(Key.make(), new Key[]{vfile});        try {         for (boolean replicate : new boolean[]{                 true,                 false,         }) {           for (boolean load_balance : new boolean[]{                   true,                   false,           }) {             for (boolean shuffle : new boolean[]{                     true,                     false,             }) {               for (boolean balance_classes : new boolean[]{                       true,                       false,               }) {                 for (int resp : responses[i]) {                   for (DeepLearning.ClassSamplingMethod csm : new DeepLearning.ClassSamplingMethod[]{                           DeepLearning.ClassSamplingMethod.Stratified,                           DeepLearning.ClassSamplingMethod.Uniform                   }) {                     for (int scoretraining : new int[]{                             200,                             20,                             0,                     }) {                       for (int scorevalidation : new int[]{                               200,                               20,                               0,                       }) {                         for (int vf : new int[]{                                 0,  //no validation                                 1,  //same as source                                 -1, //different validation frame                         }) {                           for (int n_folds : new int[]{                                   0,                                   2,                           }) {                             if (n_folds != 0 && vf != 0) continue;                             for (boolean keep_cv_splits : new boolean[]{false}) { //otherwise it leaks                               for (boolean override_with_best_model : new boolean[]{false, true}) {                                 for (int train_samples_per_iteration : new int[]{                                         -2, //auto-tune                                         -1, //N epochs per iteration                                         0, //1 epoch per iteration                                         rng.nextInt(200), // <1 epoch per iteration                                         500, //>1 epoch per iteration                                 }) {                                   DeepLearningModel model1 = null, model2 = null;                                   Key dest = null, dest_tmp = null;                                   count++;                                   if (fraction < rng.nextFloat()) continue;                                    try {                                     Log.info("**************************)");                                     Log.info("Starting test #" + count);                                     Log.info("**************************)");                                     final double epochs = 7 + rng.nextDouble() + rng.nextInt(4);                                     final int[] hidden = new int[]{1 + rng.nextInt(4), 1 + rng.nextInt(6)};                                     Frame valid = null; //no validation                                     if (vf == 1) valid = frame; //use the same frame for validation                                     else if (vf == -1) valid = vframe; //different validation frame (here: from the same file)                                      // build the model, with all kinds of shuffling/rebalancing/sampling                                     dest_tmp = Key.make("first");                                     {                                       Log.info("Using seed: " + seed);                                       DeepLearning p = new DeepLearning();                                       p.checkpoint = null;                                       p.destination_key = dest_tmp;                                        p.source = frame;                                       p.response = frame.vecs()[resp];                                       p.validation = valid;                                        p.hidden = hidden;                                       if (i == 0 && resp == 2) p.classification = false; //                                      p.best_model_key = best_model_key;                                       p.override_with_best_model = override_with_best_model;                                       p.epochs = epochs;                                       p.n_folds = n_folds;                                       p.keep_cross_validation_splits = keep_cv_splits;                                       p.seed = seed;                                       p.train_samples_per_iteration = train_samples_per_iteration;                                       p.force_load_balance = load_balance;                                       p.replicate_training_data = replicate;                                       p.shuffle_training_data = shuffle;                                       p.score_training_samples = scoretraining;                                       p.score_validation_samples = scorevalidation;                                       p.classification_stop = -1;                                       p.regression_stop = -1;                                       p.balance_classes = balance_classes;                                       p.quiet_mode = true;                                       p.score_validation_sampling = csm;                                       try {                                         p.invoke();                                       } catch (Throwable t) {                                         t.printStackTrace();                                         throw new RuntimeException(t);                                       } finally {                                         p.delete();                                       }                                        model1 = UKV.get(dest_tmp);                                       assert( ((p.train_samples_per_iteration <= 0 || p.train_samples_per_iteration >= frame.numRows()) && model1.epoch_counter > epochs)                                               || Math.abs(model1.epoch_counter - epochs)/epochs < 0.20 );                                        if (n_folds != 0)                                       // test HTML of cv models                                       {                                         for (Key k : model1.get_params().xval_models) {                                           DeepLearningModel cv_model = UKV.get(k);                                           StringBuilder sb = new StringBuilder();                                           cv_model.generateHTML("cv", sb);                                           cv_model.delete_best_model();                                           cv_model.delete();                                         }                                       }                                     }                                      // Do some more training via checkpoint restart                                     // For n_folds, continue without n_folds (not yet implemented) - from now on, model2 will have n_folds=0...                                     dest = Key.make("restart");                                     DeepLearning p = new DeepLearning();                                     final DeepLearningModel tmp_model = UKV.get(dest_tmp); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(tmp_model.get_params().state == Job.JobState.DONE); //HEX-1817                                     Assert.assertTrue(tmp_model.model_info().get_processed_total() >= frame.numRows() * epochs);                                     assert (tmp_model != null);                                      p.checkpoint = dest_tmp;                                     p.destination_key = dest;                                     p.n_folds = 0;                                      p.source = frame;                                     p.validation = valid;                                     p.response = frame.vecs()[resp];                                     if (i == 0 && resp == 2) p.classification = false;                                     p.override_with_best_model = override_with_best_model;                                     p.epochs = epochs;                                     p.seed = seed;                                     p.train_samples_per_iteration = train_samples_per_iteration;                                     try {                                       p.invoke();                                     } catch (Throwable t) {                                       t.printStackTrace();                                       throw new RuntimeException(t);                                     } finally {                                       p.delete();                                     }                                      // score and check result (on full data)                                     model2 = UKV.get(dest); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(model2.get_params().state == Job.JobState.DONE); //HEX-1817                                     // test HTML                                     {                                       StringBuilder sb = new StringBuilder();                                       model2.generateHTML("test", sb);                                     }                                      // score and check result of the best_model                                     if (model2.actual_best_model_key != null) {                                       final DeepLearningModel best_model = UKV.get(model2.actual_best_model_key);                                       Assert.assertTrue(best_model.get_params().state == Job.JobState.DONE); //HEX-1817                                       // test HTML                                       {                                         StringBuilder sb = new StringBuilder();                                         best_model.generateHTML("test", sb);                                       }                                       if (override_with_best_model) {                                         Assert.assertEquals(best_model.error(), model2.error(), 0);                                       }                                     }                                      if (valid == null) valid = frame;                                     double threshold = 0;                                     if (model2.isClassifier()) {                                       Frame pred = null, pred2 = null;                                       try {                                         pred = model2.score(valid);                                         StringBuilder sb = new StringBuilder();                                          AUC auc = new AUC();                                         double error = 0;                                         // binary                                         if (model2.nclasses() == 2) {                                           auc.actual = valid;                                           assert (resp == 1);                                           auc.vactual = valid.vecs()[resp];                                           auc.predict = pred;                                           auc.vpredict = pred.vecs()[2];                                           auc.invoke();                                           auc.toASCII(sb);                                           AUCData aucd = auc.data();                                           threshold = aucd.threshold();                                           error = aucd.err();                                           Log.info(sb);                                            // check that auc.cm() is the right CM                                           Assert.assertEquals(new ConfusionMatrix(aucd.cm()).err(), error, 1e-15);                                            // check that calcError() is consistent as well (for CM=null, AUC!=null)                                           Assert.assertEquals(model2.calcError(valid, auc.vactual, pred, pred, "training", false, 0, null, auc, null), error, 1e-15);                                         }                                          // Compute CM                                         double CMerrorOrig;                                         {                                           sb = new StringBuilder();                                           water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[resp];                                           CM.predict = pred;                                           CM.vpredict = pred.vecs()[0];                                           CM.invoke();                                           sb.append("\n");                                           sb.append("Threshold: " + "default\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           CMerrorOrig = new ConfusionMatrix(CM.cm).err();                                         }                                          // confirm that orig CM was made with threshold 0.5                                         // put pred2 into UKV, and allow access                                         pred2 = new Frame(Key.make("pred2"), pred.names(), pred.vecs());                                         pred2.delete_and_lock(null);                                         pred2.unlock(null);                                          if (model2.nclasses() == 2) {                                           // make labels with 0.5 threshold for binary classifier                                           Env ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + 0.5);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev!=null) ev.remove_and_unlock();                                           }                                            water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: " + 0.5 + "\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr, CMerrorOrig, 1e-15);                                            // make labels with AUC-given threshold for best F1                                           ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + threshold);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev != null) ev.remove_and_unlock();                                           }                                            CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: ").append(threshold).append("\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr2 = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr2, error, 1e-15);                                         }                                       } finally {                                         if (pred != null) pred.delete();                                         if (pred2 != null) pred2.delete();                                       }                                     } //classifier                                     Log.info("Parameters combination " + count + ": PASS");                                     testcount++;                                   } catch (Throwable t) {                                     t.printStackTrace();                                     throw new RuntimeException(t);                                   } finally {                                     if (model1 != null) {                                       model1.delete_xval_models();                                       model1.delete_best_model();                                       model1.delete();                                     }                                     if (model2 != null) {                                       model2.delete_xval_models();                                       model2.delete_best_model();                                       model2.delete();                                     }                                   }                                 }                               }                             }                           }                         }                       }                     }                   }                 }               }             }           }         }       } finally {         frame.delete();         vframe.delete();       }     }     Log.info("\n\n=============================================");     Log.info("Tested " + testcount + " out of " + count + " parameter combinations.");     Log.info("=============================================");   }" compose:Replacement merge: LineBased]
								[NT -> Long : InnerClassDecl]
									[T -> - : Modifiers "public static" compose:Replacement merge: SemanticConflict]
									[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
									[T -> Long : Id "Long" compose:Replacement merge: Default]
									[T -> - : ExtendsList "extends DeepLearningProstateTest" compose:Replacement merge: Default]
									[T -> run({FormalParametersInternal}) : MethodDecl "@Test     @Ignore     public void run() throws Exception { runFraction(1f); }" compose:Replacement merge: LineBased]
								[NT -> Mid : InnerClassDecl]
									[T -> - : Modifiers "public static" compose:Replacement merge: SemanticConflict]
									[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
									[T -> Mid : Id "Mid" compose:Replacement merge: Default]
									[T -> - : ExtendsList "extends DeepLearningProstateTest" compose:Replacement merge: Default]
									[T -> run({FormalParametersInternal}) : MethodDecl "@Test     public void run() throws Exception { runFraction(0.01f); }" compose:Replacement merge: LineBased]
								[NT -> Short : InnerClassDecl]
									[T -> - : Modifiers "public static" compose:Replacement merge: SemanticConflict]
									[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
									[T -> Short : Id "Short" compose:Replacement merge: Default]
									[T -> - : ExtendsList "extends DeepLearningProstateTest" compose:Replacement merge: Default]
									[T -> run({FormalParametersInternal}) : MethodDecl "@Test public void run() throws Exception { runFraction(0.001f); }" compose:Replacement merge: LineBased]
[NT -> left : Feature]
	[NT -> src : Folder]
		[NT -> test : Folder]
			[NT -> java : Folder]
				[NT -> hex : Folder]
					[NT -> DeepLearningProstateTest.java.merge : .java.merge-File]
						[T -> DeepLearningProstateTest.java : .java-Content "package hex;  import hex.deeplearning.DeepLearning; import hex.deeplearning.DeepLearningModel; import org.junit.Assert; import org.junit.BeforeClass; import org.junit.Ignore; import org.junit.Test; import water.*; import water.api.AUC; import water.api.AUCData; import water.exec.Env; import water.exec.Exec2; import water.fvec.Frame; import water.fvec.NFSFileVec; import water.fvec.ParseDataset2; import water.util.Log;  import java.util.Random;  public class DeepLearningProstateTest extends TestUtil {   @BeforeClass public static void stall() {     stall_till_cloudsize(JUnitRunnerDebug.NODES);   }    public void runFraction(float fraction) {     long seed = 0xDECAF;     Random rng = new Random(seed);     String[] datasets = new String[2];     int[][] responses = new int[datasets.length][];     datasets[0] = "smalldata/./logreg/prostate.csv"; responses[0] = new int[]{1,2,8}; //CAPSULE (binomial), AGE (regression), GLEASON (multi-class)     datasets[1] = "smalldata/iris/iris.csv";  responses[1] = new int[]{4}; //Iris-type (multi-class)      int testcount = 0;     int count = 0;     for (int i =0;i<datasets.length;++i) {       String dataset = datasets[i];       Key file = NFSFileVec.make(find_test_file(dataset));       Frame frame = ParseDataset2.parse(Key.make(), new Key[]{file});       Key vfile = NFSFileVec.make(find_test_file(dataset));       Frame vframe = ParseDataset2.parse(Key.make(), new Key[]{vfile});        try {         for (boolean replicate : new boolean[]{                 true,                 false,         }) {           for (boolean load_balance : new boolean[]{                   true,                   false,           }) {             for (boolean shuffle : new boolean[]{                     true,                     false,             }) {               for (boolean balance_classes : new boolean[]{                       true,                       false,               }) {                 for (int resp : responses[i]) {                   for (DeepLearning.ClassSamplingMethod csm : new DeepLearning.ClassSamplingMethod[]{                           DeepLearning.ClassSamplingMethod.Stratified,                           DeepLearning.ClassSamplingMethod.Uniform                   }) {                     for (int scoretraining : new int[]{                             200,                             20,                             0,                     }) {                       for (int scorevalidation : new int[]{                               200,                               20,                               0,                       }) {                         for (int vf : new int[]{                                 0,  //no validation                                 1,  //same as source                                 -1, //different validation frame                         }) {                           for (int n_folds : new int[]{                                   0,                                   2,                           }) {                             if (n_folds != 0 && vf != 0) continue;                             for (boolean keep_cv_splits : new boolean[]{false}) { //otherwise it leaks                               for (boolean override_with_best_model : new boolean[]{false, true}) {                                 for (int train_samples_per_iteration : new int[]{                                         -2, //auto-tune                                         -1, //N epochs per iteration                                         0, //1 epoch per iteration                                         rng.nextInt(100), // <1 epoch per iteration                                         500, //>1 epoch per iteration                                 }) {                                   DeepLearningModel model1 = null, model2 = null;                                   Key dest = null, dest_tmp = null;                                   count++;                                   if (fraction < rng.nextFloat()) continue;                                    try {                                     Log.info("**************************)");                                     Log.info("Starting test #" + count);                                     Log.info("**************************)");                                     final double epochs = 7 + rng.nextDouble() + rng.nextInt(4);                                     final int[] hidden = new int[]{1 + rng.nextInt(4), 1 + rng.nextInt(6)};                                     Frame valid = null; //no validation                                     if (vf == 1) valid = frame; //use the same frame for validation                                     else if (vf == -1) valid = vframe; //different validation frame (here: from the same file)                                      // build the model, with all kinds of shuffling/rebalancing/sampling                                     dest_tmp = Key.make("first");                                     {                                       Log.info("Using seed: " + seed);                                       DeepLearning p = new DeepLearning();                                       p.checkpoint = null;                                       p.destination_key = dest_tmp;                                        p.source = frame;                                       p.response = frame.vecs()[resp];                                       p.validation = valid;                                        p.hidden = hidden;                                       if (i == 0 && resp == 2) p.classification = false; //                                      p.best_model_key = best_model_key;                                       p.override_with_best_model = override_with_best_model;                                       p.epochs = epochs;                                       p.n_folds = n_folds;                                       p.keep_cross_validation_splits = keep_cv_splits;                                       p.seed = seed;                                       p.train_samples_per_iteration = train_samples_per_iteration;                                       p.force_load_balance = load_balance;                                       p.replicate_training_data = replicate;                                       p.shuffle_training_data = shuffle;                                       p.score_training_samples = scoretraining;                                       p.score_validation_samples = scorevalidation;                                       p.classification_stop = -1;                                       p.regression_stop = -1;                                       p.balance_classes = balance_classes;                                       p.quiet_mode = true;                                       p.score_validation_sampling = csm;                                       try {                                         p.invoke();                                       } catch (Throwable t) {                                         t.printStackTrace();                                         throw new RuntimeException(t);                                       } finally {                                         p.delete();                                       }                                        model1 = UKV.get(dest_tmp);                                       Assert.assertTrue(p.train_samples_per_iteration <= 0 || model1.epoch_counter > epochs || Math.abs(model1.epoch_counter - epochs)/epochs < 0.1);                                        if (n_folds != 0)                                       // test HTML of cv models                                       {                                         for (Key k : model1.get_params().xval_models) {                                           DeepLearningModel cv_model = UKV.get(k);                                           StringBuilder sb = new StringBuilder();                                           cv_model.generateHTML("cv", sb);                                           cv_model.delete_best_model();                                           cv_model.delete();                                         }                                       }                                     }                                      // Do some more training via checkpoint restart                                     // For n_folds, continue without n_folds (not yet implemented) - from now on, model2 will have n_folds=0...                                     dest = Key.make("restart");                                     DeepLearning p = new DeepLearning();                                     final DeepLearningModel tmp_model = UKV.get(dest_tmp); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(tmp_model.get_params().state == Job.JobState.DONE); //HEX-1817                                     Assert.assertTrue(tmp_model.model_info().get_processed_total() >= frame.numRows() * epochs);                                     assert (tmp_model != null);                                      p.checkpoint = dest_tmp;                                     p.destination_key = dest;                                     p.n_folds = 0;                                      p.source = frame;                                     p.validation = valid;                                     p.response = frame.vecs()[resp];                                     if (i == 0 && resp == 2) p.classification = false;                                     p.override_with_best_model = override_with_best_model;                                     p.epochs = epochs;                                     p.seed = seed;                                     p.train_samples_per_iteration = train_samples_per_iteration;                                     try {                                       p.invoke();                                     } catch (Throwable t) {                                       t.printStackTrace();                                       throw new RuntimeException(t);                                     } finally {                                       p.delete();                                     }                                      // score and check result (on full data)                                     model2 = UKV.get(dest); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(model2.get_params().state == Job.JobState.DONE); //HEX-1817                                     // test HTML                                     {                                       StringBuilder sb = new StringBuilder();                                       model2.generateHTML("test", sb);                                     }                                      // score and check result of the best_model                                     if (model2.actual_best_model_key != null) {                                       final DeepLearningModel best_model = UKV.get(model2.actual_best_model_key);                                       Assert.assertTrue(best_model.get_params().state == Job.JobState.DONE); //HEX-1817                                       // test HTML                                       {                                         StringBuilder sb = new StringBuilder();                                         best_model.generateHTML("test", sb);                                       }                                       if (override_with_best_model) {                                         Assert.assertEquals(best_model.error(), model2.error(), 0);                                       }                                     }                                      if (valid == null) valid = frame;                                     double threshold = 0;                                     if (model2.isClassifier()) {                                       Frame pred = null, pred2 = null;                                       try {                                         pred = model2.score(valid);                                         StringBuilder sb = new StringBuilder();                                          AUC auc = new AUC();                                         double error = 0;                                         // binary                                         if (model2.nclasses() == 2) {                                           auc.actual = valid;                                           assert (resp == 1);                                           auc.vactual = valid.vecs()[resp];                                           auc.predict = pred;                                           auc.vpredict = pred.vecs()[2];                                           auc.invoke();                                           auc.toASCII(sb);                                           AUCData aucd = auc.data();                                           threshold = aucd.threshold();                                           error = aucd.err();                                           Log.info(sb);                                            // check that auc.cm() is the right CM                                           Assert.assertEquals(new ConfusionMatrix(aucd.cm()).err(), error, 1e-15);                                            // check that calcError() is consistent as well (for CM=null, AUC!=null)                                           Assert.assertEquals(model2.calcError(valid, auc.vactual, pred, pred, "training", false, 0, null, auc, null), error, 1e-15);                                         }                                          // Compute CM                                         double CMerrorOrig;                                         {                                           sb = new StringBuilder();                                           water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[resp];                                           CM.predict = pred;                                           CM.vpredict = pred.vecs()[0];                                           CM.invoke();                                           sb.append("\n");                                           sb.append("Threshold: " + "default\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           CMerrorOrig = new ConfusionMatrix(CM.cm).err();                                         }                                          // confirm that orig CM was made with threshold 0.5                                         // put pred2 into UKV, and allow access                                         pred2 = new Frame(Key.make("pred2"), pred.names(), pred.vecs());                                         pred2.delete_and_lock(null);                                         pred2.unlock(null);                                          if (model2.nclasses() == 2) {                                           // make labels with 0.5 threshold for binary classifier                                           Env ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + 0.5);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev!=null) ev.remove_and_unlock();                                           }                                            water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: " + 0.5 + "\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr, CMerrorOrig, 1e-15);                                            // make labels with AUC-given threshold for best F1                                           ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + threshold);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev != null) ev.remove_and_unlock();                                           }                                            CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: ").append(threshold).append("\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr2 = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr2, error, 1e-15);                                         }                                       } finally {                                         if (pred != null) pred.delete();                                         if (pred2 != null) pred2.delete();                                       }                                     } //classifier                                     Log.info("Parameters combination " + count + ": PASS");                                     testcount++;                                   } catch (Throwable t) {                                     t.printStackTrace();                                     throw new RuntimeException(t);                                   } finally {                                     if (model1 != null) {                                       model1.delete_xval_models();                                       model1.delete_best_model();                                       model1.delete();                                     }                                     if (model2 != null) {                                       model2.delete_xval_models();                                       model2.delete_best_model();                                       model2.delete();                                     }                                   }                                 }                               }                             }                           }                         }                       }                     }                   }                 }               }             }           }         }       } finally {         frame.delete();         vframe.delete();       }     }     Log.info("\n\n=============================================");     Log.info("Tested " + testcount + " out of " + count + " parameter combinations.");     Log.info("=============================================");   }    public static class Long extends DeepLearningProstateTest {     @Test     @Ignore     public void run() throws Exception { runFraction(1f); }   }    public static class Mid extends DeepLearningProstateTest {     @Test     public void run() throws Exception { runFraction(0.01f); } //for nightly tests   }    public static class Short extends DeepLearningProstateTest {     @Test public void run() throws Exception { runFraction(0.001f); }   } } " compose:StringConcatenation merge: LineBased]
[NT -> base : Feature]
	[NT -> src : Folder]
		[NT -> test : Folder]
			[NT -> java : Folder]
				[NT -> hex : Folder]
					[NT -> DeepLearningProstateTest.java.merge : .java.merge-File]
						[T -> DeepLearningProstateTest.java : .java-Content "package hex;  import hex.deeplearning.DeepLearning; import hex.deeplearning.DeepLearningModel; import org.junit.Assert; import org.junit.BeforeClass; import org.junit.Ignore; import org.junit.Test; import water.*; import water.api.AUC; import water.api.AUCData; import water.exec.Env; import water.exec.Exec2; import water.fvec.Frame; import water.fvec.NFSFileVec; import water.fvec.ParseDataset2; import water.util.Log;  import java.util.Random;  public class DeepLearningProstateTest extends TestUtil {   @BeforeClass public static void stall() {     stall_till_cloudsize(JUnitRunnerDebug.NODES);   }    public void runFraction(float fraction) {     long seed = 0xDECAF;     Random rng = new Random(seed);     String[] datasets = new String[2];     int[][] responses = new int[datasets.length][];     datasets[0] = "smalldata/./logreg/prostate.csv"; responses[0] = new int[]{1,2,8}; //CAPSULE (binomial), AGE (regression), GLEASON (multi-class)     datasets[1] = "smalldata/iris/iris.csv";  responses[1] = new int[]{4}; //Iris-type (multi-class)      int testcount = 0;     int count = 0;     for (int i =0;i<datasets.length;++i) {       String dataset = datasets[i];       Key file = NFSFileVec.make(find_test_file(dataset));       Frame frame = ParseDataset2.parse(Key.make(), new Key[]{file});       Key vfile = NFSFileVec.make(find_test_file(dataset));       Frame vframe = ParseDataset2.parse(Key.make(), new Key[]{vfile});        try {         for (boolean replicate : new boolean[]{                 true,                 false,         }) {           for (boolean load_balance : new boolean[]{                   true,                   false,           }) {             for (boolean shuffle : new boolean[]{                     true,                     false,             }) {               for (boolean balance_classes : new boolean[]{                       true,                       false,               }) {                 for (int resp : responses[i]) {                   for (DeepLearning.ClassSamplingMethod csm : new DeepLearning.ClassSamplingMethod[]{                           DeepLearning.ClassSamplingMethod.Stratified,                           DeepLearning.ClassSamplingMethod.Uniform                   }) {                     for (int scoretraining : new int[]{                             200,                             20,                             0,                     }) {                       for (int scorevalidation : new int[]{                               200,                               20,                               0,                       }) {                         for (int vf : new int[]{                                 0,  //no validation                                 1,  //same as source                                 -1, //different validation frame                         }) {                           for (int n_folds : new int[]{                                   0,                                   2,                           }) {                             if (n_folds != 0 && vf != 0) continue;                             for (boolean keep_cv_splits : new boolean[]{false}) { //otherwise it leaks                               for (boolean override_with_best_model : new boolean[]{false, true}) {                                 for (int train_samples_per_iteration : new int[]{                                         -2, //auto-tune                                         -1, //N epochs per iteration                                         0, //1 epoch per iteration                                         rng.nextInt(100), // <1 epoch per iteration                                         500, //>1 epoch per iteration                                 }) {                                   DeepLearningModel model1 = null, model2 = null;                                   Key dest = null, dest_tmp = null;                                   count++;                                   if (fraction < rng.nextFloat()) continue;                                    try {                                     Log.info("**************************)");                                     Log.info("Starting test #" + count);                                     Log.info("**************************)");                                     final double epochs = 7 + rng.nextDouble() + rng.nextInt(4);                                     final int[] hidden = new int[]{1 + rng.nextInt(4), 1 + rng.nextInt(6)};                                     Frame valid = null; //no validation                                     if (vf == 1) valid = frame; //use the same frame for validation                                     else if (vf == -1) valid = vframe; //different validation frame (here: from the same file)                                      // build the model, with all kinds of shuffling/rebalancing/sampling                                     dest_tmp = Key.make("first");                                     {                                       Log.info("Using seed: " + seed);                                       DeepLearning p = new DeepLearning();                                       p.checkpoint = null;                                       p.destination_key = dest_tmp;                                        p.source = frame;                                       p.response = frame.vecs()[resp];                                       p.validation = valid;                                        p.hidden = hidden;                                       if (i == 0 && resp == 2) p.classification = false; //                                      p.best_model_key = best_model_key;                                       p.override_with_best_model = override_with_best_model;                                       p.epochs = epochs;                                       p.n_folds = n_folds;                                       p.keep_cross_validation_splits = keep_cv_splits;                                       p.seed = seed;                                       p.train_samples_per_iteration = train_samples_per_iteration;                                       p.force_load_balance = load_balance;                                       p.replicate_training_data = replicate;                                       p.shuffle_training_data = shuffle;                                       p.score_training_samples = scoretraining;                                       p.score_validation_samples = scorevalidation;                                       p.classification_stop = -1;                                       p.regression_stop = -1;                                       p.balance_classes = balance_classes;                                       p.quiet_mode = true;                                       p.score_validation_sampling = csm;                                       try {                                         p.invoke();                                       } catch (Throwable t) {                                         t.printStackTrace();                                         throw new RuntimeException(t);                                       } finally {                                         p.delete();                                       }                                        model1 = UKV.get(dest_tmp);                                        if (n_folds != 0)                                       // test HTML of cv models                                       {                                         for (Key k : model1.get_params().xval_models) {                                           DeepLearningModel cv_model = UKV.get(k);                                           StringBuilder sb = new StringBuilder();                                           cv_model.generateHTML("cv", sb);                                           cv_model.delete_best_model();                                           cv_model.delete();                                         }                                       }                                     }                                      // Do some more training via checkpoint restart                                     // For n_folds, continue without n_folds (not yet implemented) - from now on, model2 will have n_folds=0...                                     dest = Key.make("restart");                                     DeepLearning p = new DeepLearning();                                     final DeepLearningModel tmp_model = UKV.get(dest_tmp); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(tmp_model.get_params().state == Job.JobState.DONE); //HEX-1817                                     Assert.assertTrue(tmp_model.model_info().get_processed_total() >= frame.numRows() * epochs);                                     assert (tmp_model != null);                                      p.checkpoint = dest_tmp;                                     p.destination_key = dest;                                     p.n_folds = 0;                                      p.source = frame;                                     p.validation = valid;                                     p.response = frame.vecs()[resp];                                     if (i == 0 && resp == 2) p.classification = false;                                     p.override_with_best_model = override_with_best_model;                                     p.epochs = epochs;                                     p.seed = seed;                                     p.train_samples_per_iteration = train_samples_per_iteration;                                     try {                                       p.invoke();                                     } catch (Throwable t) {                                       t.printStackTrace();                                       throw new RuntimeException(t);                                     } finally {                                       p.delete();                                     }                                      // score and check result (on full data)                                     model2 = UKV.get(dest); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(model2.get_params().state == Job.JobState.DONE); //HEX-1817                                     // test HTML                                     {                                       StringBuilder sb = new StringBuilder();                                       model2.generateHTML("test", sb);                                     }                                      // score and check result of the best_model                                     if (model2.actual_best_model_key != null) {                                       final DeepLearningModel best_model = UKV.get(model2.actual_best_model_key);                                       Assert.assertTrue(best_model.get_params().state == Job.JobState.DONE); //HEX-1817                                       // test HTML                                       {                                         StringBuilder sb = new StringBuilder();                                         best_model.generateHTML("test", sb);                                       }                                       if (override_with_best_model) {                                         Assert.assertEquals(best_model.error(), model2.error(), 0);                                       }                                     }                                      if (valid == null) valid = frame;                                     double threshold = 0;                                     if (model2.isClassifier()) {                                       Frame pred = null, pred2 = null;                                       try {                                         pred = model2.score(valid);                                         StringBuilder sb = new StringBuilder();                                          AUC auc = new AUC();                                         double error = 0;                                         // binary                                         if (model2.nclasses() == 2) {                                           auc.actual = valid;                                           assert (resp == 1);                                           auc.vactual = valid.vecs()[resp];                                           auc.predict = pred;                                           auc.vpredict = pred.vecs()[2];                                           auc.invoke();                                           auc.toASCII(sb);                                           AUCData aucd = auc.data();                                           threshold = aucd.threshold();                                           error = aucd.err();                                           Log.info(sb);                                            // check that auc.cm() is the right CM                                           Assert.assertEquals(new ConfusionMatrix(aucd.cm()).err(), error, 1e-15);                                            // check that calcError() is consistent as well (for CM=null, AUC!=null)                                           Assert.assertEquals(model2.calcError(valid, auc.vactual, pred, pred, "training", false, 0, null, auc, null), error, 1e-15);                                         }                                          // Compute CM                                         double CMerrorOrig;                                         {                                           sb = new StringBuilder();                                           water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[resp];                                           CM.predict = pred;                                           CM.vpredict = pred.vecs()[0];                                           CM.invoke();                                           sb.append("\n");                                           sb.append("Threshold: " + "default\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           CMerrorOrig = new ConfusionMatrix(CM.cm).err();                                         }                                          // confirm that orig CM was made with threshold 0.5                                         // put pred2 into UKV, and allow access                                         pred2 = new Frame(Key.make("pred2"), pred.names(), pred.vecs());                                         pred2.delete_and_lock(null);                                         pred2.unlock(null);                                          if (model2.nclasses() == 2) {                                           // make labels with 0.5 threshold for binary classifier                                           Env ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + 0.5);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev!=null) ev.remove_and_unlock();                                           }                                            water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: " + 0.5 + "\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr, CMerrorOrig, 1e-15);                                            // make labels with AUC-given threshold for best F1                                           ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + threshold);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev != null) ev.remove_and_unlock();                                           }                                            CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: ").append(threshold).append("\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr2 = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr2, error, 1e-15);                                         }                                       } finally {                                         if (pred != null) pred.delete();                                         if (pred2 != null) pred2.delete();                                       }                                     } //classifier                                     Log.info("Parameters combination " + count + ": PASS");                                     testcount++;                                   } catch (Throwable t) {                                     t.printStackTrace();                                     throw new RuntimeException(t);                                   } finally {                                     if (model1 != null) {                                       model1.delete_xval_models();                                       model1.delete_best_model();                                       model1.delete();                                     }                                     if (model2 != null) {                                       model2.delete_xval_models();                                       model2.delete_best_model();                                       model2.delete();                                     }                                   }                                 }                               }                             }                           }                         }                       }                     }                   }                 }               }             }           }         }       } finally {         frame.delete();         vframe.delete();       }     }     Log.info("\n\n=============================================");     Log.info("Tested " + testcount + " out of " + count + " parameter combinations.");     Log.info("=============================================");   }    public static class Long extends DeepLearningProstateTest {     @Test     @Ignore     public void run() throws Exception { runFraction(1f); }   }    public static class Mid extends DeepLearningProstateTest {     @Test     public void run() throws Exception { runFraction(0.01f); } //for nightly tests   }    public static class Short extends DeepLearningProstateTest {     @Test public void run() throws Exception { runFraction(0.001f); }   } } " compose:StringConcatenation merge: LineBased]
[NT -> right : Feature]
	[NT -> src : Folder]
		[NT -> test : Folder]
			[NT -> java : Folder]
				[NT -> hex : Folder]
					[NT -> DeepLearningProstateTest.java.merge : .java.merge-File]
						[T -> DeepLearningProstateTest.java : .java-Content "package hex;  import hex.deeplearning.DeepLearning; import hex.deeplearning.DeepLearningModel; import org.junit.Assert; import org.junit.BeforeClass; import org.junit.Ignore; import org.junit.Test; import water.*; import water.api.AUC; import water.api.AUCData; import water.exec.Env; import water.exec.Exec2; import water.fvec.Frame; import water.fvec.NFSFileVec; import water.fvec.ParseDataset2; import water.util.Log;  import java.util.Random;  public class DeepLearningProstateTest extends TestUtil {   @BeforeClass public static void stall() {     stall_till_cloudsize(JUnitRunnerDebug.NODES);   }    public void runFraction(float fraction) {     long seed = 0xDECAF;     Random rng = new Random(seed);     String[] datasets = new String[2];     int[][] responses = new int[datasets.length][];     datasets[0] = "smalldata/./logreg/prostate.csv"; responses[0] = new int[]{1,2,8}; //CAPSULE (binomial), AGE (regression), GLEASON (multi-class)     datasets[1] = "smalldata/iris/iris.csv";  responses[1] = new int[]{4}; //Iris-type (multi-class)      int testcount = 0;     int count = 0;     for (int i =0;i<datasets.length;++i) {       String dataset = datasets[i];       Key file = NFSFileVec.make(find_test_file(dataset));       Frame frame = ParseDataset2.parse(Key.make(), new Key[]{file});       Key vfile = NFSFileVec.make(find_test_file(dataset));       Frame vframe = ParseDataset2.parse(Key.make(), new Key[]{vfile});        try {         for (boolean replicate : new boolean[]{                 true,                 false,         }) {           for (boolean load_balance : new boolean[]{                   true,                   false,           }) {             for (boolean shuffle : new boolean[]{                     true,                     false,             }) {               for (boolean balance_classes : new boolean[]{                       true,                       false,               }) {                 for (int resp : responses[i]) {                   for (DeepLearning.ClassSamplingMethod csm : new DeepLearning.ClassSamplingMethod[]{                           DeepLearning.ClassSamplingMethod.Stratified,                           DeepLearning.ClassSamplingMethod.Uniform                   }) {                     for (int scoretraining : new int[]{                             200,                             20,                             0,                     }) {                       for (int scorevalidation : new int[]{                               200,                               20,                               0,                       }) {                         for (int vf : new int[]{                                 0,  //no validation                                 1,  //same as source                                 -1, //different validation frame                         }) {                           for (int n_folds : new int[]{                                   0,                                   2,                           }) {                             if (n_folds != 0 && vf != 0) continue;                             for (boolean keep_cv_splits : new boolean[]{false}) { //otherwise it leaks                               for (boolean override_with_best_model : new boolean[]{false, true}) {                                 for (int train_samples_per_iteration : new int[]{                                         -2, //auto-tune                                         -1, //N epochs per iteration                                         0, //1 epoch per iteration                                         rng.nextInt(200), // <1 epoch per iteration                                         500, //>1 epoch per iteration                                 }) {                                   DeepLearningModel model1 = null, model2 = null;                                   Key dest = null, dest_tmp = null;                                   count++;                                   if (fraction < rng.nextFloat()) continue;                                    try {                                     Log.info("**************************)");                                     Log.info("Starting test #" + count);                                     Log.info("**************************)");                                     final double epochs = 7 + rng.nextDouble() + rng.nextInt(4);                                     final int[] hidden = new int[]{1 + rng.nextInt(4), 1 + rng.nextInt(6)};                                     Frame valid = null; //no validation                                     if (vf == 1) valid = frame; //use the same frame for validation                                     else if (vf == -1) valid = vframe; //different validation frame (here: from the same file)                                      // build the model, with all kinds of shuffling/rebalancing/sampling                                     dest_tmp = Key.make("first");                                     {                                       Log.info("Using seed: " + seed);                                       DeepLearning p = new DeepLearning();                                       p.checkpoint = null;                                       p.destination_key = dest_tmp;                                        p.source = frame;                                       p.response = frame.vecs()[resp];                                       p.validation = valid;                                        p.hidden = hidden;                                       if (i == 0 && resp == 2) p.classification = false; //                                      p.best_model_key = best_model_key;                                       p.override_with_best_model = override_with_best_model;                                       p.epochs = epochs;                                       p.n_folds = n_folds;                                       p.keep_cross_validation_splits = keep_cv_splits;                                       p.seed = seed;                                       p.train_samples_per_iteration = train_samples_per_iteration;                                       p.force_load_balance = load_balance;                                       p.replicate_training_data = replicate;                                       p.shuffle_training_data = shuffle;                                       p.score_training_samples = scoretraining;                                       p.score_validation_samples = scorevalidation;                                       p.classification_stop = -1;                                       p.regression_stop = -1;                                       p.balance_classes = balance_classes;                                       p.quiet_mode = true;                                       p.score_validation_sampling = csm;                                       try {                                         p.invoke();                                       } catch (Throwable t) {                                         t.printStackTrace();                                         throw new RuntimeException(t);                                       } finally {                                         p.delete();                                       }                                        model1 = UKV.get(dest_tmp);                                       assert( ((p.train_samples_per_iteration <= 0 || p.train_samples_per_iteration >= frame.numRows()) && model1.epoch_counter > epochs)                                               || Math.abs(model1.epoch_counter - epochs)/epochs < 0.20 );                                        if (n_folds != 0)                                       // test HTML of cv models                                       {                                         for (Key k : model1.get_params().xval_models) {                                           DeepLearningModel cv_model = UKV.get(k);                                           StringBuilder sb = new StringBuilder();                                           cv_model.generateHTML("cv", sb);                                           cv_model.delete_best_model();                                           cv_model.delete();                                         }                                       }                                     }                                      // Do some more training via checkpoint restart                                     // For n_folds, continue without n_folds (not yet implemented) - from now on, model2 will have n_folds=0...                                     dest = Key.make("restart");                                     DeepLearning p = new DeepLearning();                                     final DeepLearningModel tmp_model = UKV.get(dest_tmp); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(tmp_model.get_params().state == Job.JobState.DONE); //HEX-1817                                     Assert.assertTrue(tmp_model.model_info().get_processed_total() >= frame.numRows() * epochs);                                     assert (tmp_model != null);                                      p.checkpoint = dest_tmp;                                     p.destination_key = dest;                                     p.n_folds = 0;                                      p.source = frame;                                     p.validation = valid;                                     p.response = frame.vecs()[resp];                                     if (i == 0 && resp == 2) p.classification = false;                                     p.override_with_best_model = override_with_best_model;                                     p.epochs = epochs;                                     p.seed = seed;                                     p.train_samples_per_iteration = train_samples_per_iteration;                                     try {                                       p.invoke();                                     } catch (Throwable t) {                                       t.printStackTrace();                                       throw new RuntimeException(t);                                     } finally {                                       p.delete();                                     }                                      // score and check result (on full data)                                     model2 = UKV.get(dest); //this actually *requires* frame to also still be in UKV (because of DataInfo...)                                     Assert.assertTrue(model2.get_params().state == Job.JobState.DONE); //HEX-1817                                     // test HTML                                     {                                       StringBuilder sb = new StringBuilder();                                       model2.generateHTML("test", sb);                                     }                                      // score and check result of the best_model                                     if (model2.actual_best_model_key != null) {                                       final DeepLearningModel best_model = UKV.get(model2.actual_best_model_key);                                       Assert.assertTrue(best_model.get_params().state == Job.JobState.DONE); //HEX-1817                                       // test HTML                                       {                                         StringBuilder sb = new StringBuilder();                                         best_model.generateHTML("test", sb);                                       }                                       if (override_with_best_model) {                                         Assert.assertEquals(best_model.error(), model2.error(), 0);                                       }                                     }                                      if (valid == null) valid = frame;                                     double threshold = 0;                                     if (model2.isClassifier()) {                                       Frame pred = null, pred2 = null;                                       try {                                         pred = model2.score(valid);                                         StringBuilder sb = new StringBuilder();                                          AUC auc = new AUC();                                         double error = 0;                                         // binary                                         if (model2.nclasses() == 2) {                                           auc.actual = valid;                                           assert (resp == 1);                                           auc.vactual = valid.vecs()[resp];                                           auc.predict = pred;                                           auc.vpredict = pred.vecs()[2];                                           auc.invoke();                                           auc.toASCII(sb);                                           AUCData aucd = auc.data();                                           threshold = aucd.threshold();                                           error = aucd.err();                                           Log.info(sb);                                            // check that auc.cm() is the right CM                                           Assert.assertEquals(new ConfusionMatrix(aucd.cm()).err(), error, 1e-15);                                            // check that calcError() is consistent as well (for CM=null, AUC!=null)                                           Assert.assertEquals(model2.calcError(valid, auc.vactual, pred, pred, "training", false, 0, null, auc, null), error, 1e-15);                                         }                                          // Compute CM                                         double CMerrorOrig;                                         {                                           sb = new StringBuilder();                                           water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[resp];                                           CM.predict = pred;                                           CM.vpredict = pred.vecs()[0];                                           CM.invoke();                                           sb.append("\n");                                           sb.append("Threshold: " + "default\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           CMerrorOrig = new ConfusionMatrix(CM.cm).err();                                         }                                          // confirm that orig CM was made with threshold 0.5                                         // put pred2 into UKV, and allow access                                         pred2 = new Frame(Key.make("pred2"), pred.names(), pred.vecs());                                         pred2.delete_and_lock(null);                                         pred2.unlock(null);                                          if (model2.nclasses() == 2) {                                           // make labels with 0.5 threshold for binary classifier                                           Env ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + 0.5);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev!=null) ev.remove_and_unlock();                                           }                                            water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: " + 0.5 + "\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr, CMerrorOrig, 1e-15);                                            // make labels with AUC-given threshold for best F1                                           ev = Exec2.exec("pred2[,1]=pred2[,3]>=" + threshold);                                           try {                                             pred2 = ev.popAry();                                             String skey = ev.key();                                             ev.subRef(pred2, skey);                                           } finally {                                             if (ev != null) ev.remove_and_unlock();                                           }                                            CM = new water.api.ConfusionMatrix();                                           CM.actual = valid;                                           CM.vactual = valid.vecs()[1];                                           CM.predict = pred2;                                           CM.vpredict = pred2.vecs()[0];                                           CM.invoke();                                           sb = new StringBuilder();                                           sb.append("\n");                                           sb.append("Threshold: ").append(threshold).append("\n");                                           CM.toASCII(sb);                                           Log.info(sb);                                           double threshErr2 = new ConfusionMatrix(CM.cm).err();                                           Assert.assertEquals(threshErr2, error, 1e-15);                                         }                                       } finally {                                         if (pred != null) pred.delete();                                         if (pred2 != null) pred2.delete();                                       }                                     } //classifier                                     Log.info("Parameters combination " + count + ": PASS");                                     testcount++;                                   } catch (Throwable t) {                                     t.printStackTrace();                                     throw new RuntimeException(t);                                   } finally {                                     if (model1 != null) {                                       model1.delete_xval_models();                                       model1.delete_best_model();                                       model1.delete();                                     }                                     if (model2 != null) {                                       model2.delete_xval_models();                                       model2.delete_best_model();                                       model2.delete();                                     }                                   }                                 }                               }                             }                           }                         }                       }                     }                   }                 }               }             }           }         }       } finally {         frame.delete();         vframe.delete();       }     }     Log.info("\n\n=============================================");     Log.info("Tested " + testcount + " out of " + count + " parameter combinations.");     Log.info("=============================================");   }    public static class Long extends DeepLearningProstateTest {     @Test     @Ignore     public void run() throws Exception { runFraction(1f); }   }    public static class Mid extends DeepLearningProstateTest {     @Test     public void run() throws Exception { runFraction(0.01f); } //for nightly tests   }    public static class Short extends DeepLearningProstateTest {     @Test public void run() throws Exception { runFraction(0.001f); }   } } " compose:StringConcatenation merge: LineBased]
