Found the following features in expression file:
left
base
right
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/sdk/nbi/.common/engine.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/sdk/nbi/.common/common.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/sdk/nbi/.common/group.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/sdk/nbi/.common/engine.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/sdk/nbi/.common/product.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/sdk/nbi/.common/product.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/sdk/nbi/.common/common.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/sdk/nbi/.common/group.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/sdk/nbproject/project.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/sdk/nbi/.common/engine.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/sdk/nbi/.common/common.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/sdk/nbi/.common/group.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/sdk/nbi/.common/engine.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/sdk/nbi/.common/product.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/sdk/nbi/.common/product.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/sdk/nbi/.common/common.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/sdk/nbi/.common/group.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/sdk/nbproject/project.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/sdk/nbi/.common/engine.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/sdk/nbi/.common/common.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/sdk/nbi/.common/group.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/sdk/nbi/.common/engine.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/sdk/nbi/.common/product.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/sdk/nbi/.common/product.xml
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/sdk/nbi/.common/common.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/sdk/nbi/.common/group.properties
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/sdk/nbproject/project.properties
[NT -> left : Feature]
	[NT -> sdk : Folder]
		[NT -> nbi : Folder]
			[NT -> .common : Folder]
				[NT -> engine.properties : .properties-File]
					[T -> engine.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   # whether to build native components or not; 'true'/'false' # * the engine has a bunch of native code dependencies, thus it is feasible to #   rebuild them every time build.native=true  # whether to build the netbeans part of the project or not; 'true'/'false' # * essentially the engine IS a netbeans project, thus we should always build  #   it build.nbproject=true  # dummy value for the custom parameter; which will be passed to the netbeans  # project build script; more sensible value is present in the base product  # build script nb.custom.parameter=-Dtrue=true  # name of the distributive file for the netbeans project # * ${engine.dist.file.name} is expected to be defined in the derivative  #   instance build script nbproject.dist.file.name=${engine.dist.file.name}  # path to the engine's distributive file; the file at this path would be  # considered the result of the build script and be copied to the distributives  # directory nbproject.dist.file=${nbproject.dist.dir}/${nbproject.dist.file.name}  # names of the distributive files for the native jni libraries for the engine native.dist.file.windows=windows.dll native.dist.file.linux=linux.so native.dist.file.solaris-x86=solaris-x86.so native.dist.file.solaris-sparc=solaris-sparc.so native.dist.file.macosx=macosx.dylib " compose:StringConcatenation merge: Default]
				[NT -> product.properties : .properties-File]
					[T -> product.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   # whether to build native components or not; 'true'/'false' # * normally a product does not have any native components, thus  #   ${build.native} should be 'false' in most of the cases build.native=false  # whether to build the netbeans part of the project or not; 'true'/'false' build.nbproject=true  nbproject.dist.file.name=${product.uid},logic.jar  # whether to build engine or not; 'true'/'false' build.engine=true  # whether to repackage the installation data or not; 'true'/'false'/'default' # * if set to 'false' the data will be taken as it is (i.e. will be considered  #   as already packaged) # * if set to 'true' the data will be downloaded and packaged  # * if set to 'default' packaged data will be taken if it's available,  #   otherwise raw data will be downloaded and packaged package.data=default  # whether the packaged data should be released (copied) to the local packaged # data repository; 'true'/'false' release.packaged.data=true  # various properties controlling the engine's build process engine.dir=${common.dir}/../engine engine.work.dir=${work.dir}/.engine engine.dist.dir=${dist.dir}/.engine engine.dist.file.name=engine.jar  # path to the distributive file of the engine; it will be used as the classpath  # for building the product's netbeans project # * if the ${build.engine} has been set to 'false', make sure that  #   ${engine.dist.file} points to a precompiled engine engine.dist.file=${engine.dist.dir}/${engine.dist.file.name}  downloads.cache.dir=${packaged.data.dir}/.raw  # various paths and file names that will be used for packaging the  # product package.dir=${work.dir}/package  package.descriptor.path=registry.xml  product.path=products/${product.uid}/${product.version}/${product.platforms} product.logic.path=${product.path}/logic product.data.path=${product.path}/data product.icon.path=${product.path}/icon.png  product.icon.uri=resource:${product.icon.path}  product.dist.file.name=${product.uid},${product.version},${product.platforms}.jar  # name of the product's configuration logic jar with index ${i} product.logic.file.name=logic,${i}.jar product.data.file.name=data,${i}.jar  # list of the locally cached pre-packaged data files # * the length of the list equals to ${product.data.length} # * ${packaged.data.dir} is the path to the local packaged data repository and #   is environment specific; it is expected to be passed in via the environment #   properties product.packaged.data.file=${packaged.data.dir}/${product.uid},${product.version},${product.platforms},${i}.jar product.packaged.data.properties.file=${packaged.data.dir}/${product.uid},${product.version},${product.platforms},${i}.jar.properties  # product icon and the localizing bundle, which is expected to contain # display names and descriptions for all locales, supported by the product # * these are file paths as opposed to uris for configuration logic and #   installation data product.icon=${cvs.dir}/data/icon.png product.bundle=${cvs.dir}/data/Bundle " compose:StringConcatenation merge: Default]
				[NT -> common.properties : .properties-File]
					[T -> common.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   ##################################################################################### # Initialization. Properties that are used during build script initialization.  # location of the custom tasks' sources and the destination directory for their  # build custom.tasks.src=${common.dir}/../.ant-lib/src custom.tasks.cls=${basedir}/.ant-lib  ##################################################################################### # Check-out. Properties that are used during check-out.  # whether to check out sources, or copy them from the location specified in  # ${sources.dir}; 'true'/'false' checkout.sources=true  # coordinates of the project's sources within the cvs repository # * ${cvs.root} - obvious # * ${cvs.branch} - the branch from which the sources should be checked out; if #   this property is empty, then the sources will be checked out from trunk # * ${cvs.timestamp} - the timestamp for which the sources should be checked out; if #   this property is empty, then the latest sources will be checked out # * ${cvs.module} - the module that should be checked out; at this point the #   build framework is not compatible with modules which alias several other #   modules cvs.root=:pserver:anoncvs@netbeans.org:/cvs cvs.branch= cvs.module=nbi cvs.timestamp=  # coordinates of the project's sources' localized files within the cvs  # repository # * ${translatedfiles.module} - name of the cvs module with the localized files # * ${translatedfiles.path} - path to the localized files for the project  #   within the cvs module translatedfiles.module=translatedfiles translatedfiles.path=src/${cvs.module}/${cvs.path}  # sources parameters; a search-and-replace will be run over the sources after  # check-out, replacing [token] => [value]; regular expressions are not allowed # * ${sources.params.length} - total number of the parameters # * indices should start with 1 # * parameters are not i18n compliant sources.params.length=0 #sources.params.1.token= #sources.params.1.value=  # several simple shorthands for various directories # * ${cvs.module.dir} - path to the root of the cvs module # * ${cvs.dir} - path to the current project's sources root # * ${translatedfiles.dir} - path to the localized files for the project cvs.module.dir=${work.dir}/${cvs.module} cvs.dir=${cvs.module.dir}/${cvs.path} translatedfiles.dir=${work.dir}/${translatedfiles.module}/${translatedfiles.path}  ##################################################################################### # NB Projects. Properties related to cleaning/building netbeans projects.  # path to the netbeans project that should be built; relative to the  # ${cvs.dir} nbproject.path=.  # names of targets in component's (or engine's) build script that will be  # called as part of the build process # * ${nb.target.clean} - will be called when cleaning the netbeans project # * ${nb.target.build} - will be called when building the netbeans project nb.target.clean=clean nb.target.build=jar  # additional properties which will be passed to the netbeans project build  # script # * ${nb.platform.home} - location of the jdk codenamed "JDK 1.5", this jdk #   is expected to be used by all netbeans projects # * ${nb.ignore.native} - tells the netbeans project's build script to skip #   building native components, if it is able to do so - these will be built #   as part of the project's global build script # * ${nb.no.dependencies} - tells the netbeans project's build script to skip #   building its dependencies, the dependencies are expected to be built by the #   project's global build script # * ${nb.dont.build.custom.tasks} - tells the netbeans project's build script  #   to skip building custom tasks for it, as they will already be built by the #   global script # * ${nb.custom.tasks.cls} - points the netbeans project's build script to the  #   location of the built custom tasks nb.platform.home=-Dplatforms.JDK_1.5.home=${java.home}/.. nb.platform.home.macos=-Dplatforms.JDK_1.5.home=${java.home} nb.ignore.native=-Dignore.native=true nb.no.dependencies=-Dno.dependencies=true nb.dont.build.custom.tasks=-Ddont.build.custom.tasks=true nb.custom.tasks.cls=-Dcustom.tasks.cls=${custom.tasks.cls}  # default path to the distributives directory of the netbeans project; relative  # to ${nbproject.path} nb.dist.path=dist  # path to the classes directory of the netbeans project; relative to  # ${nbproject.path} nb.classes.dir=build/classes  # path to the manifest file of the netbeans project; relative to the  # ${nbproject.path} nbproject.manifest=manifest.mf  # path to the dist directory that the nbproject should use; since we do not use  # the netbeans' packaging mechanism, we have the flexibility to specify any  # distributives directory we want nbproject.dist.dir=${cvs.dir}/${nbproject.path}/${nb.dist.path}  ##################################################################################### # Native. Properties related to cleaning/building native components.  # path to the directory with the sources for the native components; relative  # to the root of the project's sources native.path=${cvs.module}/${cvs.path}/native  # path to the directory with the localized files for the native components;  # relative to the root of the project's localized files directory translatedfiles.native.path=${translatedfiles.module}/${translatedfiles.path}/native  # list of platforms for which the native components should be built # * the list should be space-separated native.platforms=windows linux solaris-x86 solaris-sparc macosx  # directory on the remote machine where the build script should operate # * this is the default value, the actual value is expected to be passed in  #   through the environment properties remote.work.dir=~/.nbi-build  # ssh properties: executable name, set of arguments and the command. # * ${remote.host}, ${remote.port} and ${remote.user} are environment specific  #   and are expected to be passed in through the environment properties ssh.executable=ssh ssh.arguments=-l ${remote.user} -p ${remote.port} ${remote.host} ssh.command.clean=rm -rf ${remote.work.dir}; ssh.command.build=rm -rf ${remote.work.dir}; \                   mkdir ${remote.work.dir}; \                   cd ${remote.work.dir}; \                   if [ "${cvs.branch}" = "" ]; then \                       if [ "${cvs.timestamp}" = "" ]; then \                           cvs -d ${cvs.root} co -P ${native.path}; \                           cvs -d ${cvs.root} co -P ${translatedfiles.native.path}; \                       else\                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -P ${native.path}; \                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -P ${translatedfiles.native.path}; \                       fi;\                   else \                       if [ "${cvs.timestamp}" = "" ]; then \                           cvs -d ${cvs.root} co -r ${cvs.branch} -P ${native.path}; \                           cvs -d ${cvs.root} co -r ${cvs.branch} -P ${translatedfiles.native.path}; \                       else \                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -r ${cvs.branch} -P ${native.path}; \                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -r ${cvs.branch} -P ${translatedfiles.native.path}; \                       fi;\                   fi; \                   cp -r ${translatedfiles.native.path} ${native.path}; \                   cd ${native.path}/${platform}; \                   make  # scp properties: executable name, set of arguments, remote directory, local  # directory # * ${remote.host}, ${remote.port} and ${remote.user} are platform and  #   environment specific and are expected to be passed in through the  #   environment properties # * name of the file to copy is platform specific and is defined elsewhere,  #   most likely in the base build script for a project type (engine, product,  #   etc.) # * ${platform} will be defined at runtime, as these commands will be executed  #   in loop over the list of platforms scp.executable=scp scp.arguments=-P ${remote.port} scp.remote.dir=${remote.user}@${remote.host}:${remote.work.dir}/${native.path}/${platform}/${nb.dist.path} scp.local.dir=${work.dir}/${native.path}/${platform}/${nb.dist.path}  # names of the native distributive files for various platforms native.dist.file.windows=windows.dll native.dist.file.linux=linux.so native.dist.file.solaris-x86=solaris-x86.so native.dist.file.solaris-sparc=solaris-sparc.so native.dist.file.macosx=macosx.dylib  ##################################################################################### # Release. Properties controlling the 'release' process release.to.server=true  ##################################################################################### # Miscellaneous. Properties that are used elsewhere.  # these properties control the environment for the jarsigner process # * ${jarsigner.enabled} - whether to sign jars # * ${jarsigner.xmx} - max heap size for the jarsigner process # * ${jarsigner.executable} - path to jarsigner executable (optional) jarsigner.enabled=true jarsigner.xmx=1024m  # these properties control the environment for the pack200 and unpack200  # processes # * ${pack200.enabled} - whether to repackage jars (can be specified in each product) # * ${use.internal.packer} - whether to use the same JVM for packing jars (can be specified in each product) #       it is risky because of memory leaks and possible OOMs  # * ${use.internal.unpacker} - whether to use the same JVM for unpacking jars (can be specified in each product) #       it is risky because of memory leaks and possible OOMs  # * ${pack200.xmx} - -Xmx jvm argument value # * ${pack200.perm.size} - -XX:PermSize jvm argument value # * ${pack200.max.perm.size} - -XX:MaxPermSize jvm argument value # * ${pack200.executable}   - path to pack200 executable (optional) # * ${unpack200.executable} - path to unpack200 executable (optional) # * ${verification.java.executable} - path to java executable that would be used for verification of packaged jars (optional) pack200.xmx=768m pack200.perm.size=32m pack200.max.perm.size=512m  # these properties control the environment for the external processes running during the build # * ${process.max.execution.time} - maximum time (in milliseconds) for running the process #   if set to zero then processes would run without timeout #   default value is 600000=10min (defined in nbi/infra/build/.ant-lib/src/org/netbeans/installer/infra/build/ant/utils/Utils.java)  # these properties control native executable paths # * ${tar.executable}    - path to native tar/gtar/gnutar executable # * ${ls.executable}     - path to native ls executable # * ${unzip.executable}  - path to native unzip executable " compose:StringConcatenation merge: Default]
				[NT -> group.properties : .properties-File]
					[T -> group.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   # groups do not normally have any native components, thus there is no need to  # attempt to build anything native build.native=false  # groups do not normally have any netbeans projects, thus there is no need to  # attempt to build any nbproject build.nbproject=false  # various directories and file paths that will be used for packaging the  # group package.dir=${work.dir}/package  package.descriptor.path=registry.xml  group.path=groups/${group.uid} group.icon.path=${group.path}/icon.png  group.dist.file.name=${group.uid}.jar  # path to the group's icon; the contents of this file will be copied to the # file identified by ${group.icon.file} group.icon=${cvs.dir}/data/icon.png  # path to the group's localizing bundle; the bundle is expected to contain # two properties: 'group.display.name' and 'group.description', which will be  # used in creating the registry entry for this group group.bundle=${cvs.dir}/data/Bundle  # uri of the group's icon, which will appear in the registry group.icon.uri=resource:${group.icon.path} " compose:StringConcatenation merge: Default]
		[NT -> nbproject : Folder]
			[NT -> project.properties : .properties-File]
				[T -> project.properties : .properties-Content "#Wed, 18 Jun 2014 21:38:15 +0200 app.icon=branding/core/core.jar/org/netbeans/core/startup/frame48.gif #same as ${branding.token} app.name=jmonkeyplatform app.title=jMonkeyEngine SDK app.icon.icns=jmonkeyplatform.icns #version name used for application and settings folder, no spaces! app.version=3.1-snapshot-github #version number used for plugins, only 3 numbers (e.g. 3.1.3) plugins.version=3.1.0 #command line args run.args.extra=-J-Xmx512m -J-XX\:PermSize\=128m -J-XX\:MaxDirectMemorySize\=2048m -J-Dsun.zip.disableMemoryMapping\=true -J-Dapple.awt.graphics.UseQuartz\=true -J-Dsun.java2d.noddraw\=true auxiliary.org-netbeans-modules-apisupport-installer.license-file=license-jme.txt auxiliary.org-netbeans-modules-apisupport-installer.os-linux=true auxiliary.org-netbeans-modules-apisupport-installer.os-macosx=true auxiliary.org-netbeans-modules-apisupport-installer.os-solaris=false auxiliary.org-netbeans-modules-apisupport-installer.os-windows=true auxiliary.org-netbeans-modules-apisupport-installer.pack200-enabled=true modules=${project.com.jme3.gde.upgrader}\:${project.com.jme3.gde.core}\:${project.com.jme3.gde.core.baselibs}\:${project.com.jme3.gde.core.libraries}\:${project.com.jme3.gde.templates}\:${project.com.jme3.gde.project.baselibs}\:${project.com.jme3.gde.project.libraries}\:${project.com.jme3.gde.tests}\:${project.com.jme3.gde.project.testdata}\:${project.com.jme3.gde.ogrexml}\:${project.com.jme3.gde.scenecomposer}\:${project.com.jme3.gde.materials}\:${project.com.jme3.gde.gui}\:${project.com.jme3.gde.ogretools}\:${project.com.jme3.gde.codepalette}\:${project.com.jme3.gde.textureeditor}\:${project.com.jme3.gde.core.updatecenters}\:${project.com.jme3.gde.wavefront}\:${project.com.jme3.gde.terraineditor}\:${project.com.jme3.gde.assetpack}\:${project.com.jme3.gde.modelimporter}\:${project.com.jme3.gde.lwjgl.applet}\:${project.com.jme3.gde.desktop.executables}\:${project.com.jme3.gde.cinematics}\:${project.com.jme3.gde.vehiclecreator}\:${project.com.jme3.gde.welcome}\:${project.com.jme3.gde.codecheck}\:${project.com.jme3.gde.obfuscate}\:${project.com.jme3.gde.blender}\:${project.com.jme3.gde.angelfont}\:${project.net.java.nboglpack.glsleditor}\:${project.com.jme3.gde.android}\:${project.com.jme3.gde.nmgen}\:${project.com.jme3.gde.docs} project.com.jme3.gde.android=jme3-android project.com.jme3.gde.angelfont=jme3-angelfont project.com.jme3.gde.blender=jme3-blender project.com.jme3.gde.codecheck=jme3-code-check project.com.jme3.gde.customcontrols=jme3-custom-controls project.com.jme3.gde.desktop.executables=jme3-desktop-executables project.com.jme3.gde.docs=jme3-documentation project.net.java.nboglpack.glsleditor=jme3-glsl-support project.com.jme3.gde.assetpack=jme3-assetpack-support project.com.jme3.gde.cinematics=jme3-cinematics project.com.jme3.gde.codepalette=jme3-codepalette project.com.jme3.gde.core=jme3-core project.com.jme3.gde.core.baselibs=jme3-core-baselibs project.com.jme3.gde.core.libraries=jme3-core-libraries project.com.jme3.gde.core.updatecenters=jme3-core-updatecenters project.com.jme3.gde.gui=jme3-gui project.com.jme3.gde.lwjgl.applet=jme3-lwjgl-applet project.com.jme3.gde.materials=jme3-materialeditor project.com.jme3.gde.modelimporter=jme3-model-importer project.com.jme3.gde.nmgen=jme3-navmesh-gen project.com.jme3.gde.obfuscate=jme3-obfuscate project.com.jme3.gde.ogretools=jme3-ogretools project.com.jme3.gde.ogrexml=jme3-ogrexml project.com.jme3.gde.project.baselibs=jme3-project-baselibs project.com.jme3.gde.project.libraries=jme3-project-libraries project.com.jme3.gde.project.testdata=jme3-project-testdata project.com.jme3.gde.scenecomposer=jme3-scenecomposer project.com.jme3.gde.templates=jme3-templates project.com.jme3.gde.terraineditor=jme3-terrain-editor project.com.jme3.gde.tests=jme3-tests-template project.com.jme3.gde.textureeditor=jme3-texture-editor project.com.jme3.gde.upgrader=jme3-upgrader project.com.jme3.gde.vehiclecreator=jme3-vehicle-creator project.com.jme3.gde.wavefront=jme3-wavefront project.com.jme3.gde.welcome=jme3-welcome-screen " compose:StringConcatenation merge: Default]
[NT -> base : Feature]
	[NT -> sdk : Folder]
		[NT -> nbi : Folder]
			[NT -> .common : Folder]
				[NT -> engine.properties : .properties-File]
					[T -> engine.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   # whether to build native components or not; 'true'/'false' # * the engine has a bunch of native code dependencies, thus it is feasible to #   rebuild them every time build.native=true  # whether to build the netbeans part of the project or not; 'true'/'false' # * essentially the engine IS a netbeans project, thus we should always build  #   it build.nbproject=true  # dummy value for the custom parameter; which will be passed to the netbeans  # project build script; more sensible value is present in the base product  # build script nb.custom.parameter=-Dtrue=true  # name of the distributive file for the netbeans project # * ${engine.dist.file.name} is expected to be defined in the derivative  #   instance build script nbproject.dist.file.name=${engine.dist.file.name}  # path to the engine's distributive file; the file at this path would be  # considered the result of the build script and be copied to the distributives  # directory nbproject.dist.file=${nbproject.dist.dir}/${nbproject.dist.file.name}  # names of the distributive files for the native jni libraries for the engine native.dist.file.windows=windows.dll native.dist.file.linux=linux.so native.dist.file.solaris-x86=solaris-x86.so native.dist.file.solaris-sparc=solaris-sparc.so native.dist.file.macosx=macosx.dylib " compose:StringConcatenation merge: Default]
				[NT -> product.properties : .properties-File]
					[T -> product.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   # whether to build native components or not; 'true'/'false' # * normally a product does not have any native components, thus  #   ${build.native} should be 'false' in most of the cases build.native=false  # whether to build the netbeans part of the project or not; 'true'/'false' build.nbproject=true  nbproject.dist.file.name=${product.uid},logic.jar  # whether to build engine or not; 'true'/'false' build.engine=true  # whether to repackage the installation data or not; 'true'/'false'/'default' # * if set to 'false' the data will be taken as it is (i.e. will be considered  #   as already packaged) # * if set to 'true' the data will be downloaded and packaged  # * if set to 'default' packaged data will be taken if it's available,  #   otherwise raw data will be downloaded and packaged package.data=default  # whether the packaged data should be released (copied) to the local packaged # data repository; 'true'/'false' release.packaged.data=true  # various properties controlling the engine's build process engine.dir=${common.dir}/../engine engine.work.dir=${work.dir}/.engine engine.dist.dir=${dist.dir}/.engine engine.dist.file.name=engine.jar  # path to the distributive file of the engine; it will be used as the classpath  # for building the product's netbeans project # * if the ${build.engine} has been set to 'false', make sure that  #   ${engine.dist.file} points to a precompiled engine engine.dist.file=${engine.dist.dir}/${engine.dist.file.name}  downloads.cache.dir=${packaged.data.dir}/.raw  # various paths and file names that will be used for packaging the  # product package.dir=${work.dir}/package  package.descriptor.path=registry.xml  product.path=products/${product.uid}/${product.version}/${product.platforms} product.logic.path=${product.path}/logic product.data.path=${product.path}/data product.icon.path=${product.path}/icon.png  product.icon.uri=resource:${product.icon.path}  product.dist.file.name=${product.uid},${product.version},${product.platforms}.jar  # name of the product's configuration logic jar with index ${i} product.logic.file.name=logic,${i}.jar product.data.file.name=data,${i}.jar  # list of the locally cached pre-packaged data files # * the length of the list equals to ${product.data.length} # * ${packaged.data.dir} is the path to the local packaged data repository and #   is environment specific; it is expected to be passed in via the environment #   properties product.packaged.data.file=${packaged.data.dir}/${product.uid},${product.version},${product.platforms},${i}.jar product.packaged.data.properties.file=${packaged.data.dir}/${product.uid},${product.version},${product.platforms},${i}.jar.properties  # product icon and the localizing bundle, which is expected to contain # display names and descriptions for all locales, supported by the product # * these are file paths as opposed to uris for configuration logic and #   installation data product.icon=${cvs.dir}/data/icon.png product.bundle=${cvs.dir}/data/Bundle " compose:StringConcatenation merge: Default]
				[NT -> common.properties : .properties-File]
					[T -> common.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   ##################################################################################### # Initialization. Properties that are used during build script initialization.  # location of the custom tasks' sources and the destination directory for their  # build custom.tasks.src=${common.dir}/../.ant-lib/src custom.tasks.cls=${basedir}/.ant-lib  ##################################################################################### # Check-out. Properties that are used during check-out.  # whether to check out sources, or copy them from the location specified in  # ${sources.dir}; 'true'/'false' checkout.sources=true  # coordinates of the project's sources within the cvs repository # * ${cvs.root} - obvious # * ${cvs.branch} - the branch from which the sources should be checked out; if #   this property is empty, then the sources will be checked out from trunk # * ${cvs.timestamp} - the timestamp for which the sources should be checked out; if #   this property is empty, then the latest sources will be checked out # * ${cvs.module} - the module that should be checked out; at this point the #   build framework is not compatible with modules which alias several other #   modules cvs.root=:pserver:anoncvs@netbeans.org:/cvs cvs.branch= cvs.module=nbi cvs.timestamp=  # coordinates of the project's sources' localized files within the cvs  # repository # * ${translatedfiles.module} - name of the cvs module with the localized files # * ${translatedfiles.path} - path to the localized files for the project  #   within the cvs module translatedfiles.module=translatedfiles translatedfiles.path=src/${cvs.module}/${cvs.path}  # sources parameters; a search-and-replace will be run over the sources after  # check-out, replacing [token] => [value]; regular expressions are not allowed # * ${sources.params.length} - total number of the parameters # * indices should start with 1 # * parameters are not i18n compliant sources.params.length=0 #sources.params.1.token= #sources.params.1.value=  # several simple shorthands for various directories # * ${cvs.module.dir} - path to the root of the cvs module # * ${cvs.dir} - path to the current project's sources root # * ${translatedfiles.dir} - path to the localized files for the project cvs.module.dir=${work.dir}/${cvs.module} cvs.dir=${cvs.module.dir}/${cvs.path} translatedfiles.dir=${work.dir}/${translatedfiles.module}/${translatedfiles.path}  ##################################################################################### # NB Projects. Properties related to cleaning/building netbeans projects.  # path to the netbeans project that should be built; relative to the  # ${cvs.dir} nbproject.path=.  # names of targets in component's (or engine's) build script that will be  # called as part of the build process # * ${nb.target.clean} - will be called when cleaning the netbeans project # * ${nb.target.build} - will be called when building the netbeans project nb.target.clean=clean nb.target.build=jar  # additional properties which will be passed to the netbeans project build  # script # * ${nb.platform.home} - location of the jdk codenamed "JDK 1.5", this jdk #   is expected to be used by all netbeans projects # * ${nb.ignore.native} - tells the netbeans project's build script to skip #   building native components, if it is able to do so - these will be built #   as part of the project's global build script # * ${nb.no.dependencies} - tells the netbeans project's build script to skip #   building its dependencies, the dependencies are expected to be built by the #   project's global build script # * ${nb.dont.build.custom.tasks} - tells the netbeans project's build script  #   to skip building custom tasks for it, as they will already be built by the #   global script # * ${nb.custom.tasks.cls} - points the netbeans project's build script to the  #   location of the built custom tasks nb.platform.home=-Dplatforms.JDK_1.5.home=${java.home}/.. nb.platform.home.macos=-Dplatforms.JDK_1.5.home=${java.home} nb.ignore.native=-Dignore.native=true nb.no.dependencies=-Dno.dependencies=true nb.dont.build.custom.tasks=-Ddont.build.custom.tasks=true nb.custom.tasks.cls=-Dcustom.tasks.cls=${custom.tasks.cls}  # default path to the distributives directory of the netbeans project; relative  # to ${nbproject.path} nb.dist.path=dist  # path to the classes directory of the netbeans project; relative to  # ${nbproject.path} nb.classes.dir=build/classes  # path to the manifest file of the netbeans project; relative to the  # ${nbproject.path} nbproject.manifest=manifest.mf  # path to the dist directory that the nbproject should use; since we do not use  # the netbeans' packaging mechanism, we have the flexibility to specify any  # distributives directory we want nbproject.dist.dir=${cvs.dir}/${nbproject.path}/${nb.dist.path}  ##################################################################################### # Native. Properties related to cleaning/building native components.  # path to the directory with the sources for the native components; relative  # to the root of the project's sources native.path=${cvs.module}/${cvs.path}/native  # path to the directory with the localized files for the native components;  # relative to the root of the project's localized files directory translatedfiles.native.path=${translatedfiles.module}/${translatedfiles.path}/native  # list of platforms for which the native components should be built # * the list should be space-separated native.platforms=windows linux solaris-x86 solaris-sparc macosx  # directory on the remote machine where the build script should operate # * this is the default value, the actual value is expected to be passed in  #   through the environment properties remote.work.dir=~/.nbi-build  # ssh properties: executable name, set of arguments and the command. # * ${remote.host}, ${remote.port} and ${remote.user} are environment specific  #   and are expected to be passed in through the environment properties ssh.executable=ssh ssh.arguments=-l ${remote.user} -p ${remote.port} ${remote.host} ssh.command.clean=rm -rf ${remote.work.dir}; ssh.command.build=rm -rf ${remote.work.dir}; \                   mkdir ${remote.work.dir}; \                   cd ${remote.work.dir}; \                   if [ "${cvs.branch}" = "" ]; then \                       if [ "${cvs.timestamp}" = "" ]; then \                           cvs -d ${cvs.root} co -P ${native.path}; \                           cvs -d ${cvs.root} co -P ${translatedfiles.native.path}; \                       else\                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -P ${native.path}; \                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -P ${translatedfiles.native.path}; \                       fi;\                   else \                       if [ "${cvs.timestamp}" = "" ]; then \                           cvs -d ${cvs.root} co -r ${cvs.branch} -P ${native.path}; \                           cvs -d ${cvs.root} co -r ${cvs.branch} -P ${translatedfiles.native.path}; \                       else \                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -r ${cvs.branch} -P ${native.path}; \                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -r ${cvs.branch} -P ${translatedfiles.native.path}; \                       fi;\                   fi; \                   cp -r ${translatedfiles.native.path} ${native.path}; \                   cd ${native.path}/${platform}; \                   make  # scp properties: executable name, set of arguments, remote directory, local  # directory # * ${remote.host}, ${remote.port} and ${remote.user} are platform and  #   environment specific and are expected to be passed in through the  #   environment properties # * name of the file to copy is platform specific and is defined elsewhere,  #   most likely in the base build script for a project type (engine, product,  #   etc.) # * ${platform} will be defined at runtime, as these commands will be executed  #   in loop over the list of platforms scp.executable=scp scp.arguments=-P ${remote.port} scp.remote.dir=${remote.user}@${remote.host}:${remote.work.dir}/${native.path}/${platform}/${nb.dist.path} scp.local.dir=${work.dir}/${native.path}/${platform}/${nb.dist.path}  # names of the native distributive files for various platforms native.dist.file.windows=windows.dll native.dist.file.linux=linux.so native.dist.file.solaris-x86=solaris-x86.so native.dist.file.solaris-sparc=solaris-sparc.so native.dist.file.macosx=macosx.dylib  ##################################################################################### # Release. Properties controlling the 'release' process release.to.server=true  ##################################################################################### # Miscellaneous. Properties that are used elsewhere.  # these properties control the environment for the jarsigner process # * ${jarsigner.enabled} - whether to sign jars # * ${jarsigner.xmx} - max heap size for the jarsigner process # * ${jarsigner.executable} - path to jarsigner executable (optional) jarsigner.enabled=true jarsigner.xmx=1024m  # these properties control the environment for the pack200 and unpack200  # processes # * ${pack200.enabled} - whether to repackage jars (can be specified in each product) # * ${use.internal.packer} - whether to use the same JVM for packing jars (can be specified in each product) #       it is risky because of memory leaks and possible OOMs  # * ${use.internal.unpacker} - whether to use the same JVM for unpacking jars (can be specified in each product) #       it is risky because of memory leaks and possible OOMs  # * ${pack200.xmx} - -Xmx jvm argument value # * ${pack200.perm.size} - -XX:PermSize jvm argument value # * ${pack200.max.perm.size} - -XX:MaxPermSize jvm argument value # * ${pack200.executable}   - path to pack200 executable (optional) # * ${unpack200.executable} - path to unpack200 executable (optional) # * ${verification.java.executable} - path to java executable that would be used for verification of packaged jars (optional) pack200.xmx=768m pack200.perm.size=32m pack200.max.perm.size=512m  # these properties control the environment for the external processes running during the build # * ${process.max.execution.time} - maximum time (in milliseconds) for running the process #   if set to zero then processes would run without timeout #   default value is 600000=10min (defined in nbi/infra/build/.ant-lib/src/org/netbeans/installer/infra/build/ant/utils/Utils.java)  # these properties control native executable paths # * ${tar.executable}    - path to native tar/gtar/gnutar executable # * ${ls.executable}     - path to native ls executable # * ${unzip.executable}  - path to native unzip executable " compose:StringConcatenation merge: Default]
				[NT -> group.properties : .properties-File]
					[T -> group.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   # groups do not normally have any native components, thus there is no need to  # attempt to build anything native build.native=false  # groups do not normally have any netbeans projects, thus there is no need to  # attempt to build any nbproject build.nbproject=false  # various directories and file paths that will be used for packaging the  # group package.dir=${work.dir}/package  package.descriptor.path=registry.xml  group.path=groups/${group.uid} group.icon.path=${group.path}/icon.png  group.dist.file.name=${group.uid}.jar  # path to the group's icon; the contents of this file will be copied to the # file identified by ${group.icon.file} group.icon=${cvs.dir}/data/icon.png  # path to the group's localizing bundle; the bundle is expected to contain # two properties: 'group.display.name' and 'group.description', which will be  # used in creating the registry entry for this group group.bundle=${cvs.dir}/data/Bundle  # uri of the group's icon, which will appear in the registry group.icon.uri=resource:${group.icon.path} " compose:StringConcatenation merge: Default]
		[NT -> nbproject : Folder]
			[NT -> project.properties : .properties-File]
				[T -> project.properties : .properties-Content "app.icon=branding/core/core.jar/org/netbeans/core/startup/frame48.gif #same as ${branding.token} app.name=jmonkeyplatform app.title=jMonkeyEngine SDK app.icon.icns=jmonkeyplatform.icns #version name used for application and settings folder, no spaces! app.version=3.1-pre-alpha-svn #version number used for plugins, only 3 numbers (e.g. 3.1.3) plugins.version=3.1.0 #command line args run.args.extra=-J-Xmx512m -J-XX:PermSize=128m -J-XX:MaxDirectMemorySize=2048m -J-Dsun.zip.disableMemoryMapping=true -J-Dapple.awt.graphics.UseQuartz=true -J-Dsun.java2d.noddraw=true auxiliary.org-netbeans-modules-apisupport-installer.license-file=license-jme.txt auxiliary.org-netbeans-modules-apisupport-installer.os-linux=true auxiliary.org-netbeans-modules-apisupport-installer.os-macosx=true auxiliary.org-netbeans-modules-apisupport-installer.os-solaris=false auxiliary.org-netbeans-modules-apisupport-installer.os-windows=true auxiliary.org-netbeans-modules-apisupport-installer.pack200-enabled=true modules=\     ${project.com.jme3.gde.upgrader}:\     ${project.com.jme3.gde.core}:\     ${project.com.jme3.gde.core.baselibs}:\     ${project.com.jme3.gde.core.libraries}:\     ${project.com.jme3.gde.templates}:\     ${project.com.jme3.gde.project.baselibs}:\     ${project.com.jme3.gde.project.libraries}:\     ${project.com.jme3.gde.tests}:\     ${project.com.jme3.gde.project.testdata}:\     ${project.com.jme3.gde.ogrexml}:\     ${project.com.jme3.gde.scenecomposer}:\     ${project.com.jme3.gde.materials}:\     ${project.com.jme3.gde.gui}:\     ${project.com.jme3.gde.ogretools}:\     ${project.com.jme3.gde.codepalette}:\     ${project.com.jme3.gde.textureeditor}:\     ${project.com.jme3.gde.core.updatecenters}:\     ${project.com.jme3.gde.wavefront}:\     ${project.com.jme3.gde.terraineditor}:\     ${project.com.jme3.gde.assetpack}:\     ${project.com.jme3.gde.modelimporter}:\     ${project.com.jme3.gde.lwjgl.applet}:\     ${project.com.jme3.gde.desktop.executables}:\     ${project.com.jme3.gde.cinematics}:\     ${project.com.jme3.gde.vehiclecreator}:\     ${project.com.jme3.gde.welcome}:\     ${project.com.jme3.gde.codecheck}:\     ${project.com.jme3.gde.obfuscate}:\     ${project.com.jme3.gde.blender}:\     ${project.com.jme3.gde.angelfont}:\     ${project.net.java.nboglpack.glsleditor}:\     ${project.com.jme3.gde.android}:\     ${project.com.jme3.gde.nmgen}:\     ${project.com.jme3.gde.docs} project.com.jme3.gde.android=jme3-android project.com.jme3.gde.angelfont=jme3-angelfont project.com.jme3.gde.blender=jme3-blender project.com.jme3.gde.codecheck=jme3-code-check project.com.jme3.gde.customcontrols=jme3-custom-controls project.com.jme3.gde.desktop.executables=jme3-desktop-executables project.com.jme3.gde.docs=jme3-documentation project.net.java.nboglpack.glsleditor=jme3-glsl-support project.com.jme3.gde.assetpack=jme3-assetpack-support project.com.jme3.gde.cinematics=jme3-cinematics project.com.jme3.gde.codepalette=jme3-codepalette project.com.jme3.gde.core=jme3-core project.com.jme3.gde.core.baselibs=jme3-core-baselibs project.com.jme3.gde.core.libraries=jme3-core-libraries project.com.jme3.gde.core.updatecenters=jme3-core-updatecenters project.com.jme3.gde.gui=jme3-gui project.com.jme3.gde.lwjgl.applet=jme3-lwjgl-applet project.com.jme3.gde.materials=jme3-materialeditor project.com.jme3.gde.modelimporter=jme3-model-importer project.com.jme3.gde.nmgen=jme3-navmesh-gen project.com.jme3.gde.obfuscate=jme3-obfuscate project.com.jme3.gde.ogretools=jme3-ogretools project.com.jme3.gde.ogrexml=jme3-ogrexml project.com.jme3.gde.project.baselibs=jme3-project-baselibs project.com.jme3.gde.project.libraries=jme3-project-libraries project.com.jme3.gde.project.testdata=jme3-project-testdata project.com.jme3.gde.scenecomposer=jme3-scenecomposer project.com.jme3.gde.templates=jme3-templates project.com.jme3.gde.terraineditor=jme3-terrain-editor project.com.jme3.gde.tests=jme3-tests-template project.com.jme3.gde.textureeditor=jme3-texture-editor project.com.jme3.gde.upgrader=jme3-upgrader project.com.jme3.gde.vehiclecreator=jme3-vehicle-creator project.com.jme3.gde.wavefront=jme3-wavefront project.com.jme3.gde.welcome=jme3-welcome-screen " compose:StringConcatenation merge: Default]
[NT -> right : Feature]
	[NT -> sdk : Folder]
		[NT -> nbi : Folder]
			[NT -> .common : Folder]
				[NT -> engine.properties : .properties-File]
					[T -> engine.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   # whether to build native components or not; 'true'/'false' # * the engine has a bunch of native code dependencies, thus it is feasible to #   rebuild them every time build.native=true  # whether to build the netbeans part of the project or not; 'true'/'false' # * essentially the engine IS a netbeans project, thus we should always build  #   it build.nbproject=true  # dummy value for the custom parameter; which will be passed to the netbeans  # project build script; more sensible value is present in the base product  # build script nb.custom.parameter=-Dtrue=true  # name of the distributive file for the netbeans project # * ${engine.dist.file.name} is expected to be defined in the derivative  #   instance build script nbproject.dist.file.name=${engine.dist.file.name}  # path to the engine's distributive file; the file at this path would be  # considered the result of the build script and be copied to the distributives  # directory nbproject.dist.file=${nbproject.dist.dir}/${nbproject.dist.file.name}  # names of the distributive files for the native jni libraries for the engine native.dist.file.windows=windows.dll native.dist.file.linux=linux.so native.dist.file.solaris-x86=solaris-x86.so native.dist.file.solaris-sparc=solaris-sparc.so native.dist.file.macosx=macosx.dylib " compose:StringConcatenation merge: Default]
				[NT -> product.properties : .properties-File]
					[T -> product.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   # whether to build native components or not; 'true'/'false' # * normally a product does not have any native components, thus  #   ${build.native} should be 'false' in most of the cases build.native=false  # whether to build the netbeans part of the project or not; 'true'/'false' build.nbproject=true  nbproject.dist.file.name=${product.uid},logic.jar  # whether to build engine or not; 'true'/'false' build.engine=true  # whether to repackage the installation data or not; 'true'/'false'/'default' # * if set to 'false' the data will be taken as it is (i.e. will be considered  #   as already packaged) # * if set to 'true' the data will be downloaded and packaged  # * if set to 'default' packaged data will be taken if it's available,  #   otherwise raw data will be downloaded and packaged package.data=default  # whether the packaged data should be released (copied) to the local packaged # data repository; 'true'/'false' release.packaged.data=true  # various properties controlling the engine's build process engine.dir=${common.dir}/../engine engine.work.dir=${work.dir}/.engine engine.dist.dir=${dist.dir}/.engine engine.dist.file.name=engine.jar  # path to the distributive file of the engine; it will be used as the classpath  # for building the product's netbeans project # * if the ${build.engine} has been set to 'false', make sure that  #   ${engine.dist.file} points to a precompiled engine engine.dist.file=${engine.dist.dir}/${engine.dist.file.name}  downloads.cache.dir=${packaged.data.dir}/.raw  # various paths and file names that will be used for packaging the  # product package.dir=${work.dir}/package  package.descriptor.path=registry.xml  product.path=products/${product.uid}/${product.version}/${product.platforms} product.logic.path=${product.path}/logic product.data.path=${product.path}/data product.icon.path=${product.path}/icon.png  product.icon.uri=resource:${product.icon.path}  product.dist.file.name=${product.uid},${product.version},${product.platforms}.jar  # name of the product's configuration logic jar with index ${i} product.logic.file.name=logic,${i}.jar product.data.file.name=data,${i}.jar  # list of the locally cached pre-packaged data files # * the length of the list equals to ${product.data.length} # * ${packaged.data.dir} is the path to the local packaged data repository and #   is environment specific; it is expected to be passed in via the environment #   properties product.packaged.data.file=${packaged.data.dir}/${product.uid},${product.version},${product.platforms},${i}.jar product.packaged.data.properties.file=${packaged.data.dir}/${product.uid},${product.version},${product.platforms},${i}.jar.properties  # product icon and the localizing bundle, which is expected to contain # display names and descriptions for all locales, supported by the product # * these are file paths as opposed to uris for configuration logic and #   installation data product.icon=${cvs.dir}/data/icon.png product.bundle=${cvs.dir}/data/Bundle " compose:StringConcatenation merge: Default]
				[NT -> common.properties : .properties-File]
					[T -> common.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   ##################################################################################### # Initialization. Properties that are used during build script initialization.  # location of the custom tasks' sources and the destination directory for their  # build custom.tasks.src=${common.dir}/../.ant-lib/src custom.tasks.cls=${basedir}/.ant-lib  ##################################################################################### # Check-out. Properties that are used during check-out.  # whether to check out sources, or copy them from the location specified in  # ${sources.dir}; 'true'/'false' checkout.sources=true  # coordinates of the project's sources within the cvs repository # * ${cvs.root} - obvious # * ${cvs.branch} - the branch from which the sources should be checked out; if #   this property is empty, then the sources will be checked out from trunk # * ${cvs.timestamp} - the timestamp for which the sources should be checked out; if #   this property is empty, then the latest sources will be checked out # * ${cvs.module} - the module that should be checked out; at this point the #   build framework is not compatible with modules which alias several other #   modules cvs.root=:pserver:anoncvs@netbeans.org:/cvs cvs.branch= cvs.module=nbi cvs.timestamp=  # coordinates of the project's sources' localized files within the cvs  # repository # * ${translatedfiles.module} - name of the cvs module with the localized files # * ${translatedfiles.path} - path to the localized files for the project  #   within the cvs module translatedfiles.module=translatedfiles translatedfiles.path=src/${cvs.module}/${cvs.path}  # sources parameters; a search-and-replace will be run over the sources after  # check-out, replacing [token] => [value]; regular expressions are not allowed # * ${sources.params.length} - total number of the parameters # * indices should start with 1 # * parameters are not i18n compliant sources.params.length=0 #sources.params.1.token= #sources.params.1.value=  # several simple shorthands for various directories # * ${cvs.module.dir} - path to the root of the cvs module # * ${cvs.dir} - path to the current project's sources root # * ${translatedfiles.dir} - path to the localized files for the project cvs.module.dir=${work.dir}/${cvs.module} cvs.dir=${cvs.module.dir}/${cvs.path} translatedfiles.dir=${work.dir}/${translatedfiles.module}/${translatedfiles.path}  ##################################################################################### # NB Projects. Properties related to cleaning/building netbeans projects.  # path to the netbeans project that should be built; relative to the  # ${cvs.dir} nbproject.path=.  # names of targets in component's (or engine's) build script that will be  # called as part of the build process # * ${nb.target.clean} - will be called when cleaning the netbeans project # * ${nb.target.build} - will be called when building the netbeans project nb.target.clean=clean nb.target.build=jar  # additional properties which will be passed to the netbeans project build  # script # * ${nb.platform.home} - location of the jdk codenamed "JDK 1.5", this jdk #   is expected to be used by all netbeans projects # * ${nb.ignore.native} - tells the netbeans project's build script to skip #   building native components, if it is able to do so - these will be built #   as part of the project's global build script # * ${nb.no.dependencies} - tells the netbeans project's build script to skip #   building its dependencies, the dependencies are expected to be built by the #   project's global build script # * ${nb.dont.build.custom.tasks} - tells the netbeans project's build script  #   to skip building custom tasks for it, as they will already be built by the #   global script # * ${nb.custom.tasks.cls} - points the netbeans project's build script to the  #   location of the built custom tasks nb.platform.home=-Dplatforms.JDK_1.5.home=${java.home}/.. nb.platform.home.macos=-Dplatforms.JDK_1.5.home=${java.home} nb.ignore.native=-Dignore.native=true nb.no.dependencies=-Dno.dependencies=true nb.dont.build.custom.tasks=-Ddont.build.custom.tasks=true nb.custom.tasks.cls=-Dcustom.tasks.cls=${custom.tasks.cls}  # default path to the distributives directory of the netbeans project; relative  # to ${nbproject.path} nb.dist.path=dist  # path to the classes directory of the netbeans project; relative to  # ${nbproject.path} nb.classes.dir=build/classes  # path to the manifest file of the netbeans project; relative to the  # ${nbproject.path} nbproject.manifest=manifest.mf  # path to the dist directory that the nbproject should use; since we do not use  # the netbeans' packaging mechanism, we have the flexibility to specify any  # distributives directory we want nbproject.dist.dir=${cvs.dir}/${nbproject.path}/${nb.dist.path}  ##################################################################################### # Native. Properties related to cleaning/building native components.  # path to the directory with the sources for the native components; relative  # to the root of the project's sources native.path=${cvs.module}/${cvs.path}/native  # path to the directory with the localized files for the native components;  # relative to the root of the project's localized files directory translatedfiles.native.path=${translatedfiles.module}/${translatedfiles.path}/native  # list of platforms for which the native components should be built # * the list should be space-separated native.platforms=windows linux solaris-x86 solaris-sparc macosx  # directory on the remote machine where the build script should operate # * this is the default value, the actual value is expected to be passed in  #   through the environment properties remote.work.dir=~/.nbi-build  # ssh properties: executable name, set of arguments and the command. # * ${remote.host}, ${remote.port} and ${remote.user} are environment specific  #   and are expected to be passed in through the environment properties ssh.executable=ssh ssh.arguments=-l ${remote.user} -p ${remote.port} ${remote.host} ssh.command.clean=rm -rf ${remote.work.dir}; ssh.command.build=rm -rf ${remote.work.dir}; \                   mkdir ${remote.work.dir}; \                   cd ${remote.work.dir}; \                   if [ "${cvs.branch}" = "" ]; then \                       if [ "${cvs.timestamp}" = "" ]; then \                           cvs -d ${cvs.root} co -P ${native.path}; \                           cvs -d ${cvs.root} co -P ${translatedfiles.native.path}; \                       else\                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -P ${native.path}; \                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -P ${translatedfiles.native.path}; \                       fi;\                   else \                       if [ "${cvs.timestamp}" = "" ]; then \                           cvs -d ${cvs.root} co -r ${cvs.branch} -P ${native.path}; \                           cvs -d ${cvs.root} co -r ${cvs.branch} -P ${translatedfiles.native.path}; \                       else \                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -r ${cvs.branch} -P ${native.path}; \                           cvs -D ${cvs.timestamp} -d ${cvs.root} co -r ${cvs.branch} -P ${translatedfiles.native.path}; \                       fi;\                   fi; \                   cp -r ${translatedfiles.native.path} ${native.path}; \                   cd ${native.path}/${platform}; \                   make  # scp properties: executable name, set of arguments, remote directory, local  # directory # * ${remote.host}, ${remote.port} and ${remote.user} are platform and  #   environment specific and are expected to be passed in through the  #   environment properties # * name of the file to copy is platform specific and is defined elsewhere,  #   most likely in the base build script for a project type (engine, product,  #   etc.) # * ${platform} will be defined at runtime, as these commands will be executed  #   in loop over the list of platforms scp.executable=scp scp.arguments=-P ${remote.port} scp.remote.dir=${remote.user}@${remote.host}:${remote.work.dir}/${native.path}/${platform}/${nb.dist.path} scp.local.dir=${work.dir}/${native.path}/${platform}/${nb.dist.path}  # names of the native distributive files for various platforms native.dist.file.windows=windows.dll native.dist.file.linux=linux.so native.dist.file.solaris-x86=solaris-x86.so native.dist.file.solaris-sparc=solaris-sparc.so native.dist.file.macosx=macosx.dylib  ##################################################################################### # Release. Properties controlling the 'release' process release.to.server=true  ##################################################################################### # Miscellaneous. Properties that are used elsewhere.  # these properties control the environment for the jarsigner process # * ${jarsigner.enabled} - whether to sign jars # * ${jarsigner.xmx} - max heap size for the jarsigner process # * ${jarsigner.executable} - path to jarsigner executable (optional) jarsigner.enabled=true jarsigner.xmx=1024m  # these properties control the environment for the pack200 and unpack200  # processes # * ${pack200.enabled} - whether to repackage jars (can be specified in each product) # * ${use.internal.packer} - whether to use the same JVM for packing jars (can be specified in each product) #       it is risky because of memory leaks and possible OOMs  # * ${use.internal.unpacker} - whether to use the same JVM for unpacking jars (can be specified in each product) #       it is risky because of memory leaks and possible OOMs  # * ${pack200.xmx} - -Xmx jvm argument value # * ${pack200.perm.size} - -XX:PermSize jvm argument value # * ${pack200.max.perm.size} - -XX:MaxPermSize jvm argument value # * ${pack200.executable}   - path to pack200 executable (optional) # * ${unpack200.executable} - path to unpack200 executable (optional) # * ${verification.java.executable} - path to java executable that would be used for verification of packaged jars (optional) pack200.xmx=768m pack200.perm.size=32m pack200.max.perm.size=512m  # these properties control the environment for the external processes running during the build # * ${process.max.execution.time} - maximum time (in milliseconds) for running the process #   if set to zero then processes would run without timeout #   default value is 600000=10min (defined in nbi/infra/build/.ant-lib/src/org/netbeans/installer/infra/build/ant/utils/Utils.java)  # these properties control native executable paths # * ${tar.executable}    - path to native tar/gtar/gnutar executable # * ${ls.executable}     - path to native ls executable # * ${unzip.executable}  - path to native unzip executable " compose:StringConcatenation merge: Default]
				[NT -> group.properties : .properties-File]
					[T -> group.properties : .properties-Content "# # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER. # # Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved. # # Oracle and Java are registered trademarks of Oracle and/or its affiliates. # Other names may be trademarks of their respective owners. # # The contents of this file are subject to the terms of either the GNU General Public # License Version 2 only ("GPL") or the Common Development and Distribution # License("CDDL") (collectively, the "License"). You may not use this file except in # compliance with the License. You can obtain a copy of the License at # http://www.netbeans.org/cddl-gplv2.html or nbbuild/licenses/CDDL-GPL-2-CP. See the # License for the specific language governing permissions and limitations under the # License.  When distributing the software, include this License Header Notice in # each file and include the License file at nbbuild/licenses/CDDL-GPL-2-CP.  Oracle # designates this particular file as subject to the "Classpath" exception as provided # by Oracle in the GPL Version 2 section of the License file that accompanied this code. # If applicable, add the following below the License Header, with the fields enclosed # by brackets [] replaced by your own identifying information: # "Portions Copyrighted [year] [name of copyright owner]" #  # Contributor(s): #  # The Original Software is NetBeans. The Initial Developer of the Original Software # is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun Microsystems, Inc. All # Rights Reserved. #  # If you wish your version of this file to be governed by only the CDDL or only the # GPL Version 2, indicate your decision by adding "[Contributor] elects to include # this software in this distribution under the [CDDL or GPL Version 2] license." If # you do not indicate a single choice of license, a recipient has the option to # distribute your version of this file under either the CDDL, the GPL Version 2 or # to extend the choice of license to its licensees as provided above. However, if you # add GPL Version 2 code and therefore, elected the GPL Version 2 license, then the # option applies only if the new code is made subject to such option by the copyright # holder. #   # groups do not normally have any native components, thus there is no need to  # attempt to build anything native build.native=false  # groups do not normally have any netbeans projects, thus there is no need to  # attempt to build any nbproject build.nbproject=false  # various directories and file paths that will be used for packaging the  # group package.dir=${work.dir}/package  package.descriptor.path=registry.xml  group.path=groups/${group.uid} group.icon.path=${group.path}/icon.png  group.dist.file.name=${group.uid}.jar  # path to the group's icon; the contents of this file will be copied to the # file identified by ${group.icon.file} group.icon=${cvs.dir}/data/icon.png  # path to the group's localizing bundle; the bundle is expected to contain # two properties: 'group.display.name' and 'group.description', which will be  # used in creating the registry entry for this group group.bundle=${cvs.dir}/data/Bundle  # uri of the group's icon, which will appear in the registry group.icon.uri=resource:${group.icon.path} " compose:StringConcatenation merge: Default]
		[NT -> nbproject : Folder]
			[NT -> project.properties : .properties-File]
				[T -> project.properties : .properties-Content "#Tue, 29 Apr 2014 15:43:20 +0200 app.icon=branding/core/core.jar/org/netbeans/core/startup/frame48.gif #same as ${branding.token} app.name=jmonkeyplatform app.title=jMonkeyEngine SDK app.icon.icns=jmonkeyplatform.icns #version name used for application and settings folder, no spaces! app.version=3.1-pre-alpha-svn #version number used for plugins, only 3 numbers (e.g. 3.1.3) plugins.version=3.0.10 #command line args run.args.extra=-J-Xmx512m -J-XX\:PermSize\=128m -J-XX\:MaxDirectMemorySize\=2048m -J-Dsun.zip.disableMemoryMapping\=true -J-Dapple.awt.graphics.UseQuartz\=true -J-Dsun.java2d.noddraw\=true auxiliary.org-netbeans-modules-apisupport-installer.license-file=license-jme.txt auxiliary.org-netbeans-modules-apisupport-installer.os-linux=true auxiliary.org-netbeans-modules-apisupport-installer.os-macosx=true auxiliary.org-netbeans-modules-apisupport-installer.os-solaris=false auxiliary.org-netbeans-modules-apisupport-installer.os-windows=true auxiliary.org-netbeans-modules-apisupport-installer.pack200-enabled=true modules=${project.com.jme3.gde.upgrader}\:${project.com.jme3.gde.core}\:${project.com.jme3.gde.core.baselibs}\:${project.com.jme3.gde.core.libraries}\:${project.com.jme3.gde.templates}\:${project.com.jme3.gde.project.baselibs}\:${project.com.jme3.gde.project.libraries}\:${project.com.jme3.gde.tests}\:${project.com.jme3.gde.project.testdata}\:${project.com.jme3.gde.ogrexml}\:${project.com.jme3.gde.scenecomposer}\:${project.com.jme3.gde.materials}\:${project.com.jme3.gde.gui}\:${project.com.jme3.gde.ogretools}\:${project.com.jme3.gde.codepalette}\:${project.com.jme3.gde.textureeditor}\:${project.com.jme3.gde.core.updatecenters}\:${project.com.jme3.gde.wavefront}\:${project.com.jme3.gde.terraineditor}\:${project.com.jme3.gde.assetpack}\:${project.com.jme3.gde.modelimporter}\:${project.com.jme3.gde.lwjgl.applet}\:${project.com.jme3.gde.desktop.executables}\:${project.com.jme3.gde.cinematics}\:${project.com.jme3.gde.vehiclecreator}\:${project.com.jme3.gde.welcome}\:${project.com.jme3.gde.codecheck}\:${project.com.jme3.gde.obfuscate}\:${project.com.jme3.gde.blender}\:${project.com.jme3.gde.angelfont}\:${project.net.java.nboglpack.glsleditor}\:${project.com.jme3.gde.android}\:${project.com.jme3.gde.nmgen}\:${project.com.jme3.gde.docs} project.com.jme3.gde.android=jme3-android project.com.jme3.gde.angelfont=jme3-angelfont project.com.jme3.gde.blender=jme3-blender project.com.jme3.gde.codecheck=jme3-code-check project.com.jme3.gde.customcontrols=jme3-custom-controls project.com.jme3.gde.desktop.executables=jme3-desktop-executables project.com.jme3.gde.docs=jme3-documentation project.net.java.nboglpack.glsleditor=jme3-glsl-support project.com.jme3.gde.assetpack=jme3-assetpack-support project.com.jme3.gde.cinematics=jme3-cinematics project.com.jme3.gde.codepalette=jme3-codepalette project.com.jme3.gde.core=jme3-core project.com.jme3.gde.core.baselibs=jme3-core-baselibs project.com.jme3.gde.core.libraries=jme3-core-libraries project.com.jme3.gde.core.updatecenters=jme3-core-updatecenters project.com.jme3.gde.gui=jme3-gui project.com.jme3.gde.lwjgl.applet=jme3-lwjgl-applet project.com.jme3.gde.materials=jme3-materialeditor project.com.jme3.gde.modelimporter=jme3-model-importer project.com.jme3.gde.nmgen=jme3-navmesh-gen project.com.jme3.gde.obfuscate=jme3-obfuscate project.com.jme3.gde.ogretools=jme3-ogretools project.com.jme3.gde.ogrexml=jme3-ogrexml project.com.jme3.gde.project.baselibs=jme3-project-baselibs project.com.jme3.gde.project.libraries=jme3-project-libraries project.com.jme3.gde.project.testdata=jme3-project-testdata project.com.jme3.gde.scenecomposer=jme3-scenecomposer project.com.jme3.gde.templates=jme3-templates project.com.jme3.gde.terraineditor=jme3-terrain-editor project.com.jme3.gde.tests=jme3-tests-template project.com.jme3.gde.textureeditor=jme3-texture-editor project.com.jme3.gde.upgrader=jme3-upgrader project.com.jme3.gde.vehiclecreator=jme3-vehicle-creator project.com.jme3.gde.wavefront=jme3-wavefront project.com.jme3.gde.welcome=jme3-welcome-screen " compose:StringConcatenation merge: Default]
[NT -> left : Feature]
	[NT -> sdk : Folder]
		[NT -> nbi : Folder]
			[NT -> .common : Folder]
				[NT -> common.xml : XML-File]
					[NT -> common : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "common" compose:Replacement merge: Default]
						[T -> name : attribute "common" compose:Replacement merge: Default]
						[NT -> clean-all : target]
							[T -> depends : attribute "clean" compose:Replacement merge: Default]
							[T -> name : attribute "clean-all" compose:Replacement merge: Default]
							[T -> name : attribute "clean-all" compose:Replacement merge: Default]
						[NT -> build-all : target]
							[T -> depends : attribute "clean-all,checkout,build" compose:Replacement merge: Default]
							[T -> name : attribute "build-all" compose:Replacement merge: Default]
							[T -> name : attribute "build-all" compose:Replacement merge: Default]
						[NT -> release-all : target]
							[T -> depends : attribute "build-all,release" compose:Replacement merge: Default]
							[T -> name : attribute "release-all" compose:Replacement merge: Default]
							[T -> name : attribute "release-all" compose:Replacement merge: Default]
						[NT -> init : target]
							[T -> depends : attribute "-pre-init,-init,-post-init" compose:Replacement merge: Default]
							[T -> name : attribute "init" compose:Replacement merge: Default]
							[T -> name : attribute "init" compose:Replacement merge: Default]
						[NT -> .init : target]
							[T -> depends : attribute ".build-custom-tasks" compose:Replacement merge: Default]
							[T -> name : attribute ".init" compose:Replacement merge: Default]
							[T -> unless : attribute "skip.initialization" compose:Replacement merge: Default]
							[T -> name : attribute ".init" compose:Replacement merge: Default]
							[NT -> for-each : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ForEach" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "for-each" compose:Replacement merge: Default]
								[T -> name : attribute "for-each" compose:Replacement merge: Default]
							[NT -> set : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.SetProperty" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "set" compose:Replacement merge: Default]
								[T -> name : attribute "set" compose:Replacement merge: Default]
							[NT -> if : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.If" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "if" compose:Replacement merge: Default]
								[T -> name : attribute "if" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.checkout" compose:Replacement merge: Default]
								[NT ->  : and]
									[NT ->  : equals]
										[T -> arg1 : attribute "${checkout.sources}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.checkout.copy" compose:Replacement merge: Default]
								[NT ->  : not]
									[NT ->  : equals]
										[T -> arg1 : attribute "${checkout.sources}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.build.native" compose:Replacement merge: Default]
								[NT ->  : equals]
									[T -> arg1 : attribute "${build.native}" compose:Replacement merge: Default]
									[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.build.nbproject" compose:Replacement merge: Default]
								[NT ->  : equals]
									[T -> arg1 : attribute "${build.nbproject}" compose:Replacement merge: Default]
									[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "ant.executable" compose:Replacement merge: Default]
								[T -> value : attribute "${ant.home}/bin/ant.bat" compose:Replacement merge: Default]
								[NT ->  : os]
									[T -> family : attribute "windows" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "ant.executable" compose:Replacement merge: Default]
								[T -> value : attribute "${ant.home}/bin/ant" compose:Replacement merge: Default]
								[NT ->  : not]
									[NT ->  : os]
										[T -> family : attribute "windows" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${work.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${dist.dir}" compose:Replacement merge: Default]
							[NT -> skip.initialization : property]
								[T -> name : attribute "skip.initialization" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[T -> name : attribute "skip.initialization" compose:Replacement merge: Default]
						[NT -> .build-custom-tasks : target]
							[T -> name : attribute ".build-custom-tasks" compose:Replacement merge: Default]
							[T -> unless : attribute "dont.build.custom.tasks" compose:Replacement merge: Default]
							[T -> name : attribute ".build-custom-tasks" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> dir : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
							[NT ->  : javac]
								[T -> debug : attribute "true" compose:Replacement merge: Default]
								[T -> destdir : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> srcdir : attribute "${custom.tasks.src}" compose:Replacement merge: Default]
							[NT -> dont.build.custom.tasks : property]
								[T -> name : attribute "dont.build.custom.tasks" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[T -> name : attribute "dont.build.custom.tasks" compose:Replacement merge: Default]
						[NT -> -pre-init : target]
							[T -> name : attribute "-pre-init" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-init" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
						[NT -> -post-init : target]
							[T -> name : attribute "-post-init" compose:Replacement merge: Default]
							[T -> name : attribute "-post-init" compose:Replacement merge: Default]
						[NT -> clean : target]
							[T -> depends : attribute "init,-pre-clean,-clean,-post-clean" compose:Replacement merge: Default]
							[T -> name : attribute "clean" compose:Replacement merge: Default]
							[T -> name : attribute "clean" compose:Replacement merge: Default]
						[NT -> .clean : target]
							[T -> name : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute ".clean" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> list : attribute "${native.platforms}" compose:Replacement merge: Default]
								[T -> property : attribute "platform" compose:Replacement merge: Default]
								[NT ->  : antcall]
									[T -> target : attribute ".clean-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-nbproject" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> dir : attribute "${work.dir}" compose:Replacement merge: Default]
								[T -> includeemptydirs : attribute "true" compose:Replacement merge: Default]
						[NT -> .clean-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-jni" compose:Replacement merge: Default]
						[NT -> .clean-jni : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-jni" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-jni" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.local.dir" compose:Replacement merge: Default]
								[T -> source : attribute "scp.local.dir" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.native.dist.file" compose:Replacement merge: Default]
								[T -> source : attribute "native.dist.file.${platform}" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> dir : attribute "${scp.local.dir}/${current.native.dist.file}" compose:Replacement merge: Default]
						[NT -> .clean-nbproject : target]
							[T -> if : attribute "do.build.nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-nbproject" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "nbproject.exists" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : available]
									[T -> file : attribute "${cvs.dir}/${nbproject.path}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "nbproject.exists" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> else : attribute "${nb.platform.home.macos}" compose:Replacement merge: Default]
									[T -> property : attribute "nb.jdk.home" compose:Replacement merge: Default]
									[T -> value : attribute "${nb.platform.home}" compose:Replacement merge: Default]
									[NT ->  : not]
										[NT ->  : equals]
											[T -> arg1 : attribute "Apple Inc." compose:Replacement merge: Default]
											[T -> arg2 : attribute "${java.vendor}" compose:Replacement merge: Default]
								[NT ->  : exec]
									[T -> dir : attribute "${cvs.dir}/${nbproject.path}" compose:Replacement merge: Default]
									[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
									[T -> failifexecutionfails : attribute "false" compose:Replacement merge: Default]
									[T -> failonerror : attribute "false" compose:Replacement merge: Default]
									[NT -> JAVA_HOME : env]
										[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
										[T -> value : attribute "${java.home}" compose:Replacement merge: Default]
										[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.target.clean}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.jdk.home}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.ignore.native}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.no.dependencies}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.dont.build.custom.tasks}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.custom.tasks.cls}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.custom.parameter}" compose:Replacement merge: Default]
						[NT -> -pre-clean : target]
							[T -> name : attribute "-pre-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-clean" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
						[NT -> -post-clean : target]
							[T -> name : attribute "-post-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-post-clean" compose:Replacement merge: Default]
						[NT -> checkout : target]
							[T -> depends : attribute "init,-pre-checkout,-checkout,-post-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "checkout" compose:Replacement merge: Default]
							[T -> name : attribute "checkout" compose:Replacement merge: Default]
						[NT -> .checkout : target]
							[T -> depends : attribute ".checkout-repository,.pre-checkout-copy,.checkout-copy,.post-checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[T -> todir : attribute "${cvs.dir}" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${translatedfiles.dir}" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> from : attribute "1" compose:Replacement merge: Default]
								[T -> property : attribute "i" compose:Replacement merge: Default]
								[T -> to : attribute "${sources.params.length}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.token" compose:Replacement merge: Default]
									[T -> source : attribute "sources.params.${i}.token" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.value" compose:Replacement merge: Default]
									[T -> source : attribute "sources.params.${i}.value" compose:Replacement merge: Default]
								[NT ->  : replace]
									[T -> dir : attribute "${cvs.dir}" compose:Replacement merge: Default]
									[T -> token : attribute "${current.token}" compose:Replacement merge: Default]
									[T -> value : attribute "${current.value}" compose:Replacement merge: Default]
						[NT -> .checkout-repository : target]
							[T -> if : attribute "do.checkout" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-repository" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-repository" compose:Replacement merge: Default]
							[NT ->  : cvs]
								[T -> command : attribute "checkout" compose:Replacement merge: Default]
								[T -> cvsroot : attribute "${cvs.root}" compose:Replacement merge: Default]
								[T -> date : attribute "${cvs.timestamp}" compose:Replacement merge: Default]
								[T -> dest : attribute "${work.dir}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[T -> package : attribute "${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
								[T -> tag : attribute "${cvs.branch}" compose:Replacement merge: Default]
							[NT ->  : cvs]
								[T -> command : attribute "checkout" compose:Replacement merge: Default]
								[T -> cvsroot : attribute "${cvs.root}" compose:Replacement merge: Default]
								[T -> date : attribute "${cvs.timestamp}" compose:Replacement merge: Default]
								[T -> dest : attribute "${work.dir}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[T -> package : attribute "${translatedfiles.module}/${translatedfiles.path}" compose:Replacement merge: Default]
								[T -> tag : attribute "${cvs.branch}" compose:Replacement merge: Default]
						[NT -> .checkout-copy : target]
							[T -> if : attribute "do.checkout.copy" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-copy" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${work.dir}/${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> todir : attribute "${work.dir}/${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
								[T -> verbose : attribute "true" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${sources.dir}/${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
									[NT -> **/*.* : include]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
									[NT -> **/nbproject/private/*.* : exclude]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
									[NT -> build/**/*.* : exclude]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
									[NT -> dist/**/*.* : exclude]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
									[NT -> **/CVS : exclude]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
									[NT -> **/.cvsignore : exclude]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[T -> todir : attribute "${translatedfiles.dir}" compose:Replacement merge: Default]
								[T -> verbose : attribute "true" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${sources.dir}/${translatedfiles.module}/${translatedfiles.path}" compose:Replacement merge: Default]
									[NT -> **/*.* : include]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
									[NT -> **/nbproject/private/*.* : exclude]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
									[NT -> build/**/*.* : exclude]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
									[NT -> dist/**/*.* : exclude]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
									[NT -> **/CVS : exclude]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
									[NT -> **/.cvsignore : exclude]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
						[NT -> .pre-checkout-copy : target]
							[T -> name : attribute ".pre-checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".pre-checkout-copy" compose:Replacement merge: Default]
						[NT -> .post-checkout-copy : target]
							[T -> name : attribute ".post-checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".post-checkout-copy" compose:Replacement merge: Default]
						[NT -> -pre-checkout : target]
							[T -> name : attribute "-pre-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-checkout" compose:Replacement merge: Default]
						[NT -> -checkout : target]
							[T -> depends : attribute ".checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-checkout" compose:Replacement merge: Default]
						[NT -> -post-checkout : target]
							[T -> name : attribute "-post-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-post-checkout" compose:Replacement merge: Default]
						[NT -> build : target]
							[T -> depends : attribute "init,-pre-build,-build,-post-build" compose:Replacement merge: Default]
							[T -> name : attribute "build" compose:Replacement merge: Default]
							[T -> name : attribute "build" compose:Replacement merge: Default]
						[NT -> .build : target]
							[T -> name : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute ".build" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> list : attribute "${native.platforms}" compose:Replacement merge: Default]
								[T -> property : attribute "platform" compose:Replacement merge: Default]
								[NT ->  : antcall]
									[T -> target : attribute ".build-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-nbproject" compose:Replacement merge: Default]
						[NT -> .build-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-jni" compose:Replacement merge: Default]
						[NT -> .build-jni : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-jni" compose:Replacement merge: Default]
							[T -> name : attribute ".build-jni" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "remote.host" compose:Replacement merge: Default]
								[T -> source : attribute "remote.host.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "remote.port" compose:Replacement merge: Default]
								[T -> source : attribute "remote.port.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "remote.user" compose:Replacement merge: Default]
								[T -> source : attribute "remote.user.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.native.dist.file" compose:Replacement merge: Default]
								[T -> source : attribute "native.dist.file.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.ssh.arguments" compose:Replacement merge: Default]
								[T -> source : attribute "ssh.arguments" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.ssh.command.clean" compose:Replacement merge: Default]
								[T -> source : attribute "ssh.command.clean" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.ssh.command.build" compose:Replacement merge: Default]
								[T -> source : attribute "ssh.command.build" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.arguments" compose:Replacement merge: Default]
								[T -> source : attribute "scp.arguments" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.remote.dir" compose:Replacement merge: Default]
								[T -> source : attribute "scp.remote.dir" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.local.dir" compose:Replacement merge: Default]
								[T -> source : attribute "scp.local.dir" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> executable : attribute "${ssh.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> line : attribute "${current.ssh.arguments}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.ssh.command.build}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${current.scp.local.dir}" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> executable : attribute "${scp.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> line : attribute "${current.scp.arguments}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.scp.remote.dir}/${current.native.dist.file}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.scp.local.dir}/${current.native.dist.file}" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> executable : attribute "${ssh.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> line : attribute "${current.ssh.arguments}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.ssh.command.clean}" compose:Replacement merge: Default]
						[NT -> .build-nbproject : target]
							[T -> if : attribute "do.build.nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".build-nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".build-nbproject" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> else : attribute "${nb.platform.home.macos}" compose:Replacement merge: Default]
								[T -> property : attribute "nb.jdk.home" compose:Replacement merge: Default]
								[T -> value : attribute "${nb.platform.home}" compose:Replacement merge: Default]
								[NT ->  : not]
									[NT ->  : equals]
										[T -> arg1 : attribute "Apple Inc." compose:Replacement merge: Default]
										[T -> arg2 : attribute "${java.vendor}" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> dir : attribute "${cvs.dir}/${nbproject.path}" compose:Replacement merge: Default]
								[T -> errorproperty : attribute "error.property" compose:Replacement merge: Default]
								[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
								[T -> failifexecutionfails : attribute "true" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT -> JAVA_HOME : env]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
									[T -> value : attribute "${java.home}" compose:Replacement merge: Default]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "clean" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "compile" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.jdk.home}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.ignore.native}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.no.dependencies}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.dont.build.custom.tasks}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.custom.tasks.cls}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.custom.parameter}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${nbproject.dist.dir}" compose:Replacement merge: Default]
							[NT ->  : jar]
								[T -> destfile : attribute "${nbproject.dist.dir}/${nbproject.dist.file.name}" compose:Replacement merge: Default]
								[T -> manifest : attribute "${cvs.dir}/${nbproject.path}/${nbproject.manifest}" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${cvs.dir}/${nbproject.path}/build/classes" compose:Replacement merge: Default]
									[NT -> **/*.* : include]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
						[NT -> -pre-build : target]
							[T -> name : attribute "-pre-build" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-build" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
						[NT -> -post-build : target]
							[T -> name : attribute "-post-build" compose:Replacement merge: Default]
							[T -> name : attribute "-post-build" compose:Replacement merge: Default]
						[NT -> release : target]
							[T -> depends : attribute "init,-pre-release,-release,-post-release" compose:Replacement merge: Default]
							[T -> name : attribute "release" compose:Replacement merge: Default]
							[T -> name : attribute "release" compose:Replacement merge: Default]
						[NT -> -pre-release : target]
							[T -> name : attribute "-pre-release" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-release" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
						[NT -> -post-release : target]
							[T -> name : attribute "-post-release" compose:Replacement merge: Default]
							[T -> name : attribute "-post-release" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This build script is a targets library and must not be used              directly.         " compose:Replacement merge: Default]
				[NT -> group.xml : XML-File]
					[NT -> group : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "group" compose:Replacement merge: Default]
						[T -> name : attribute "group" compose:Replacement merge: Default]
						[NT -> common.dir : property]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
							[T -> value : attribute "${basedir}" compose:Replacement merge: Default]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/common.properties" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/group.properties" compose:Replacement merge: Default]
						[NT ->  : import]
							[T -> file : attribute "common.xml" compose:Replacement merge: Default]
							[T -> optional : attribute "false" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[NT -> sizeof : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.SizeOf" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
							[NT -> md5 : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Md5" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
							[NT -> load-locales : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.LoadLocales" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
							[NT -> group-descriptor : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.GroupDescriptor" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "group-descriptor" compose:Replacement merge: Default]
								[T -> name : attribute "group-descriptor" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT -> release-package-server : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ReleasePackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT -> release-package-filesystem : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.registries.AddPackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> file : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> file : attribute "${group.icon}" compose:Replacement merge: Default]
								[T -> tofile : attribute "${package.dir}/${group.icon.path}" compose:Replacement merge: Default]
							[NT ->  : sizeof]
								[T -> file : attribute "${package.dir}/${group.icon.path}" compose:Replacement merge: Default]
								[T -> property : attribute "group.icon.size" compose:Replacement merge: Default]
							[NT ->  : md5]
								[T -> file : attribute "${package.dir}/${group.icon.path}" compose:Replacement merge: Default]
								[T -> property : attribute "group.icon.md5" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "group.icon.correct.uri" compose:Replacement merge: Default]
								[T -> value : attribute "${group.icon.uri}" compose:Replacement merge: Default]
							[NT ->  : load-locales]
								[T -> basename : attribute "${group.bundle}" compose:Replacement merge: Default]
								[T -> list : attribute "group.locales.list" compose:Replacement merge: Default]
							[NT ->  : group-descriptor]
								[T -> file : attribute "${package.dir}/${package.descriptor.path}" compose:Replacement merge: Default]
							[NT ->  : jar]
								[T -> basedir : attribute "${package.dir}" compose:Replacement merge: Default]
								[T -> compress : attribute "true" compose:Replacement merge: Default]
								[T -> destfile : attribute "${work.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : manifest]
									[NT -> Product-Descriptor : attribute]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
										[T -> value : attribute "${package.descriptor.path}" compose:Replacement merge: Default]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
							[NT ->  : move]
								[T -> file : attribute "${work.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[T -> todir : attribute "${dist.dir}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : signjar]
									[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
									[T -> jar : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
									[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
									[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
									[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Release URL is ${release.url}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-package-server]
									[T -> archive : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
									[T -> registry : attribute "${release.registry}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> url : attribute "${release.url}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Registry root is ${release.registry.dir}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-package-filesystem]
									[T -> archive : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
									[T -> root : attribute "${release.registry.dir}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This is the base build script for nbi group package and is not              intended to be called directly. In order to create a derivative              implementation script, see              ${basedir}/.templates/group-template.xml         " compose:Replacement merge: Default]
				[NT -> engine.xml : XML-File]
					[NT -> engine : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "engine" compose:Replacement merge: Default]
						[T -> name : attribute "engine" compose:Replacement merge: Default]
						[NT -> common.dir : property]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
							[T -> value : attribute "${basedir}" compose:Replacement merge: Default]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/common.properties" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/engine.properties" compose:Replacement merge: Default]
						[NT ->  : import]
							[T -> file : attribute "common.xml" compose:Replacement merge: Default]
							[T -> optional : attribute "false" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT -> release-engine-server : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ReleaseEngine" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-server" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-server" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT -> release-engine-filesystem : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.registries.UpdateEngine" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-filesystem" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-filesystem" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> file : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
						[NT -> .clean-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-jni" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-launcher" compose:Replacement merge: Default]
						[NT -> .clean-launcher : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-launcher" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-launcher" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> file : attribute "${nbproject.dist.file}" compose:Replacement merge: Default]
								[T -> todir : attribute "${dist.dir}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : signjar]
									[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
									[T -> jar : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
									[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
									[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
									[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
						[NT -> .build-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-jni" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-launcher" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-cleaner" compose:Replacement merge: Default]
						[NT -> .build-launcher : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-launcher" compose:Replacement merge: Default]
							[T -> name : attribute ".build-launcher" compose:Replacement merge: Default]
						[NT -> .build-cleaner : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-cleaner" compose:Replacement merge: Default]
							[T -> name : attribute ".build-cleaner" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Release URL is ${release.url}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-engine-server]
									[T -> archive : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
									[T -> url : attribute "${release.url}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Registry root is ${release.registry.dir}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-engine-filesystem]
									[T -> archive : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
									[T -> root : attribute "${release.registry.dir}" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This is the base build script for nbi engine and is not intended to             be called directly. In order to create a derivative implementation              script, see              ${basedir}/.templates/engine-template.xml         " compose:Replacement merge: Default]
				[NT -> product.xml : XML-File]
					[NT -> product : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "product" compose:Replacement merge: Default]
						[T -> name : attribute "product" compose:Replacement merge: Default]
						[NT -> common.dir : property]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
							[T -> value : attribute "${basedir}" compose:Replacement merge: Default]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/common.properties" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/product.properties" compose:Replacement merge: Default]
						[NT ->  : import]
							[T -> file : attribute "common.xml" compose:Replacement merge: Default]
							[T -> optional : attribute "false" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[NT -> sizeof : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.SizeOf" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
							[NT -> md5 : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Md5" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
							[NT -> sum : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Sum" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "sum" compose:Replacement merge: Default]
								[T -> name : attribute "sum" compose:Replacement merge: Default]
							[NT -> package : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Package" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "package" compose:Replacement merge: Default]
								[T -> name : attribute "package" compose:Replacement merge: Default]
							[NT -> load-locales : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.LoadLocales" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
							[NT -> product-descriptor : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ProductDescriptor" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "product-descriptor" compose:Replacement merge: Default]
								[T -> name : attribute "product-descriptor" compose:Replacement merge: Default]
							[NT -> absolutize : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Absolutize" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "absolutize" compose:Replacement merge: Default]
								[T -> name : attribute "absolutize" compose:Replacement merge: Default]
							[NT -> uri-to-path : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.UriToPath" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "uri-to-path" compose:Replacement merge: Default]
								[T -> name : attribute "uri-to-path" compose:Replacement merge: Default]
							[NT -> n-unzip : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.NativeUnzip" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "n-unzip" compose:Replacement merge: Default]
								[T -> name : attribute "n-unzip" compose:Replacement merge: Default]
							[NT -> n-untar : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.NativeUntar" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "n-untar" compose:Replacement merge: Default]
								[T -> name : attribute "n-untar" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT -> release-package-server : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ReleasePackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT -> release-package-filesystem : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.registries.AddPackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.build.engine" compose:Replacement merge: Default]
								[NT ->  : equals]
									[T -> arg1 : attribute "${build.engine}" compose:Replacement merge: Default]
									[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : absolutize]
								[T -> property : attribute "engine.work.dir" compose:Replacement merge: Default]
							[NT ->  : absolutize]
								[T -> property : attribute "engine.dist.dir" compose:Replacement merge: Default]
							[NT ->  : absolutize]
								[T -> property : attribute "engine.dist.file" compose:Replacement merge: Default]
							[NT -> nb.custom.parameter : property]
								[T -> name : attribute "nb.custom.parameter" compose:Replacement merge: Default]
								[T -> value : attribute "-Djavac.classpath=${engine.dist.file}" compose:Replacement merge: Default]
								[T -> name : attribute "nb.custom.parameter" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute "-clean-engine,.clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> file : attribute "${dist.dir}/${product.dist.file.name}" compose:Replacement merge: Default]
						[NT -> -clean-engine : target]
							[T -> depends : attribute "init" compose:Replacement merge: Default]
							[T -> if : attribute "do.build.engine" compose:Replacement merge: Default]
							[T -> name : attribute "-clean-engine" compose:Replacement merge: Default]
							[T -> name : attribute "-clean-engine" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> dir : attribute "${engine.dir}" compose:Replacement merge: Default]
								[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[NT -> JAVA_HOME : env]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
									[T -> value : attribute "${java.home}" compose:Replacement merge: Default]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "clean" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dwork.dir=${engine.work.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddist.dir=${engine.dist.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dbuild.native=false" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddont.build.custom.tasks=true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dcustom.tasks.cls=${custom.tasks.cls}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dengine.dist.file.name=${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Denvironment.properties=${environment.properties}" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute "-build-engine,.build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.disk.space" compose:Replacement merge: Default]
								[T -> value : attribute "${product.disk.space.modificator}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.logic.dir" compose:Replacement merge: Default]
								[T -> value : attribute "${package.dir}/${product.logic.path}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.data.dir" compose:Replacement merge: Default]
								[T -> value : attribute "${package.dir}/${product.data.path}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${packaged.data.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${downloads.cache.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${product.logic.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${product.data.dir}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "build.nbproject" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "i" compose:Replacement merge: Default]
									[T -> value : attribute "1" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.logic.dir}/${product.logic.file.name}" compose:Replacement merge: Default]
								[NT ->  : copy]
									[T -> file : attribute "${nbproject.dist.dir}/${nbproject.dist.file.name}" compose:Replacement merge: Default]
									[T -> tofile : attribute "${current.file}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : signjar]
										[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
										[T -> jar : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
										[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
										[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
								[NT ->  : sizeof]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.size" compose:Replacement merge: Default]
								[NT ->  : md5]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.md5" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "product.logic.${i}.correct.uri" compose:Replacement merge: Default]
									[T -> value : attribute "resource:${product.logic.path}/${product.logic.file.name}" compose:Replacement merge: Default]
								[NT -> start.index : property]
									[T -> name : attribute "start.index" compose:Replacement merge: Default]
									[T -> value : attribute "2" compose:Replacement merge: Default]
									[T -> name : attribute "start.index" compose:Replacement merge: Default]
							[NT -> start.index : property]
								[T -> name : attribute "start.index" compose:Replacement merge: Default]
								[T -> value : attribute "1" compose:Replacement merge: Default]
								[T -> name : attribute "start.index" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> from : attribute "${start.index}" compose:Replacement merge: Default]
								[T -> property : attribute "i" compose:Replacement merge: Default]
								[T -> to : attribute "${product.logic.length}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.logic.dir}/${product.logic.file.name}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> else : attribute "false" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.is.local" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : isset]
										[T -> property : attribute "product.logic.${i}.path" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.logic.${i}.is.local" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.uri" compose:Replacement merge: Default]
										[T -> source : attribute "product.logic.${i}.uri" compose:Replacement merge: Default]
									[NT ->  : get]
										[T -> dest : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> src : attribute "${current.uri}" compose:Replacement merge: Default]
										[T -> usetimestamp : attribute "true" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.logic.${i}.is.local" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.path" compose:Replacement merge: Default]
										[T -> source : attribute "product.logic.${i}.path" compose:Replacement merge: Default]
									[NT ->  : copy]
										[T -> file : attribute "${current.path}" compose:Replacement merge: Default]
										[T -> preservelastmodified : attribute "true" compose:Replacement merge: Default]
										[T -> tofile : attribute "${current.file}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : signjar]
										[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
										[T -> jar : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
										[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
										[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
								[NT ->  : sizeof]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.size" compose:Replacement merge: Default]
								[NT ->  : md5]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.md5" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "product.logic.${i}.correct.uri" compose:Replacement merge: Default]
									[T -> value : attribute "resource:${product.logic.path}/${product.logic.file.name}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.product.data.length" compose:Replacement merge: Default]
								[T -> value : attribute "${product.data.length}" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> from : attribute "1" compose:Replacement merge: Default]
								[T -> property : attribute "i" compose:Replacement merge: Default]
								[T -> to : attribute "${current.product.data.length}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.zip" compose:Replacement merge: Default]
									[T -> value : attribute "${product.data.${i}.zip}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> else : attribute "false" compose:Replacement merge: Default]
									[T -> property : attribute "product.tar.${i}.is.set" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : isset]
										[T -> property : attribute "product.data.${i}.tar" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.tar.${i}.is.set" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.tar" compose:Replacement merge: Default]
										[T -> value : attribute "${product.data.${i}.tar}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.tar.${i}.is.set" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.tar" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.data.dir}/${product.data.file.name}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.temp.dir" compose:Replacement merge: Default]
									[T -> value : attribute "${work.dir}/temp" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.packaged.data.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.packaged.data.file}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.packaged.data.properties.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.packaged.data.properties.file}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : or]
										[NT ->  : equals]
											[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
											[T -> arg2 : attribute "true" compose:Replacement merge: Default]
										[NT ->  : and]
											[NT ->  : equals]
												[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
												[T -> arg2 : attribute "default" compose:Replacement merge: Default]
											[NT ->  : not]
												[NT ->  : and]
													[NT ->  : available]
														[T -> file : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
													[NT ->  : available]
														[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : or]
										[NT ->  : equals]
											[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
											[T -> arg2 : attribute "false" compose:Replacement merge: Default]
										[NT ->  : and]
											[NT ->  : equals]
												[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
												[T -> arg2 : attribute "default" compose:Replacement merge: Default]
											[NT ->  : available]
												[T -> file : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
											[NT ->  : available]
												[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : condition]
										[T -> else : attribute "false" compose:Replacement merge: Default]
										[T -> property : attribute "product.data.${i}.is.local" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : isset]
											[T -> property : attribute "product.data.${i}.path" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "product.data.${i}.is.local" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.uri" compose:Replacement merge: Default]
											[T -> source : attribute "product.data.${i}.uri" compose:Replacement merge: Default]
										[NT ->  : uri-to-path]
											[T -> property : attribute "current.downloaded.path" compose:Replacement merge: Default]
											[T -> uri : attribute "${current.uri}" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.download" compose:Replacement merge: Default]
											[T -> value : attribute "${downloads.cache.dir}/${current.downloaded.path}" compose:Replacement merge: Default]
										[NT ->  : dirname]
											[T -> file : attribute "${current.download}" compose:Replacement merge: Default]
											[T -> property : attribute "current.download.${i}.dir" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.download.dir" compose:Replacement merge: Default]
											[T -> source : attribute "current.download.${i}.dir" compose:Replacement merge: Default]
										[NT ->  : mkdir]
											[T -> dir : attribute "${current.download.dir}" compose:Replacement merge: Default]
										[NT ->  : get]
											[T -> dest : attribute "${current.download}" compose:Replacement merge: Default]
											[T -> src : attribute "${current.uri}" compose:Replacement merge: Default]
											[T -> usetimestamp : attribute "true" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "product.data.${i}.is.local" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.download" compose:Replacement merge: Default]
											[T -> source : attribute "product.data.${i}.path" compose:Replacement merge: Default]
									[NT ->  : mkdir]
										[T -> dir : attribute "${current.temp.dir}" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "current.zip" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : n-unzip]
											[T -> dest : attribute "${current.temp.dir}" compose:Replacement merge: Default]
											[T -> src : attribute "${current.download}" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "current.tar" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : n-untar]
											[T -> dest : attribute "${current.temp.dir}" compose:Replacement merge: Default]
											[T -> src : attribute "${current.download}" compose:Replacement merge: Default]
									[NT ->  : condition]
										[T -> property : attribute "do.copy.data.${i}" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : and]
											[NT ->  : not]
												[NT ->  : equals]
													[T -> arg1 : attribute "${current.zip}" compose:Replacement merge: Default]
													[T -> arg2 : attribute "true" compose:Replacement merge: Default]
											[NT ->  : not]
												[NT ->  : equals]
													[T -> arg1 : attribute "${current.tar}" compose:Replacement merge: Default]
													[T -> arg2 : attribute "true" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "do.copy.data.${i}" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : copy]
											[T -> file : attribute "${current.download}" compose:Replacement merge: Default]
											[T -> todir : attribute "${current.temp.dir}" compose:Replacement merge: Default]
									[NT ->  : antcall]
										[T -> target : attribute "-pre-package" compose:Replacement merge: Default]
										[NT -> i : param]
											[T -> name : attribute "i" compose:Replacement merge: Default]
											[T -> value : attribute "${i}" compose:Replacement merge: Default]
											[T -> name : attribute "i" compose:Replacement merge: Default]
										[NT -> data.directory : param]
											[T -> name : attribute "data.directory" compose:Replacement merge: Default]
											[T -> value : attribute "${current.temp.dir}" compose:Replacement merge: Default]
											[T -> name : attribute "data.directory" compose:Replacement merge: Default]
									[NT ->  : sizeof]
										[T -> file : attribute "${current.temp.dir}" compose:Replacement merge: Default]
										[T -> property : attribute "current.disk.space" compose:Replacement merge: Default]
									[NT ->  : sum]
										[T -> arg1 : attribute "${product.disk.space}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "${current.disk.space}" compose:Replacement merge: Default]
										[T -> property : attribute "product.disk.space" compose:Replacement merge: Default]
									[NT ->  : package]
										[T -> directory : attribute "${current.temp.dir}" compose:Replacement merge: Default]
										[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "release.packaged.data" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : mkdir]
											[T -> dir : attribute "${packaged.data.dir}" compose:Replacement merge: Default]
										[NT ->  : copy]
											[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
											[T -> tofile : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
										[NT ->  : echo]
											[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
											[T -> message : attribute "product.data.${i}.size=${current.disk.space}" compose:Replacement merge: Default]
									[NT ->  : delete]
										[T -> dir : attribute "${current.temp.dir}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : copy]
										[T -> file : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
										[T -> tofile : attribute "${current.file}" compose:Replacement merge: Default]
									[NT ->  : property]
										[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.disk.space" compose:Replacement merge: Default]
										[T -> source : attribute "product.data.${i}.size" compose:Replacement merge: Default]
									[NT ->  : sum]
										[T -> arg1 : attribute "${product.disk.space}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "${current.disk.space}" compose:Replacement merge: Default]
										[T -> property : attribute "product.disk.space" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : signjar]
										[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
										[T -> jar : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
										[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
										[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
								[NT ->  : sizeof]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.data.${i}.size" compose:Replacement merge: Default]
								[NT ->  : md5]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.data.${i}.md5" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "product.data.${i}.correct.uri" compose:Replacement merge: Default]
									[T -> value : attribute "resource:${product.data.path}/${product.data.file.name}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.icon.file" compose:Replacement merge: Default]
								[T -> value : attribute "${package.dir}/${product.icon.path}" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> file : attribute "${product.icon}" compose:Replacement merge: Default]
								[T -> tofile : attribute "${product.icon.file}" compose:Replacement merge: Default]
							[NT ->  : sizeof]
								[T -> file : attribute "${product.icon.file}" compose:Replacement merge: Default]
								[T -> property : attribute "product.icon.size" compose:Replacement merge: Default]
							[NT ->  : md5]
								[T -> file : attribute "${product.icon.file}" compose:Replacement merge: Default]
								[T -> property : attribute "product.icon.md5" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.icon.correct.uri" compose:Replacement merge: Default]
								[T -> value : attribute "${product.icon.uri}" compose:Replacement merge: Default]
							[NT ->  : load-locales]
								[T -> basename : attribute "${product.bundle}" compose:Replacement merge: Default]
								[T -> list : attribute "product.locales.list" compose:Replacement merge: Default]
							[NT ->  : product-descriptor]
								[T -> file : attribute "${package.dir}/${package.descriptor.path}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.dist.file" compose:Replacement merge: Default]
								[T -> value : attribute "${dist.dir}/${product.dist.file.name}" compose:Replacement merge: Default]
							[NT ->  : jar]
								[T -> basedir : attribute "${package.dir}" compose:Replacement merge: Default]
								[T -> compress : attribute "true" compose:Replacement merge: Default]
								[T -> destfile : attribute "${product.dist.file}" compose:Replacement merge: Default]
								[NT ->  : manifest]
									[NT -> Product-Descriptor : attribute]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
										[T -> value : attribute "${package.descriptor.path}" compose:Replacement merge: Default]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : signjar]
									[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
									[T -> jar : attribute "${product.dist.file}" compose:Replacement merge: Default]
									[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
									[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
									[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
						[NT -> -build-engine : target]
							[T -> depends : attribute "init" compose:Replacement merge: Default]
							[T -> if : attribute "do.build.engine" compose:Replacement merge: Default]
							[T -> name : attribute "-build-engine" compose:Replacement merge: Default]
							[T -> name : attribute "-build-engine" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> dir : attribute "${engine.dir}" compose:Replacement merge: Default]
								[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
								[T -> failifexecutionfails : attribute "true" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "checkout,build" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dwork.dir=${engine.work.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddist.dir=${engine.dist.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dbuild.native=false" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddont.build.custom.tasks=true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dcustom.tasks.cls=${custom.tasks.cls}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dengine.dist.file.name=${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Denvironment.properties=${environment.properties}" compose:Replacement merge: Default]
						[NT -> -pre-package : target]
							[T -> name : attribute "-pre-package" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-package" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Release URL is ${release.url}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${product.dist.file}" compose:Replacement merge: Default]
								[NT ->  : release-package-server]
									[T -> archive : attribute "${product.dist.file}" compose:Replacement merge: Default]
									[T -> platforms : attribute "${product.platforms}" compose:Replacement merge: Default]
									[T -> registry : attribute "${release.registry}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> url : attribute "${release.url}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Registry root is ${release.registry.dir}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${product.dist.file}" compose:Replacement merge: Default]
								[NT ->  : release-package-filesystem]
									[T -> archive : attribute "${product.dist.file}" compose:Replacement merge: Default]
									[T -> platforms : attribute "${product.platforms}" compose:Replacement merge: Default]
									[T -> root : attribute "${release.registry.dir}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This is the base build script for nbi product package and is not              intended to be called directly. In order to create a derivative              implementation script, see              ${basedir}/.templates/product-template.xml         " compose:Replacement merge: Default]
[NT -> base : Feature]
	[NT -> sdk : Folder]
		[NT -> nbi : Folder]
			[NT -> .common : Folder]
				[NT -> common.xml : XML-File]
					[NT -> common : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "common" compose:Replacement merge: Default]
						[T -> name : attribute "common" compose:Replacement merge: Default]
						[NT -> clean-all : target]
							[T -> depends : attribute "clean" compose:Replacement merge: Default]
							[T -> name : attribute "clean-all" compose:Replacement merge: Default]
							[T -> name : attribute "clean-all" compose:Replacement merge: Default]
						[NT -> build-all : target]
							[T -> depends : attribute "clean-all,checkout,build" compose:Replacement merge: Default]
							[T -> name : attribute "build-all" compose:Replacement merge: Default]
							[T -> name : attribute "build-all" compose:Replacement merge: Default]
						[NT -> release-all : target]
							[T -> depends : attribute "build-all,release" compose:Replacement merge: Default]
							[T -> name : attribute "release-all" compose:Replacement merge: Default]
							[T -> name : attribute "release-all" compose:Replacement merge: Default]
						[NT -> init : target]
							[T -> depends : attribute "-pre-init,-init,-post-init" compose:Replacement merge: Default]
							[T -> name : attribute "init" compose:Replacement merge: Default]
							[T -> name : attribute "init" compose:Replacement merge: Default]
						[NT -> .init : target]
							[T -> depends : attribute ".build-custom-tasks" compose:Replacement merge: Default]
							[T -> name : attribute ".init" compose:Replacement merge: Default]
							[T -> unless : attribute "skip.initialization" compose:Replacement merge: Default]
							[T -> name : attribute ".init" compose:Replacement merge: Default]
							[NT -> for-each : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ForEach" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "for-each" compose:Replacement merge: Default]
								[T -> name : attribute "for-each" compose:Replacement merge: Default]
							[NT -> set : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.SetProperty" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "set" compose:Replacement merge: Default]
								[T -> name : attribute "set" compose:Replacement merge: Default]
							[NT -> if : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.If" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "if" compose:Replacement merge: Default]
								[T -> name : attribute "if" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.checkout" compose:Replacement merge: Default]
								[NT ->  : and]
									[NT ->  : equals]
										[T -> arg1 : attribute "${checkout.sources}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.checkout.copy" compose:Replacement merge: Default]
								[NT ->  : not]
									[NT ->  : equals]
										[T -> arg1 : attribute "${checkout.sources}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.build.native" compose:Replacement merge: Default]
								[NT ->  : equals]
									[T -> arg1 : attribute "${build.native}" compose:Replacement merge: Default]
									[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.build.nbproject" compose:Replacement merge: Default]
								[NT ->  : equals]
									[T -> arg1 : attribute "${build.nbproject}" compose:Replacement merge: Default]
									[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "ant.executable" compose:Replacement merge: Default]
								[T -> value : attribute "${ant.home}/bin/ant.bat" compose:Replacement merge: Default]
								[NT ->  : os]
									[T -> family : attribute "windows" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "ant.executable" compose:Replacement merge: Default]
								[T -> value : attribute "${ant.home}/bin/ant" compose:Replacement merge: Default]
								[NT ->  : not]
									[NT ->  : os]
										[T -> family : attribute "windows" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${work.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${dist.dir}" compose:Replacement merge: Default]
							[NT -> skip.initialization : property]
								[T -> name : attribute "skip.initialization" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[T -> name : attribute "skip.initialization" compose:Replacement merge: Default]
						[NT -> .build-custom-tasks : target]
							[T -> name : attribute ".build-custom-tasks" compose:Replacement merge: Default]
							[T -> unless : attribute "dont.build.custom.tasks" compose:Replacement merge: Default]
							[T -> name : attribute ".build-custom-tasks" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> dir : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
							[NT ->  : javac]
								[T -> debug : attribute "true" compose:Replacement merge: Default]
								[T -> destdir : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> srcdir : attribute "${custom.tasks.src}" compose:Replacement merge: Default]
							[NT -> dont.build.custom.tasks : property]
								[T -> name : attribute "dont.build.custom.tasks" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[T -> name : attribute "dont.build.custom.tasks" compose:Replacement merge: Default]
						[NT -> -pre-init : target]
							[T -> name : attribute "-pre-init" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-init" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
						[NT -> -post-init : target]
							[T -> name : attribute "-post-init" compose:Replacement merge: Default]
							[T -> name : attribute "-post-init" compose:Replacement merge: Default]
						[NT -> clean : target]
							[T -> depends : attribute "init,-pre-clean,-clean,-post-clean" compose:Replacement merge: Default]
							[T -> name : attribute "clean" compose:Replacement merge: Default]
							[T -> name : attribute "clean" compose:Replacement merge: Default]
						[NT -> .clean : target]
							[T -> name : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute ".clean" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> list : attribute "${native.platforms}" compose:Replacement merge: Default]
								[T -> property : attribute "platform" compose:Replacement merge: Default]
								[NT ->  : antcall]
									[T -> target : attribute ".clean-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-nbproject" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> dir : attribute "${work.dir}" compose:Replacement merge: Default]
								[T -> includeemptydirs : attribute "true" compose:Replacement merge: Default]
						[NT -> .clean-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-jni" compose:Replacement merge: Default]
						[NT -> .clean-jni : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-jni" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-jni" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.local.dir" compose:Replacement merge: Default]
								[T -> source : attribute "scp.local.dir" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.native.dist.file" compose:Replacement merge: Default]
								[T -> source : attribute "native.dist.file.${platform}" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> dir : attribute "${scp.local.dir}/${current.native.dist.file}" compose:Replacement merge: Default]
						[NT -> .clean-nbproject : target]
							[T -> if : attribute "do.build.nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-nbproject" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "nbproject.exists" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : available]
									[T -> file : attribute "${cvs.dir}/${nbproject.path}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "nbproject.exists" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> else : attribute "${nb.platform.home.macos}" compose:Replacement merge: Default]
									[T -> property : attribute "nb.jdk.home" compose:Replacement merge: Default]
									[T -> value : attribute "${nb.platform.home}" compose:Replacement merge: Default]
									[NT ->  : not]
										[NT ->  : equals]
											[T -> arg1 : attribute "Apple Inc." compose:Replacement merge: Default]
											[T -> arg2 : attribute "${java.vendor}" compose:Replacement merge: Default]
								[NT ->  : exec]
									[T -> dir : attribute "${cvs.dir}/${nbproject.path}" compose:Replacement merge: Default]
									[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
									[T -> failifexecutionfails : attribute "false" compose:Replacement merge: Default]
									[T -> failonerror : attribute "false" compose:Replacement merge: Default]
									[NT -> JAVA_HOME : env]
										[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
										[T -> value : attribute "${java.home}" compose:Replacement merge: Default]
										[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.target.clean}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.jdk.home}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.ignore.native}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.no.dependencies}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.dont.build.custom.tasks}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.custom.tasks.cls}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.custom.parameter}" compose:Replacement merge: Default]
						[NT -> -pre-clean : target]
							[T -> name : attribute "-pre-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-clean" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
						[NT -> -post-clean : target]
							[T -> name : attribute "-post-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-post-clean" compose:Replacement merge: Default]
						[NT -> checkout : target]
							[T -> depends : attribute "init,-pre-checkout,-checkout,-post-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "checkout" compose:Replacement merge: Default]
							[T -> name : attribute "checkout" compose:Replacement merge: Default]
						[NT -> .checkout : target]
							[T -> depends : attribute ".checkout-repository,.pre-checkout-copy,.checkout-copy,.post-checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[T -> todir : attribute "${cvs.dir}" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${translatedfiles.dir}" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> from : attribute "1" compose:Replacement merge: Default]
								[T -> property : attribute "i" compose:Replacement merge: Default]
								[T -> to : attribute "${sources.params.length}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.token" compose:Replacement merge: Default]
									[T -> source : attribute "sources.params.${i}.token" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.value" compose:Replacement merge: Default]
									[T -> source : attribute "sources.params.${i}.value" compose:Replacement merge: Default]
								[NT ->  : replace]
									[T -> dir : attribute "${cvs.dir}" compose:Replacement merge: Default]
									[T -> token : attribute "${current.token}" compose:Replacement merge: Default]
									[T -> value : attribute "${current.value}" compose:Replacement merge: Default]
						[NT -> .checkout-repository : target]
							[T -> if : attribute "do.checkout" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-repository" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-repository" compose:Replacement merge: Default]
							[NT ->  : cvs]
								[T -> command : attribute "checkout" compose:Replacement merge: Default]
								[T -> cvsroot : attribute "${cvs.root}" compose:Replacement merge: Default]
								[T -> date : attribute "${cvs.timestamp}" compose:Replacement merge: Default]
								[T -> dest : attribute "${work.dir}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[T -> package : attribute "${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
								[T -> tag : attribute "${cvs.branch}" compose:Replacement merge: Default]
							[NT ->  : cvs]
								[T -> command : attribute "checkout" compose:Replacement merge: Default]
								[T -> cvsroot : attribute "${cvs.root}" compose:Replacement merge: Default]
								[T -> date : attribute "${cvs.timestamp}" compose:Replacement merge: Default]
								[T -> dest : attribute "${work.dir}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[T -> package : attribute "${translatedfiles.module}/${translatedfiles.path}" compose:Replacement merge: Default]
								[T -> tag : attribute "${cvs.branch}" compose:Replacement merge: Default]
						[NT -> .checkout-copy : target]
							[T -> if : attribute "do.checkout.copy" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-copy" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${work.dir}/${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> todir : attribute "${work.dir}/${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
								[T -> verbose : attribute "true" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${sources.dir}/${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
									[NT -> **/*.* : include]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
									[NT -> **/nbproject/private/*.* : exclude]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
									[NT -> build/**/*.* : exclude]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
									[NT -> dist/**/*.* : exclude]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
									[NT -> **/CVS : exclude]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
									[NT -> **/.cvsignore : exclude]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[T -> todir : attribute "${translatedfiles.dir}" compose:Replacement merge: Default]
								[T -> verbose : attribute "true" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${sources.dir}/${translatedfiles.module}/${translatedfiles.path}" compose:Replacement merge: Default]
									[NT -> **/*.* : include]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
									[NT -> **/nbproject/private/*.* : exclude]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
									[NT -> build/**/*.* : exclude]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
									[NT -> dist/**/*.* : exclude]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
									[NT -> **/CVS : exclude]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
									[NT -> **/.cvsignore : exclude]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
						[NT -> .pre-checkout-copy : target]
							[T -> name : attribute ".pre-checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".pre-checkout-copy" compose:Replacement merge: Default]
						[NT -> .post-checkout-copy : target]
							[T -> name : attribute ".post-checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".post-checkout-copy" compose:Replacement merge: Default]
						[NT -> -pre-checkout : target]
							[T -> name : attribute "-pre-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-checkout" compose:Replacement merge: Default]
						[NT -> -checkout : target]
							[T -> depends : attribute ".checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-checkout" compose:Replacement merge: Default]
						[NT -> -post-checkout : target]
							[T -> name : attribute "-post-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-post-checkout" compose:Replacement merge: Default]
						[NT -> build : target]
							[T -> depends : attribute "init,-pre-build,-build,-post-build" compose:Replacement merge: Default]
							[T -> name : attribute "build" compose:Replacement merge: Default]
							[T -> name : attribute "build" compose:Replacement merge: Default]
						[NT -> .build : target]
							[T -> name : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute ".build" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> list : attribute "${native.platforms}" compose:Replacement merge: Default]
								[T -> property : attribute "platform" compose:Replacement merge: Default]
								[NT ->  : antcall]
									[T -> target : attribute ".build-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-nbproject" compose:Replacement merge: Default]
						[NT -> .build-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-jni" compose:Replacement merge: Default]
						[NT -> .build-jni : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-jni" compose:Replacement merge: Default]
							[T -> name : attribute ".build-jni" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "remote.host" compose:Replacement merge: Default]
								[T -> source : attribute "remote.host.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "remote.port" compose:Replacement merge: Default]
								[T -> source : attribute "remote.port.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "remote.user" compose:Replacement merge: Default]
								[T -> source : attribute "remote.user.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.native.dist.file" compose:Replacement merge: Default]
								[T -> source : attribute "native.dist.file.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.ssh.arguments" compose:Replacement merge: Default]
								[T -> source : attribute "ssh.arguments" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.ssh.command.clean" compose:Replacement merge: Default]
								[T -> source : attribute "ssh.command.clean" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.ssh.command.build" compose:Replacement merge: Default]
								[T -> source : attribute "ssh.command.build" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.arguments" compose:Replacement merge: Default]
								[T -> source : attribute "scp.arguments" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.remote.dir" compose:Replacement merge: Default]
								[T -> source : attribute "scp.remote.dir" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.local.dir" compose:Replacement merge: Default]
								[T -> source : attribute "scp.local.dir" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> executable : attribute "${ssh.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> line : attribute "${current.ssh.arguments}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.ssh.command.build}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${current.scp.local.dir}" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> executable : attribute "${scp.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> line : attribute "${current.scp.arguments}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.scp.remote.dir}/${current.native.dist.file}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.scp.local.dir}/${current.native.dist.file}" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> executable : attribute "${ssh.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> line : attribute "${current.ssh.arguments}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.ssh.command.clean}" compose:Replacement merge: Default]
						[NT -> .build-nbproject : target]
							[T -> if : attribute "do.build.nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".build-nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".build-nbproject" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> else : attribute "${nb.platform.home.macos}" compose:Replacement merge: Default]
								[T -> property : attribute "nb.jdk.home" compose:Replacement merge: Default]
								[T -> value : attribute "${nb.platform.home}" compose:Replacement merge: Default]
								[NT ->  : not]
									[NT ->  : equals]
										[T -> arg1 : attribute "Apple Inc." compose:Replacement merge: Default]
										[T -> arg2 : attribute "${java.vendor}" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> dir : attribute "${cvs.dir}/${nbproject.path}" compose:Replacement merge: Default]
								[T -> errorproperty : attribute "error.property" compose:Replacement merge: Default]
								[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
								[T -> failifexecutionfails : attribute "true" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT -> JAVA_HOME : env]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
									[T -> value : attribute "${java.home}" compose:Replacement merge: Default]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "clean" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "compile" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.jdk.home}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.ignore.native}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.no.dependencies}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.dont.build.custom.tasks}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.custom.tasks.cls}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.custom.parameter}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${nbproject.dist.dir}" compose:Replacement merge: Default]
							[NT ->  : jar]
								[T -> destfile : attribute "${nbproject.dist.dir}/${nbproject.dist.file.name}" compose:Replacement merge: Default]
								[T -> manifest : attribute "${cvs.dir}/${nbproject.path}/${nbproject.manifest}" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${cvs.dir}/${nbproject.path}/build/classes" compose:Replacement merge: Default]
									[NT -> **/*.* : include]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
						[NT -> -pre-build : target]
							[T -> name : attribute "-pre-build" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-build" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
						[NT -> -post-build : target]
							[T -> name : attribute "-post-build" compose:Replacement merge: Default]
							[T -> name : attribute "-post-build" compose:Replacement merge: Default]
						[NT -> release : target]
							[T -> depends : attribute "init,-pre-release,-release,-post-release" compose:Replacement merge: Default]
							[T -> name : attribute "release" compose:Replacement merge: Default]
							[T -> name : attribute "release" compose:Replacement merge: Default]
						[NT -> -pre-release : target]
							[T -> name : attribute "-pre-release" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-release" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
						[NT -> -post-release : target]
							[T -> name : attribute "-post-release" compose:Replacement merge: Default]
							[T -> name : attribute "-post-release" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This build script is a targets library and must not be used              directly.         " compose:Replacement merge: Default]
				[NT -> group.xml : XML-File]
					[NT -> group : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "group" compose:Replacement merge: Default]
						[T -> name : attribute "group" compose:Replacement merge: Default]
						[NT -> common.dir : property]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
							[T -> value : attribute "${basedir}" compose:Replacement merge: Default]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/common.properties" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/group.properties" compose:Replacement merge: Default]
						[NT ->  : import]
							[T -> file : attribute "common.xml" compose:Replacement merge: Default]
							[T -> optional : attribute "false" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[NT -> sizeof : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.SizeOf" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
							[NT -> md5 : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Md5" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
							[NT -> load-locales : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.LoadLocales" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
							[NT -> group-descriptor : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.GroupDescriptor" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "group-descriptor" compose:Replacement merge: Default]
								[T -> name : attribute "group-descriptor" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT -> release-package-server : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ReleasePackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT -> release-package-filesystem : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.registries.AddPackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> file : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> file : attribute "${group.icon}" compose:Replacement merge: Default]
								[T -> tofile : attribute "${package.dir}/${group.icon.path}" compose:Replacement merge: Default]
							[NT ->  : sizeof]
								[T -> file : attribute "${package.dir}/${group.icon.path}" compose:Replacement merge: Default]
								[T -> property : attribute "group.icon.size" compose:Replacement merge: Default]
							[NT ->  : md5]
								[T -> file : attribute "${package.dir}/${group.icon.path}" compose:Replacement merge: Default]
								[T -> property : attribute "group.icon.md5" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "group.icon.correct.uri" compose:Replacement merge: Default]
								[T -> value : attribute "${group.icon.uri}" compose:Replacement merge: Default]
							[NT ->  : load-locales]
								[T -> basename : attribute "${group.bundle}" compose:Replacement merge: Default]
								[T -> list : attribute "group.locales.list" compose:Replacement merge: Default]
							[NT ->  : group-descriptor]
								[T -> file : attribute "${package.dir}/${package.descriptor.path}" compose:Replacement merge: Default]
							[NT ->  : jar]
								[T -> basedir : attribute "${package.dir}" compose:Replacement merge: Default]
								[T -> compress : attribute "true" compose:Replacement merge: Default]
								[T -> destfile : attribute "${work.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : manifest]
									[NT -> Product-Descriptor : attribute]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
										[T -> value : attribute "${package.descriptor.path}" compose:Replacement merge: Default]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
							[NT ->  : move]
								[T -> file : attribute "${work.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[T -> todir : attribute "${dist.dir}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : signjar]
									[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
									[T -> jar : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
									[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
									[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
									[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Release URL is ${release.url}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-package-server]
									[T -> archive : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
									[T -> registry : attribute "${release.registry}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> url : attribute "${release.url}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Registry root is ${release.registry.dir}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-package-filesystem]
									[T -> archive : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
									[T -> root : attribute "${release.registry.dir}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This is the base build script for nbi group package and is not              intended to be called directly. In order to create a derivative              implementation script, see              ${basedir}/.templates/group-template.xml         " compose:Replacement merge: Default]
				[NT -> engine.xml : XML-File]
					[NT -> engine : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "engine" compose:Replacement merge: Default]
						[T -> name : attribute "engine" compose:Replacement merge: Default]
						[NT -> common.dir : property]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
							[T -> value : attribute "${basedir}" compose:Replacement merge: Default]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/common.properties" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/engine.properties" compose:Replacement merge: Default]
						[NT ->  : import]
							[T -> file : attribute "common.xml" compose:Replacement merge: Default]
							[T -> optional : attribute "false" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT -> release-engine-server : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ReleaseEngine" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-server" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-server" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT -> release-engine-filesystem : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.registries.UpdateEngine" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-filesystem" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-filesystem" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> file : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
						[NT -> .clean-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-jni" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-launcher" compose:Replacement merge: Default]
						[NT -> .clean-launcher : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-launcher" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-launcher" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> file : attribute "${nbproject.dist.file}" compose:Replacement merge: Default]
								[T -> todir : attribute "${dist.dir}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : signjar]
									[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
									[T -> jar : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
									[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
									[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
									[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
						[NT -> .build-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-jni" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-launcher" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-cleaner" compose:Replacement merge: Default]
						[NT -> .build-launcher : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-launcher" compose:Replacement merge: Default]
							[T -> name : attribute ".build-launcher" compose:Replacement merge: Default]
						[NT -> .build-cleaner : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-cleaner" compose:Replacement merge: Default]
							[T -> name : attribute ".build-cleaner" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Release URL is ${release.url}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-engine-server]
									[T -> archive : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
									[T -> url : attribute "${release.url}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Registry root is ${release.registry.dir}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-engine-filesystem]
									[T -> archive : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
									[T -> root : attribute "${release.registry.dir}" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This is the base build script for nbi engine and is not intended to             be called directly. In order to create a derivative implementation              script, see              ${basedir}/.templates/engine-template.xml         " compose:Replacement merge: Default]
				[NT -> product.xml : XML-File]
					[NT -> product : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "product" compose:Replacement merge: Default]
						[T -> name : attribute "product" compose:Replacement merge: Default]
						[NT -> common.dir : property]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
							[T -> value : attribute "${basedir}" compose:Replacement merge: Default]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/common.properties" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/product.properties" compose:Replacement merge: Default]
						[NT ->  : import]
							[T -> file : attribute "common.xml" compose:Replacement merge: Default]
							[T -> optional : attribute "false" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[NT -> sizeof : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.SizeOf" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
							[NT -> md5 : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Md5" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
							[NT -> sum : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Sum" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "sum" compose:Replacement merge: Default]
								[T -> name : attribute "sum" compose:Replacement merge: Default]
							[NT -> package : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Package" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "package" compose:Replacement merge: Default]
								[T -> name : attribute "package" compose:Replacement merge: Default]
							[NT -> load-locales : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.LoadLocales" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
							[NT -> product-descriptor : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ProductDescriptor" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "product-descriptor" compose:Replacement merge: Default]
								[T -> name : attribute "product-descriptor" compose:Replacement merge: Default]
							[NT -> absolutize : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Absolutize" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "absolutize" compose:Replacement merge: Default]
								[T -> name : attribute "absolutize" compose:Replacement merge: Default]
							[NT -> uri-to-path : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.UriToPath" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "uri-to-path" compose:Replacement merge: Default]
								[T -> name : attribute "uri-to-path" compose:Replacement merge: Default]
							[NT -> n-unzip : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.NativeUnzip" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "n-unzip" compose:Replacement merge: Default]
								[T -> name : attribute "n-unzip" compose:Replacement merge: Default]
							[NT -> n-untar : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.NativeUntar" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "n-untar" compose:Replacement merge: Default]
								[T -> name : attribute "n-untar" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT -> release-package-server : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ReleasePackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT -> release-package-filesystem : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.registries.AddPackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.build.engine" compose:Replacement merge: Default]
								[NT ->  : equals]
									[T -> arg1 : attribute "${build.engine}" compose:Replacement merge: Default]
									[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : absolutize]
								[T -> property : attribute "engine.work.dir" compose:Replacement merge: Default]
							[NT ->  : absolutize]
								[T -> property : attribute "engine.dist.dir" compose:Replacement merge: Default]
							[NT ->  : absolutize]
								[T -> property : attribute "engine.dist.file" compose:Replacement merge: Default]
							[NT -> nb.custom.parameter : property]
								[T -> name : attribute "nb.custom.parameter" compose:Replacement merge: Default]
								[T -> value : attribute "-Djavac.classpath=${engine.dist.file}" compose:Replacement merge: Default]
								[T -> name : attribute "nb.custom.parameter" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute "-clean-engine,.clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> file : attribute "${dist.dir}/${product.dist.file.name}" compose:Replacement merge: Default]
						[NT -> -clean-engine : target]
							[T -> depends : attribute "init" compose:Replacement merge: Default]
							[T -> if : attribute "do.build.engine" compose:Replacement merge: Default]
							[T -> name : attribute "-clean-engine" compose:Replacement merge: Default]
							[T -> name : attribute "-clean-engine" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> dir : attribute "${engine.dir}" compose:Replacement merge: Default]
								[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[NT -> JAVA_HOME : env]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
									[T -> value : attribute "${java.home}" compose:Replacement merge: Default]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "clean" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dwork.dir=${engine.work.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddist.dir=${engine.dist.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dbuild.native=false" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddont.build.custom.tasks=true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dcustom.tasks.cls=${custom.tasks.cls}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dengine.dist.file.name=${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Denvironment.properties=${environment.properties}" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute "-build-engine,.build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.disk.space" compose:Replacement merge: Default]
								[T -> value : attribute "${product.disk.space.modificator}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.logic.dir" compose:Replacement merge: Default]
								[T -> value : attribute "${package.dir}/${product.logic.path}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.data.dir" compose:Replacement merge: Default]
								[T -> value : attribute "${package.dir}/${product.data.path}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${packaged.data.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${downloads.cache.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${product.logic.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${product.data.dir}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "build.nbproject" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "i" compose:Replacement merge: Default]
									[T -> value : attribute "1" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.logic.dir}/${product.logic.file.name}" compose:Replacement merge: Default]
								[NT ->  : copy]
									[T -> file : attribute "${nbproject.dist.dir}/${nbproject.dist.file.name}" compose:Replacement merge: Default]
									[T -> tofile : attribute "${current.file}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : signjar]
										[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
										[T -> jar : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
										[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
										[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
								[NT ->  : sizeof]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.size" compose:Replacement merge: Default]
								[NT ->  : md5]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.md5" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "product.logic.${i}.correct.uri" compose:Replacement merge: Default]
									[T -> value : attribute "resource:${product.logic.path}/${product.logic.file.name}" compose:Replacement merge: Default]
								[NT -> start.index : property]
									[T -> name : attribute "start.index" compose:Replacement merge: Default]
									[T -> value : attribute "2" compose:Replacement merge: Default]
									[T -> name : attribute "start.index" compose:Replacement merge: Default]
							[NT -> start.index : property]
								[T -> name : attribute "start.index" compose:Replacement merge: Default]
								[T -> value : attribute "1" compose:Replacement merge: Default]
								[T -> name : attribute "start.index" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> from : attribute "${start.index}" compose:Replacement merge: Default]
								[T -> property : attribute "i" compose:Replacement merge: Default]
								[T -> to : attribute "${product.logic.length}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.logic.dir}/${product.logic.file.name}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> else : attribute "false" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.is.local" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : isset]
										[T -> property : attribute "product.logic.${i}.path" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.logic.${i}.is.local" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.uri" compose:Replacement merge: Default]
										[T -> source : attribute "product.logic.${i}.uri" compose:Replacement merge: Default]
									[NT ->  : get]
										[T -> dest : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> src : attribute "${current.uri}" compose:Replacement merge: Default]
										[T -> usetimestamp : attribute "true" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.logic.${i}.is.local" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.path" compose:Replacement merge: Default]
										[T -> source : attribute "product.logic.${i}.path" compose:Replacement merge: Default]
									[NT ->  : copy]
										[T -> file : attribute "${current.path}" compose:Replacement merge: Default]
										[T -> preservelastmodified : attribute "true" compose:Replacement merge: Default]
										[T -> tofile : attribute "${current.file}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : signjar]
										[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
										[T -> jar : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
										[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
										[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
								[NT ->  : sizeof]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.size" compose:Replacement merge: Default]
								[NT ->  : md5]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.md5" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "product.logic.${i}.correct.uri" compose:Replacement merge: Default]
									[T -> value : attribute "resource:${product.logic.path}/${product.logic.file.name}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.product.data.length" compose:Replacement merge: Default]
								[T -> value : attribute "${product.data.length}" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> from : attribute "1" compose:Replacement merge: Default]
								[T -> property : attribute "i" compose:Replacement merge: Default]
								[T -> to : attribute "${current.product.data.length}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.zip" compose:Replacement merge: Default]
									[T -> value : attribute "${product.data.${i}.zip}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> else : attribute "false" compose:Replacement merge: Default]
									[T -> property : attribute "product.tar.${i}.is.set" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : isset]
										[T -> property : attribute "product.data.${i}.tar" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.tar.${i}.is.set" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.tar" compose:Replacement merge: Default]
										[T -> value : attribute "${product.data.${i}.tar}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.tar.${i}.is.set" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.tar" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.data.dir}/${product.data.file.name}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.temp.dir" compose:Replacement merge: Default]
									[T -> value : attribute "${work.dir}/temp" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.packaged.data.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.packaged.data.file}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.packaged.data.properties.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.packaged.data.properties.file}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : or]
										[NT ->  : equals]
											[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
											[T -> arg2 : attribute "true" compose:Replacement merge: Default]
										[NT ->  : and]
											[NT ->  : equals]
												[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
												[T -> arg2 : attribute "default" compose:Replacement merge: Default]
											[NT ->  : not]
												[NT ->  : and]
													[NT ->  : available]
														[T -> file : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
													[NT ->  : available]
														[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : or]
										[NT ->  : equals]
											[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
											[T -> arg2 : attribute "false" compose:Replacement merge: Default]
										[NT ->  : and]
											[NT ->  : equals]
												[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
												[T -> arg2 : attribute "default" compose:Replacement merge: Default]
											[NT ->  : available]
												[T -> file : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
											[NT ->  : available]
												[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : condition]
										[T -> else : attribute "false" compose:Replacement merge: Default]
										[T -> property : attribute "product.data.${i}.is.local" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : isset]
											[T -> property : attribute "product.data.${i}.path" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "product.data.${i}.is.local" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.uri" compose:Replacement merge: Default]
											[T -> source : attribute "product.data.${i}.uri" compose:Replacement merge: Default]
										[NT ->  : uri-to-path]
											[T -> property : attribute "current.downloaded.path" compose:Replacement merge: Default]
											[T -> uri : attribute "${current.uri}" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.download" compose:Replacement merge: Default]
											[T -> value : attribute "${downloads.cache.dir}/${current.downloaded.path}" compose:Replacement merge: Default]
										[NT ->  : dirname]
											[T -> file : attribute "${current.download}" compose:Replacement merge: Default]
											[T -> property : attribute "current.download.${i}.dir" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.download.dir" compose:Replacement merge: Default]
											[T -> source : attribute "current.download.${i}.dir" compose:Replacement merge: Default]
										[NT ->  : mkdir]
											[T -> dir : attribute "${current.download.dir}" compose:Replacement merge: Default]
										[NT ->  : get]
											[T -> dest : attribute "${current.download}" compose:Replacement merge: Default]
											[T -> src : attribute "${current.uri}" compose:Replacement merge: Default]
											[T -> usetimestamp : attribute "true" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "product.data.${i}.is.local" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.download" compose:Replacement merge: Default]
											[T -> source : attribute "product.data.${i}.path" compose:Replacement merge: Default]
									[NT ->  : mkdir]
										[T -> dir : attribute "${current.temp.dir}" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "current.zip" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : n-unzip]
											[T -> dest : attribute "${current.temp.dir}" compose:Replacement merge: Default]
											[T -> src : attribute "${current.download}" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "current.tar" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : n-untar]
											[T -> dest : attribute "${current.temp.dir}" compose:Replacement merge: Default]
											[T -> src : attribute "${current.download}" compose:Replacement merge: Default]
									[NT ->  : condition]
										[T -> property : attribute "do.copy.data.${i}" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : and]
											[NT ->  : not]
												[NT ->  : equals]
													[T -> arg1 : attribute "${current.zip}" compose:Replacement merge: Default]
													[T -> arg2 : attribute "true" compose:Replacement merge: Default]
											[NT ->  : not]
												[NT ->  : equals]
													[T -> arg1 : attribute "${current.tar}" compose:Replacement merge: Default]
													[T -> arg2 : attribute "true" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "do.copy.data.${i}" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : copy]
											[T -> file : attribute "${current.download}" compose:Replacement merge: Default]
											[T -> todir : attribute "${current.temp.dir}" compose:Replacement merge: Default]
									[NT ->  : antcall]
										[T -> target : attribute "-pre-package" compose:Replacement merge: Default]
										[NT -> i : param]
											[T -> name : attribute "i" compose:Replacement merge: Default]
											[T -> value : attribute "${i}" compose:Replacement merge: Default]
											[T -> name : attribute "i" compose:Replacement merge: Default]
										[NT -> data.directory : param]
											[T -> name : attribute "data.directory" compose:Replacement merge: Default]
											[T -> value : attribute "${current.temp.dir}" compose:Replacement merge: Default]
											[T -> name : attribute "data.directory" compose:Replacement merge: Default]
									[NT ->  : sizeof]
										[T -> file : attribute "${current.temp.dir}" compose:Replacement merge: Default]
										[T -> property : attribute "current.disk.space" compose:Replacement merge: Default]
									[NT ->  : sum]
										[T -> arg1 : attribute "${product.disk.space}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "${current.disk.space}" compose:Replacement merge: Default]
										[T -> property : attribute "product.disk.space" compose:Replacement merge: Default]
									[NT ->  : package]
										[T -> directory : attribute "${current.temp.dir}" compose:Replacement merge: Default]
										[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "release.packaged.data" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : mkdir]
											[T -> dir : attribute "${packaged.data.dir}" compose:Replacement merge: Default]
										[NT ->  : copy]
											[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
											[T -> tofile : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
										[NT ->  : echo]
											[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
											[T -> message : attribute "product.data.${i}.size=${current.disk.space}" compose:Replacement merge: Default]
									[NT ->  : delete]
										[T -> dir : attribute "${current.temp.dir}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : copy]
										[T -> file : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
										[T -> tofile : attribute "${current.file}" compose:Replacement merge: Default]
									[NT ->  : property]
										[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.disk.space" compose:Replacement merge: Default]
										[T -> source : attribute "product.data.${i}.size" compose:Replacement merge: Default]
									[NT ->  : sum]
										[T -> arg1 : attribute "${product.disk.space}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "${current.disk.space}" compose:Replacement merge: Default]
										[T -> property : attribute "product.disk.space" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : signjar]
										[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
										[T -> jar : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
										[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
										[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
								[NT ->  : sizeof]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.data.${i}.size" compose:Replacement merge: Default]
								[NT ->  : md5]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.data.${i}.md5" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "product.data.${i}.correct.uri" compose:Replacement merge: Default]
									[T -> value : attribute "resource:${product.data.path}/${product.data.file.name}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.icon.file" compose:Replacement merge: Default]
								[T -> value : attribute "${package.dir}/${product.icon.path}" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> file : attribute "${product.icon}" compose:Replacement merge: Default]
								[T -> tofile : attribute "${product.icon.file}" compose:Replacement merge: Default]
							[NT ->  : sizeof]
								[T -> file : attribute "${product.icon.file}" compose:Replacement merge: Default]
								[T -> property : attribute "product.icon.size" compose:Replacement merge: Default]
							[NT ->  : md5]
								[T -> file : attribute "${product.icon.file}" compose:Replacement merge: Default]
								[T -> property : attribute "product.icon.md5" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.icon.correct.uri" compose:Replacement merge: Default]
								[T -> value : attribute "${product.icon.uri}" compose:Replacement merge: Default]
							[NT ->  : load-locales]
								[T -> basename : attribute "${product.bundle}" compose:Replacement merge: Default]
								[T -> list : attribute "product.locales.list" compose:Replacement merge: Default]
							[NT ->  : product-descriptor]
								[T -> file : attribute "${package.dir}/${package.descriptor.path}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.dist.file" compose:Replacement merge: Default]
								[T -> value : attribute "${dist.dir}/${product.dist.file.name}" compose:Replacement merge: Default]
							[NT ->  : jar]
								[T -> basedir : attribute "${package.dir}" compose:Replacement merge: Default]
								[T -> compress : attribute "true" compose:Replacement merge: Default]
								[T -> destfile : attribute "${product.dist.file}" compose:Replacement merge: Default]
								[NT ->  : manifest]
									[NT -> Product-Descriptor : attribute]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
										[T -> value : attribute "${package.descriptor.path}" compose:Replacement merge: Default]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : signjar]
									[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
									[T -> jar : attribute "${product.dist.file}" compose:Replacement merge: Default]
									[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
									[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
									[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
						[NT -> -build-engine : target]
							[T -> depends : attribute "init" compose:Replacement merge: Default]
							[T -> if : attribute "do.build.engine" compose:Replacement merge: Default]
							[T -> name : attribute "-build-engine" compose:Replacement merge: Default]
							[T -> name : attribute "-build-engine" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> dir : attribute "${engine.dir}" compose:Replacement merge: Default]
								[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
								[T -> failifexecutionfails : attribute "true" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "checkout,build" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dwork.dir=${engine.work.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddist.dir=${engine.dist.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dbuild.native=false" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddont.build.custom.tasks=true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dcustom.tasks.cls=${custom.tasks.cls}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dengine.dist.file.name=${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Denvironment.properties=${environment.properties}" compose:Replacement merge: Default]
						[NT -> -pre-package : target]
							[T -> name : attribute "-pre-package" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-package" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Release URL is ${release.url}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${product.dist.file}" compose:Replacement merge: Default]
								[NT ->  : release-package-server]
									[T -> archive : attribute "${product.dist.file}" compose:Replacement merge: Default]
									[T -> platforms : attribute "${product.platforms}" compose:Replacement merge: Default]
									[T -> registry : attribute "${release.registry}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> url : attribute "${release.url}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Registry root is ${release.registry.dir}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${product.dist.file}" compose:Replacement merge: Default]
								[NT ->  : release-package-filesystem]
									[T -> archive : attribute "${product.dist.file}" compose:Replacement merge: Default]
									[T -> platforms : attribute "${product.platforms}" compose:Replacement merge: Default]
									[T -> root : attribute "${release.registry.dir}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This is the base build script for nbi product package and is not              intended to be called directly. In order to create a derivative              implementation script, see              ${basedir}/.templates/product-template.xml         " compose:Replacement merge: Default]
[NT -> right : Feature]
	[NT -> sdk : Folder]
		[NT -> nbi : Folder]
			[NT -> .common : Folder]
				[NT -> common.xml : XML-File]
					[NT -> common : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "common" compose:Replacement merge: Default]
						[T -> name : attribute "common" compose:Replacement merge: Default]
						[NT -> clean-all : target]
							[T -> depends : attribute "clean" compose:Replacement merge: Default]
							[T -> name : attribute "clean-all" compose:Replacement merge: Default]
							[T -> name : attribute "clean-all" compose:Replacement merge: Default]
						[NT -> build-all : target]
							[T -> depends : attribute "clean-all,checkout,build" compose:Replacement merge: Default]
							[T -> name : attribute "build-all" compose:Replacement merge: Default]
							[T -> name : attribute "build-all" compose:Replacement merge: Default]
						[NT -> release-all : target]
							[T -> depends : attribute "build-all,release" compose:Replacement merge: Default]
							[T -> name : attribute "release-all" compose:Replacement merge: Default]
							[T -> name : attribute "release-all" compose:Replacement merge: Default]
						[NT -> init : target]
							[T -> depends : attribute "-pre-init,-init,-post-init" compose:Replacement merge: Default]
							[T -> name : attribute "init" compose:Replacement merge: Default]
							[T -> name : attribute "init" compose:Replacement merge: Default]
						[NT -> .init : target]
							[T -> depends : attribute ".build-custom-tasks" compose:Replacement merge: Default]
							[T -> name : attribute ".init" compose:Replacement merge: Default]
							[T -> unless : attribute "skip.initialization" compose:Replacement merge: Default]
							[T -> name : attribute ".init" compose:Replacement merge: Default]
							[NT -> for-each : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ForEach" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "for-each" compose:Replacement merge: Default]
								[T -> name : attribute "for-each" compose:Replacement merge: Default]
							[NT -> set : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.SetProperty" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "set" compose:Replacement merge: Default]
								[T -> name : attribute "set" compose:Replacement merge: Default]
							[NT -> if : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.If" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "if" compose:Replacement merge: Default]
								[T -> name : attribute "if" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.checkout" compose:Replacement merge: Default]
								[NT ->  : and]
									[NT ->  : equals]
										[T -> arg1 : attribute "${checkout.sources}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.checkout.copy" compose:Replacement merge: Default]
								[NT ->  : not]
									[NT ->  : equals]
										[T -> arg1 : attribute "${checkout.sources}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.build.native" compose:Replacement merge: Default]
								[NT ->  : equals]
									[T -> arg1 : attribute "${build.native}" compose:Replacement merge: Default]
									[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.build.nbproject" compose:Replacement merge: Default]
								[NT ->  : equals]
									[T -> arg1 : attribute "${build.nbproject}" compose:Replacement merge: Default]
									[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "ant.executable" compose:Replacement merge: Default]
								[T -> value : attribute "${ant.home}/bin/ant.bat" compose:Replacement merge: Default]
								[NT ->  : os]
									[T -> family : attribute "windows" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "ant.executable" compose:Replacement merge: Default]
								[T -> value : attribute "${ant.home}/bin/ant" compose:Replacement merge: Default]
								[NT ->  : not]
									[NT ->  : os]
										[T -> family : attribute "windows" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${work.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${dist.dir}" compose:Replacement merge: Default]
							[NT -> skip.initialization : property]
								[T -> name : attribute "skip.initialization" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[T -> name : attribute "skip.initialization" compose:Replacement merge: Default]
						[NT -> .build-custom-tasks : target]
							[T -> name : attribute ".build-custom-tasks" compose:Replacement merge: Default]
							[T -> unless : attribute "dont.build.custom.tasks" compose:Replacement merge: Default]
							[T -> name : attribute ".build-custom-tasks" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> dir : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
							[NT ->  : javac]
								[T -> debug : attribute "true" compose:Replacement merge: Default]
								[T -> destdir : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> srcdir : attribute "${custom.tasks.src}" compose:Replacement merge: Default]
							[NT -> dont.build.custom.tasks : property]
								[T -> name : attribute "dont.build.custom.tasks" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[T -> name : attribute "dont.build.custom.tasks" compose:Replacement merge: Default]
						[NT -> -pre-init : target]
							[T -> name : attribute "-pre-init" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-init" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
						[NT -> -post-init : target]
							[T -> name : attribute "-post-init" compose:Replacement merge: Default]
							[T -> name : attribute "-post-init" compose:Replacement merge: Default]
						[NT -> clean : target]
							[T -> depends : attribute "init,-pre-clean,-clean,-post-clean" compose:Replacement merge: Default]
							[T -> name : attribute "clean" compose:Replacement merge: Default]
							[T -> name : attribute "clean" compose:Replacement merge: Default]
						[NT -> .clean : target]
							[T -> name : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute ".clean" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> list : attribute "${native.platforms}" compose:Replacement merge: Default]
								[T -> property : attribute "platform" compose:Replacement merge: Default]
								[NT ->  : antcall]
									[T -> target : attribute ".clean-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-nbproject" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> dir : attribute "${work.dir}" compose:Replacement merge: Default]
								[T -> includeemptydirs : attribute "true" compose:Replacement merge: Default]
						[NT -> .clean-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-jni" compose:Replacement merge: Default]
						[NT -> .clean-jni : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-jni" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-jni" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.local.dir" compose:Replacement merge: Default]
								[T -> source : attribute "scp.local.dir" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.native.dist.file" compose:Replacement merge: Default]
								[T -> source : attribute "native.dist.file.${platform}" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> dir : attribute "${scp.local.dir}/${current.native.dist.file}" compose:Replacement merge: Default]
						[NT -> .clean-nbproject : target]
							[T -> if : attribute "do.build.nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-nbproject" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "nbproject.exists" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : available]
									[T -> file : attribute "${cvs.dir}/${nbproject.path}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "nbproject.exists" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> else : attribute "${nb.platform.home.macos}" compose:Replacement merge: Default]
									[T -> property : attribute "nb.jdk.home" compose:Replacement merge: Default]
									[T -> value : attribute "${nb.platform.home}" compose:Replacement merge: Default]
									[NT ->  : not]
										[NT ->  : equals]
											[T -> arg1 : attribute "Apple Inc." compose:Replacement merge: Default]
											[T -> arg2 : attribute "${java.vendor}" compose:Replacement merge: Default]
								[NT ->  : exec]
									[T -> dir : attribute "${cvs.dir}/${nbproject.path}" compose:Replacement merge: Default]
									[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
									[T -> failifexecutionfails : attribute "false" compose:Replacement merge: Default]
									[T -> failonerror : attribute "false" compose:Replacement merge: Default]
									[NT -> JAVA_HOME : env]
										[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
										[T -> value : attribute "${java.home}" compose:Replacement merge: Default]
										[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.target.clean}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.jdk.home}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.ignore.native}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.no.dependencies}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.dont.build.custom.tasks}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.custom.tasks.cls}" compose:Replacement merge: Default]
									[NT ->  : arg]
										[T -> value : attribute "${nb.custom.parameter}" compose:Replacement merge: Default]
						[NT -> -pre-clean : target]
							[T -> name : attribute "-pre-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-clean" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
						[NT -> -post-clean : target]
							[T -> name : attribute "-post-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-post-clean" compose:Replacement merge: Default]
						[NT -> checkout : target]
							[T -> depends : attribute "init,-pre-checkout,-checkout,-post-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "checkout" compose:Replacement merge: Default]
							[T -> name : attribute "checkout" compose:Replacement merge: Default]
						[NT -> .checkout : target]
							[T -> depends : attribute ".checkout-repository,.pre-checkout-copy,.checkout-copy,.post-checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[T -> todir : attribute "${cvs.dir}" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${translatedfiles.dir}" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> from : attribute "1" compose:Replacement merge: Default]
								[T -> property : attribute "i" compose:Replacement merge: Default]
								[T -> to : attribute "${sources.params.length}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.token" compose:Replacement merge: Default]
									[T -> source : attribute "sources.params.${i}.token" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.value" compose:Replacement merge: Default]
									[T -> source : attribute "sources.params.${i}.value" compose:Replacement merge: Default]
								[NT ->  : replace]
									[T -> dir : attribute "${cvs.dir}" compose:Replacement merge: Default]
									[T -> token : attribute "${current.token}" compose:Replacement merge: Default]
									[T -> value : attribute "${current.value}" compose:Replacement merge: Default]
						[NT -> .checkout-repository : target]
							[T -> if : attribute "do.checkout" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-repository" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-repository" compose:Replacement merge: Default]
							[NT ->  : cvs]
								[T -> command : attribute "checkout" compose:Replacement merge: Default]
								[T -> cvsroot : attribute "${cvs.root}" compose:Replacement merge: Default]
								[T -> date : attribute "${cvs.timestamp}" compose:Replacement merge: Default]
								[T -> dest : attribute "${work.dir}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[T -> package : attribute "${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
								[T -> tag : attribute "${cvs.branch}" compose:Replacement merge: Default]
							[NT ->  : cvs]
								[T -> command : attribute "checkout" compose:Replacement merge: Default]
								[T -> cvsroot : attribute "${cvs.root}" compose:Replacement merge: Default]
								[T -> date : attribute "${cvs.timestamp}" compose:Replacement merge: Default]
								[T -> dest : attribute "${work.dir}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[T -> package : attribute "${translatedfiles.module}/${translatedfiles.path}" compose:Replacement merge: Default]
								[T -> tag : attribute "${cvs.branch}" compose:Replacement merge: Default]
						[NT -> .checkout-copy : target]
							[T -> if : attribute "do.checkout.copy" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".checkout-copy" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${work.dir}/${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> todir : attribute "${work.dir}/${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
								[T -> verbose : attribute "true" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${sources.dir}/${cvs.module}/${cvs.path}" compose:Replacement merge: Default]
									[NT -> **/*.* : include]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
									[NT -> **/nbproject/private/*.* : exclude]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
									[NT -> build/**/*.* : exclude]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
									[NT -> dist/**/*.* : exclude]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
									[NT -> **/CVS : exclude]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
									[NT -> **/.cvsignore : exclude]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[T -> todir : attribute "${translatedfiles.dir}" compose:Replacement merge: Default]
								[T -> verbose : attribute "true" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${sources.dir}/${translatedfiles.module}/${translatedfiles.path}" compose:Replacement merge: Default]
									[NT -> **/*.* : include]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
									[NT -> **/nbproject/private/*.* : exclude]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/nbproject/private/*.*" compose:Replacement merge: Default]
									[NT -> build/**/*.* : exclude]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "build/**/*.*" compose:Replacement merge: Default]
									[NT -> dist/**/*.* : exclude]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "dist/**/*.*" compose:Replacement merge: Default]
									[NT -> **/CVS : exclude]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
										[T -> name : attribute "**/CVS" compose:Replacement merge: Default]
									[NT -> **/.cvsignore : exclude]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
										[T -> name : attribute "**/.cvsignore" compose:Replacement merge: Default]
						[NT -> .pre-checkout-copy : target]
							[T -> name : attribute ".pre-checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".pre-checkout-copy" compose:Replacement merge: Default]
						[NT -> .post-checkout-copy : target]
							[T -> name : attribute ".post-checkout-copy" compose:Replacement merge: Default]
							[T -> name : attribute ".post-checkout-copy" compose:Replacement merge: Default]
						[NT -> -pre-checkout : target]
							[T -> name : attribute "-pre-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-checkout" compose:Replacement merge: Default]
						[NT -> -checkout : target]
							[T -> depends : attribute ".checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-checkout" compose:Replacement merge: Default]
						[NT -> -post-checkout : target]
							[T -> name : attribute "-post-checkout" compose:Replacement merge: Default]
							[T -> name : attribute "-post-checkout" compose:Replacement merge: Default]
						[NT -> build : target]
							[T -> depends : attribute "init,-pre-build,-build,-post-build" compose:Replacement merge: Default]
							[T -> name : attribute "build" compose:Replacement merge: Default]
							[T -> name : attribute "build" compose:Replacement merge: Default]
						[NT -> .build : target]
							[T -> name : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute ".build" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> list : attribute "${native.platforms}" compose:Replacement merge: Default]
								[T -> property : attribute "platform" compose:Replacement merge: Default]
								[NT ->  : antcall]
									[T -> target : attribute ".build-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-nbproject" compose:Replacement merge: Default]
						[NT -> .build-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-jni" compose:Replacement merge: Default]
						[NT -> .build-jni : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-jni" compose:Replacement merge: Default]
							[T -> name : attribute ".build-jni" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "remote.host" compose:Replacement merge: Default]
								[T -> source : attribute "remote.host.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "remote.port" compose:Replacement merge: Default]
								[T -> source : attribute "remote.port.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "remote.user" compose:Replacement merge: Default]
								[T -> source : attribute "remote.user.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.native.dist.file" compose:Replacement merge: Default]
								[T -> source : attribute "native.dist.file.${platform}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.ssh.arguments" compose:Replacement merge: Default]
								[T -> source : attribute "ssh.arguments" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.ssh.command.clean" compose:Replacement merge: Default]
								[T -> source : attribute "ssh.command.clean" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.ssh.command.build" compose:Replacement merge: Default]
								[T -> source : attribute "ssh.command.build" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.arguments" compose:Replacement merge: Default]
								[T -> source : attribute "scp.arguments" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.remote.dir" compose:Replacement merge: Default]
								[T -> source : attribute "scp.remote.dir" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.scp.local.dir" compose:Replacement merge: Default]
								[T -> source : attribute "scp.local.dir" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> executable : attribute "${ssh.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> line : attribute "${current.ssh.arguments}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.ssh.command.build}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${current.scp.local.dir}" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> executable : attribute "${scp.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> line : attribute "${current.scp.arguments}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.scp.remote.dir}/${current.native.dist.file}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.scp.local.dir}/${current.native.dist.file}" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> executable : attribute "${ssh.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> line : attribute "${current.ssh.arguments}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${current.ssh.command.clean}" compose:Replacement merge: Default]
						[NT -> .build-nbproject : target]
							[T -> if : attribute "do.build.nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".build-nbproject" compose:Replacement merge: Default]
							[T -> name : attribute ".build-nbproject" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> else : attribute "${nb.platform.home.macos}" compose:Replacement merge: Default]
								[T -> property : attribute "nb.jdk.home" compose:Replacement merge: Default]
								[T -> value : attribute "${nb.platform.home}" compose:Replacement merge: Default]
								[NT ->  : not]
									[NT ->  : equals]
										[T -> arg1 : attribute "Apple Inc." compose:Replacement merge: Default]
										[T -> arg2 : attribute "${java.vendor}" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> dir : attribute "${cvs.dir}/${nbproject.path}" compose:Replacement merge: Default]
								[T -> errorproperty : attribute "error.property" compose:Replacement merge: Default]
								[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
								[T -> failifexecutionfails : attribute "true" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT -> JAVA_HOME : env]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
									[T -> value : attribute "${java.home}" compose:Replacement merge: Default]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "clean" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "compile" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.jdk.home}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.ignore.native}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.no.dependencies}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.dont.build.custom.tasks}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.custom.tasks.cls}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "${nb.custom.parameter}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${nbproject.dist.dir}" compose:Replacement merge: Default]
							[NT ->  : jar]
								[T -> destfile : attribute "${nbproject.dist.dir}/${nbproject.dist.file.name}" compose:Replacement merge: Default]
								[T -> manifest : attribute "${cvs.dir}/${nbproject.path}/${nbproject.manifest}" compose:Replacement merge: Default]
								[NT ->  : fileset]
									[T -> dir : attribute "${cvs.dir}/${nbproject.path}/build/classes" compose:Replacement merge: Default]
									[NT -> **/*.* : include]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
										[T -> name : attribute "**/*.*" compose:Replacement merge: Default]
						[NT -> -pre-build : target]
							[T -> name : attribute "-pre-build" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-build" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
						[NT -> -post-build : target]
							[T -> name : attribute "-post-build" compose:Replacement merge: Default]
							[T -> name : attribute "-post-build" compose:Replacement merge: Default]
						[NT -> release : target]
							[T -> depends : attribute "init,-pre-release,-release,-post-release" compose:Replacement merge: Default]
							[T -> name : attribute "release" compose:Replacement merge: Default]
							[T -> name : attribute "release" compose:Replacement merge: Default]
						[NT -> -pre-release : target]
							[T -> name : attribute "-pre-release" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-release" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
						[NT -> -post-release : target]
							[T -> name : attribute "-post-release" compose:Replacement merge: Default]
							[T -> name : attribute "-post-release" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This build script is a targets library and must not be used              directly.         " compose:Replacement merge: Default]
				[NT -> group.xml : XML-File]
					[NT -> group : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "group" compose:Replacement merge: Default]
						[T -> name : attribute "group" compose:Replacement merge: Default]
						[NT -> common.dir : property]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
							[T -> value : attribute "${basedir}" compose:Replacement merge: Default]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/common.properties" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/group.properties" compose:Replacement merge: Default]
						[NT ->  : import]
							[T -> file : attribute "common.xml" compose:Replacement merge: Default]
							[T -> optional : attribute "false" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[NT -> sizeof : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.SizeOf" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
							[NT -> md5 : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Md5" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
							[NT -> load-locales : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.LoadLocales" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
							[NT -> group-descriptor : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.GroupDescriptor" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "group-descriptor" compose:Replacement merge: Default]
								[T -> name : attribute "group-descriptor" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT -> release-package-server : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ReleasePackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT -> release-package-filesystem : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.registries.AddPackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> file : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> file : attribute "${group.icon}" compose:Replacement merge: Default]
								[T -> tofile : attribute "${package.dir}/${group.icon.path}" compose:Replacement merge: Default]
							[NT ->  : sizeof]
								[T -> file : attribute "${package.dir}/${group.icon.path}" compose:Replacement merge: Default]
								[T -> property : attribute "group.icon.size" compose:Replacement merge: Default]
							[NT ->  : md5]
								[T -> file : attribute "${package.dir}/${group.icon.path}" compose:Replacement merge: Default]
								[T -> property : attribute "group.icon.md5" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "group.icon.correct.uri" compose:Replacement merge: Default]
								[T -> value : attribute "${group.icon.uri}" compose:Replacement merge: Default]
							[NT ->  : load-locales]
								[T -> basename : attribute "${group.bundle}" compose:Replacement merge: Default]
								[T -> list : attribute "group.locales.list" compose:Replacement merge: Default]
							[NT ->  : group-descriptor]
								[T -> file : attribute "${package.dir}/${package.descriptor.path}" compose:Replacement merge: Default]
							[NT ->  : jar]
								[T -> basedir : attribute "${package.dir}" compose:Replacement merge: Default]
								[T -> compress : attribute "true" compose:Replacement merge: Default]
								[T -> destfile : attribute "${work.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : manifest]
									[NT -> Product-Descriptor : attribute]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
										[T -> value : attribute "${package.descriptor.path}" compose:Replacement merge: Default]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
							[NT ->  : move]
								[T -> file : attribute "${work.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[T -> todir : attribute "${dist.dir}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : signjar]
									[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
									[T -> jar : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
									[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
									[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
									[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Release URL is ${release.url}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-package-server]
									[T -> archive : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
									[T -> registry : attribute "${release.registry}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> url : attribute "${release.url}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Registry root is ${release.registry.dir}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-package-filesystem]
									[T -> archive : attribute "${dist.dir}/${group.dist.file.name}" compose:Replacement merge: Default]
									[T -> root : attribute "${release.registry.dir}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This is the base build script for nbi group package and is not              intended to be called directly. In order to create a derivative              implementation script, see              ${basedir}/.templates/group-template.xml         " compose:Replacement merge: Default]
				[NT -> engine.xml : XML-File]
					[NT -> engine : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "engine" compose:Replacement merge: Default]
						[T -> name : attribute "engine" compose:Replacement merge: Default]
						[NT -> common.dir : property]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
							[T -> value : attribute "${basedir}" compose:Replacement merge: Default]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/common.properties" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/engine.properties" compose:Replacement merge: Default]
						[NT ->  : import]
							[T -> file : attribute "common.xml" compose:Replacement merge: Default]
							[T -> optional : attribute "false" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT -> release-engine-server : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ReleaseEngine" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-server" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-server" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT -> release-engine-filesystem : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.registries.UpdateEngine" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-filesystem" compose:Replacement merge: Default]
									[T -> name : attribute "release-engine-filesystem" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute ".clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> file : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
						[NT -> .clean-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-jni" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".clean-launcher" compose:Replacement merge: Default]
						[NT -> .clean-launcher : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-launcher" compose:Replacement merge: Default]
							[T -> name : attribute ".clean-launcher" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute ".build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> file : attribute "${nbproject.dist.file}" compose:Replacement merge: Default]
								[T -> todir : attribute "${dist.dir}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : signjar]
									[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
									[T -> jar : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
									[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
									[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
									[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
						[NT -> .build-native : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-native" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-jni" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-launcher" compose:Replacement merge: Default]
							[NT ->  : antcall]
								[T -> target : attribute ".build-cleaner" compose:Replacement merge: Default]
						[NT -> .build-launcher : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-launcher" compose:Replacement merge: Default]
							[T -> name : attribute ".build-launcher" compose:Replacement merge: Default]
						[NT -> .build-cleaner : target]
							[T -> if : attribute "do.build.native" compose:Replacement merge: Default]
							[T -> name : attribute ".build-cleaner" compose:Replacement merge: Default]
							[T -> name : attribute ".build-cleaner" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Release URL is ${release.url}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-engine-server]
									[T -> archive : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
									[T -> url : attribute "${release.url}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Registry root is ${release.registry.dir}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : release-engine-filesystem]
									[T -> archive : attribute "${dist.dir}/${engine.dist.file.name}" compose:Replacement merge: Default]
									[T -> root : attribute "${release.registry.dir}" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This is the base build script for nbi engine and is not intended to             be called directly. In order to create a derivative implementation              script, see              ${basedir}/.templates/engine-template.xml         " compose:Replacement merge: Default]
				[NT -> product.xml : XML-File]
					[NT -> product : project]
						[T -> basedir : attribute "." compose:Replacement merge: Default]
						[T -> default : attribute "usage" compose:Replacement merge: Default]
						[T -> name : attribute "product" compose:Replacement merge: Default]
						[T -> name : attribute "product" compose:Replacement merge: Default]
						[NT -> common.dir : property]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
							[T -> value : attribute "${basedir}" compose:Replacement merge: Default]
							[T -> name : attribute "common.dir" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/common.properties" compose:Replacement merge: Default]
						[NT ->  : property]
							[T -> file : attribute "${common.dir}/product.properties" compose:Replacement merge: Default]
						[NT ->  : import]
							[T -> file : attribute "common.xml" compose:Replacement merge: Default]
							[T -> optional : attribute "false" compose:Replacement merge: Default]
						[NT -> -init : target]
							[T -> depends : attribute ".init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[T -> name : attribute "-init" compose:Replacement merge: Default]
							[NT -> sizeof : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.SizeOf" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
								[T -> name : attribute "sizeof" compose:Replacement merge: Default]
							[NT -> md5 : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Md5" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
								[T -> name : attribute "md5" compose:Replacement merge: Default]
							[NT -> sum : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Sum" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "sum" compose:Replacement merge: Default]
								[T -> name : attribute "sum" compose:Replacement merge: Default]
							[NT -> package : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Package" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "package" compose:Replacement merge: Default]
								[T -> name : attribute "package" compose:Replacement merge: Default]
							[NT -> load-locales : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.LoadLocales" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
								[T -> name : attribute "load-locales" compose:Replacement merge: Default]
							[NT -> product-descriptor : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ProductDescriptor" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "product-descriptor" compose:Replacement merge: Default]
								[T -> name : attribute "product-descriptor" compose:Replacement merge: Default]
							[NT -> absolutize : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.Absolutize" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "absolutize" compose:Replacement merge: Default]
								[T -> name : attribute "absolutize" compose:Replacement merge: Default]
							[NT -> uri-to-path : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.UriToPath" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "uri-to-path" compose:Replacement merge: Default]
								[T -> name : attribute "uri-to-path" compose:Replacement merge: Default]
							[NT -> n-unzip : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.NativeUnzip" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "n-unzip" compose:Replacement merge: Default]
								[T -> name : attribute "n-unzip" compose:Replacement merge: Default]
							[NT -> n-untar : taskdef]
								[T -> classname : attribute "org.netbeans.installer.infra.build.ant.NativeUntar" compose:Replacement merge: Default]
								[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
								[T -> name : attribute "n-untar" compose:Replacement merge: Default]
								[T -> name : attribute "n-untar" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT -> release-package-server : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.ReleasePackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-server" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT -> release-package-filesystem : taskdef]
									[T -> classname : attribute "org.netbeans.installer.infra.build.ant.registries.AddPackage" compose:Replacement merge: Default]
									[T -> classpath : attribute "${custom.tasks.cls}" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
									[T -> name : attribute "release-package-filesystem" compose:Replacement merge: Default]
							[NT ->  : condition]
								[T -> property : attribute "do.build.engine" compose:Replacement merge: Default]
								[NT ->  : equals]
									[T -> arg1 : attribute "${build.engine}" compose:Replacement merge: Default]
									[T -> arg2 : attribute "true" compose:Replacement merge: Default]
							[NT ->  : absolutize]
								[T -> property : attribute "engine.work.dir" compose:Replacement merge: Default]
							[NT ->  : absolutize]
								[T -> property : attribute "engine.dist.dir" compose:Replacement merge: Default]
							[NT ->  : absolutize]
								[T -> property : attribute "engine.dist.file" compose:Replacement merge: Default]
							[NT -> nb.custom.parameter : property]
								[T -> name : attribute "nb.custom.parameter" compose:Replacement merge: Default]
								[T -> value : attribute "-Djavac.classpath=${engine.dist.file}" compose:Replacement merge: Default]
								[T -> name : attribute "nb.custom.parameter" compose:Replacement merge: Default]
						[NT -> -clean : target]
							[T -> depends : attribute "-clean-engine,.clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[T -> name : attribute "-clean" compose:Replacement merge: Default]
							[NT ->  : delete]
								[T -> file : attribute "${dist.dir}/${product.dist.file.name}" compose:Replacement merge: Default]
						[NT -> -clean-engine : target]
							[T -> depends : attribute "init" compose:Replacement merge: Default]
							[T -> if : attribute "do.build.engine" compose:Replacement merge: Default]
							[T -> name : attribute "-clean-engine" compose:Replacement merge: Default]
							[T -> name : attribute "-clean-engine" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> dir : attribute "${engine.dir}" compose:Replacement merge: Default]
								[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
								[T -> failonerror : attribute "false" compose:Replacement merge: Default]
								[NT -> JAVA_HOME : env]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
									[T -> value : attribute "${java.home}" compose:Replacement merge: Default]
									[T -> key : attribute "JAVA_HOME" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "clean" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dwork.dir=${engine.work.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddist.dir=${engine.dist.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dbuild.native=false" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddont.build.custom.tasks=true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dcustom.tasks.cls=${custom.tasks.cls}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dengine.dist.file.name=${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Denvironment.properties=${environment.properties}" compose:Replacement merge: Default]
						[NT -> -build : target]
							[T -> depends : attribute "-build-engine,.build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[T -> name : attribute "-build" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.disk.space" compose:Replacement merge: Default]
								[T -> value : attribute "${product.disk.space.modificator}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.logic.dir" compose:Replacement merge: Default]
								[T -> value : attribute "${package.dir}/${product.logic.path}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.data.dir" compose:Replacement merge: Default]
								[T -> value : attribute "${package.dir}/${product.data.path}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${packaged.data.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${downloads.cache.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${product.logic.dir}" compose:Replacement merge: Default]
							[NT ->  : mkdir]
								[T -> dir : attribute "${product.data.dir}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "build.nbproject" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "i" compose:Replacement merge: Default]
									[T -> value : attribute "1" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.logic.dir}/${product.logic.file.name}" compose:Replacement merge: Default]
								[NT ->  : copy]
									[T -> file : attribute "${nbproject.dist.dir}/${nbproject.dist.file.name}" compose:Replacement merge: Default]
									[T -> tofile : attribute "${current.file}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : signjar]
										[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
										[T -> jar : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
										[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
										[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
								[NT ->  : sizeof]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.size" compose:Replacement merge: Default]
								[NT ->  : md5]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.md5" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "product.logic.${i}.correct.uri" compose:Replacement merge: Default]
									[T -> value : attribute "resource:${product.logic.path}/${product.logic.file.name}" compose:Replacement merge: Default]
								[NT -> start.index : property]
									[T -> name : attribute "start.index" compose:Replacement merge: Default]
									[T -> value : attribute "2" compose:Replacement merge: Default]
									[T -> name : attribute "start.index" compose:Replacement merge: Default]
							[NT -> start.index : property]
								[T -> name : attribute "start.index" compose:Replacement merge: Default]
								[T -> value : attribute "1" compose:Replacement merge: Default]
								[T -> name : attribute "start.index" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> from : attribute "${start.index}" compose:Replacement merge: Default]
								[T -> property : attribute "i" compose:Replacement merge: Default]
								[T -> to : attribute "${product.logic.length}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.logic.dir}/${product.logic.file.name}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> else : attribute "false" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.is.local" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : isset]
										[T -> property : attribute "product.logic.${i}.path" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.logic.${i}.is.local" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.uri" compose:Replacement merge: Default]
										[T -> source : attribute "product.logic.${i}.uri" compose:Replacement merge: Default]
									[NT ->  : get]
										[T -> dest : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> src : attribute "${current.uri}" compose:Replacement merge: Default]
										[T -> usetimestamp : attribute "true" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.logic.${i}.is.local" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.path" compose:Replacement merge: Default]
										[T -> source : attribute "product.logic.${i}.path" compose:Replacement merge: Default]
									[NT ->  : copy]
										[T -> file : attribute "${current.path}" compose:Replacement merge: Default]
										[T -> preservelastmodified : attribute "true" compose:Replacement merge: Default]
										[T -> tofile : attribute "${current.file}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : signjar]
										[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
										[T -> jar : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
										[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
										[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
								[NT ->  : sizeof]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.size" compose:Replacement merge: Default]
								[NT ->  : md5]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.logic.${i}.md5" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "product.logic.${i}.correct.uri" compose:Replacement merge: Default]
									[T -> value : attribute "resource:${product.logic.path}/${product.logic.file.name}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "current.product.data.length" compose:Replacement merge: Default]
								[T -> value : attribute "${product.data.length}" compose:Replacement merge: Default]
							[NT ->  : for-each]
								[T -> from : attribute "1" compose:Replacement merge: Default]
								[T -> property : attribute "i" compose:Replacement merge: Default]
								[T -> to : attribute "${current.product.data.length}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.zip" compose:Replacement merge: Default]
									[T -> value : attribute "${product.data.${i}.zip}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> else : attribute "false" compose:Replacement merge: Default]
									[T -> property : attribute "product.tar.${i}.is.set" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : isset]
										[T -> property : attribute "product.data.${i}.tar" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.tar.${i}.is.set" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.tar" compose:Replacement merge: Default]
										[T -> value : attribute "${product.data.${i}.tar}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "product.tar.${i}.is.set" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.tar" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.data.dir}/${product.data.file.name}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.temp.dir" compose:Replacement merge: Default]
									[T -> value : attribute "${work.dir}/temp" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.packaged.data.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.packaged.data.file}" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "current.packaged.data.properties.file" compose:Replacement merge: Default]
									[T -> value : attribute "${product.packaged.data.properties.file}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : or]
										[NT ->  : equals]
											[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
											[T -> arg2 : attribute "true" compose:Replacement merge: Default]
										[NT ->  : and]
											[NT ->  : equals]
												[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
												[T -> arg2 : attribute "default" compose:Replacement merge: Default]
											[NT ->  : not]
												[NT ->  : and]
													[NT ->  : available]
														[T -> file : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
													[NT ->  : available]
														[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
								[NT ->  : condition]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : or]
										[NT ->  : equals]
											[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
											[T -> arg2 : attribute "false" compose:Replacement merge: Default]
										[NT ->  : and]
											[NT ->  : equals]
												[T -> arg1 : attribute "${package.data}" compose:Replacement merge: Default]
												[T -> arg2 : attribute "default" compose:Replacement merge: Default]
											[NT ->  : available]
												[T -> file : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
											[NT ->  : available]
												[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : condition]
										[T -> else : attribute "false" compose:Replacement merge: Default]
										[T -> property : attribute "product.data.${i}.is.local" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : isset]
											[T -> property : attribute "product.data.${i}.path" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "product.data.${i}.is.local" compose:Replacement merge: Default]
										[T -> value : attribute "false" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.uri" compose:Replacement merge: Default]
											[T -> source : attribute "product.data.${i}.uri" compose:Replacement merge: Default]
										[NT ->  : uri-to-path]
											[T -> property : attribute "current.downloaded.path" compose:Replacement merge: Default]
											[T -> uri : attribute "${current.uri}" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.download" compose:Replacement merge: Default]
											[T -> value : attribute "${downloads.cache.dir}/${current.downloaded.path}" compose:Replacement merge: Default]
										[NT ->  : dirname]
											[T -> file : attribute "${current.download}" compose:Replacement merge: Default]
											[T -> property : attribute "current.download.${i}.dir" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.download.dir" compose:Replacement merge: Default]
											[T -> source : attribute "current.download.${i}.dir" compose:Replacement merge: Default]
										[NT ->  : mkdir]
											[T -> dir : attribute "${current.download.dir}" compose:Replacement merge: Default]
										[NT ->  : get]
											[T -> dest : attribute "${current.download}" compose:Replacement merge: Default]
											[T -> src : attribute "${current.uri}" compose:Replacement merge: Default]
											[T -> usetimestamp : attribute "true" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "product.data.${i}.is.local" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : set]
											[T -> property : attribute "current.download" compose:Replacement merge: Default]
											[T -> source : attribute "product.data.${i}.path" compose:Replacement merge: Default]
									[NT ->  : mkdir]
										[T -> dir : attribute "${current.temp.dir}" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "current.zip" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : n-unzip]
											[T -> dest : attribute "${current.temp.dir}" compose:Replacement merge: Default]
											[T -> src : attribute "${current.download}" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "current.tar" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : n-untar]
											[T -> dest : attribute "${current.temp.dir}" compose:Replacement merge: Default]
											[T -> src : attribute "${current.download}" compose:Replacement merge: Default]
									[NT ->  : condition]
										[T -> property : attribute "do.copy.data.${i}" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : and]
											[NT ->  : not]
												[NT ->  : equals]
													[T -> arg1 : attribute "${current.zip}" compose:Replacement merge: Default]
													[T -> arg2 : attribute "true" compose:Replacement merge: Default]
											[NT ->  : not]
												[NT ->  : equals]
													[T -> arg1 : attribute "${current.tar}" compose:Replacement merge: Default]
													[T -> arg2 : attribute "true" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "do.copy.data.${i}" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : copy]
											[T -> file : attribute "${current.download}" compose:Replacement merge: Default]
											[T -> todir : attribute "${current.temp.dir}" compose:Replacement merge: Default]
									[NT ->  : antcall]
										[T -> target : attribute "-pre-package" compose:Replacement merge: Default]
										[NT -> i : param]
											[T -> name : attribute "i" compose:Replacement merge: Default]
											[T -> value : attribute "${i}" compose:Replacement merge: Default]
											[T -> name : attribute "i" compose:Replacement merge: Default]
										[NT -> data.directory : param]
											[T -> name : attribute "data.directory" compose:Replacement merge: Default]
											[T -> value : attribute "${current.temp.dir}" compose:Replacement merge: Default]
											[T -> name : attribute "data.directory" compose:Replacement merge: Default]
									[NT ->  : sizeof]
										[T -> file : attribute "${current.temp.dir}" compose:Replacement merge: Default]
										[T -> property : attribute "current.disk.space" compose:Replacement merge: Default]
									[NT ->  : sum]
										[T -> arg1 : attribute "${product.disk.space}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "${current.disk.space}" compose:Replacement merge: Default]
										[T -> property : attribute "product.disk.space" compose:Replacement merge: Default]
									[NT ->  : package]
										[T -> directory : attribute "${current.temp.dir}" compose:Replacement merge: Default]
										[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[NT ->  : if]
										[T -> property : attribute "release.packaged.data" compose:Replacement merge: Default]
										[T -> value : attribute "true" compose:Replacement merge: Default]
										[NT ->  : mkdir]
											[T -> dir : attribute "${packaged.data.dir}" compose:Replacement merge: Default]
										[NT ->  : copy]
											[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
											[T -> tofile : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
										[NT ->  : echo]
											[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
											[T -> message : attribute "product.data.${i}.size=${current.disk.space}" compose:Replacement merge: Default]
									[NT ->  : delete]
										[T -> dir : attribute "${current.temp.dir}" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "do.package.data.${i}" compose:Replacement merge: Default]
									[T -> value : attribute "false" compose:Replacement merge: Default]
									[NT ->  : copy]
										[T -> file : attribute "${current.packaged.data.file}" compose:Replacement merge: Default]
										[T -> tofile : attribute "${current.file}" compose:Replacement merge: Default]
									[NT ->  : property]
										[T -> file : attribute "${current.packaged.data.properties.file}" compose:Replacement merge: Default]
									[NT ->  : set]
										[T -> property : attribute "current.disk.space" compose:Replacement merge: Default]
										[T -> source : attribute "product.data.${i}.size" compose:Replacement merge: Default]
									[NT ->  : sum]
										[T -> arg1 : attribute "${product.disk.space}" compose:Replacement merge: Default]
										[T -> arg2 : attribute "${current.disk.space}" compose:Replacement merge: Default]
										[T -> property : attribute "product.disk.space" compose:Replacement merge: Default]
								[NT ->  : if]
									[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
									[T -> value : attribute "true" compose:Replacement merge: Default]
									[NT ->  : signjar]
										[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
										[T -> jar : attribute "${current.file}" compose:Replacement merge: Default]
										[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
										[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
										[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
								[NT ->  : sizeof]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.data.${i}.size" compose:Replacement merge: Default]
								[NT ->  : md5]
									[T -> file : attribute "${current.file}" compose:Replacement merge: Default]
									[T -> property : attribute "product.data.${i}.md5" compose:Replacement merge: Default]
								[NT ->  : set]
									[T -> property : attribute "product.data.${i}.correct.uri" compose:Replacement merge: Default]
									[T -> value : attribute "resource:${product.data.path}/${product.data.file.name}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.icon.file" compose:Replacement merge: Default]
								[T -> value : attribute "${package.dir}/${product.icon.path}" compose:Replacement merge: Default]
							[NT ->  : copy]
								[T -> file : attribute "${product.icon}" compose:Replacement merge: Default]
								[T -> tofile : attribute "${product.icon.file}" compose:Replacement merge: Default]
							[NT ->  : sizeof]
								[T -> file : attribute "${product.icon.file}" compose:Replacement merge: Default]
								[T -> property : attribute "product.icon.size" compose:Replacement merge: Default]
							[NT ->  : md5]
								[T -> file : attribute "${product.icon.file}" compose:Replacement merge: Default]
								[T -> property : attribute "product.icon.md5" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.icon.correct.uri" compose:Replacement merge: Default]
								[T -> value : attribute "${product.icon.uri}" compose:Replacement merge: Default]
							[NT ->  : load-locales]
								[T -> basename : attribute "${product.bundle}" compose:Replacement merge: Default]
								[T -> list : attribute "product.locales.list" compose:Replacement merge: Default]
							[NT ->  : product-descriptor]
								[T -> file : attribute "${package.dir}/${package.descriptor.path}" compose:Replacement merge: Default]
							[NT ->  : set]
								[T -> property : attribute "product.dist.file" compose:Replacement merge: Default]
								[T -> value : attribute "${dist.dir}/${product.dist.file.name}" compose:Replacement merge: Default]
							[NT ->  : jar]
								[T -> basedir : attribute "${package.dir}" compose:Replacement merge: Default]
								[T -> compress : attribute "true" compose:Replacement merge: Default]
								[T -> destfile : attribute "${product.dist.file}" compose:Replacement merge: Default]
								[NT ->  : manifest]
									[NT -> Product-Descriptor : attribute]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
										[T -> value : attribute "${package.descriptor.path}" compose:Replacement merge: Default]
										[T -> name : attribute "Product-Descriptor" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "jarsigner.enabled" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : signjar]
									[T -> alias : attribute "${jarsigner.alias}" compose:Replacement merge: Default]
									[T -> jar : attribute "${product.dist.file}" compose:Replacement merge: Default]
									[T -> keystore : attribute "${jarsigner.keystore}" compose:Replacement merge: Default]
									[T -> maxmemory : attribute "${jarsigner.xmx}" compose:Replacement merge: Default]
									[T -> storepass : attribute "${jarsigner.storepass}" compose:Replacement merge: Default]
						[NT -> -build-engine : target]
							[T -> depends : attribute "init" compose:Replacement merge: Default]
							[T -> if : attribute "do.build.engine" compose:Replacement merge: Default]
							[T -> name : attribute "-build-engine" compose:Replacement merge: Default]
							[T -> name : attribute "-build-engine" compose:Replacement merge: Default]
							[NT ->  : exec]
								[T -> dir : attribute "${engine.dir}" compose:Replacement merge: Default]
								[T -> executable : attribute "${ant.executable}" compose:Replacement merge: Default]
								[T -> failifexecutionfails : attribute "true" compose:Replacement merge: Default]
								[T -> failonerror : attribute "true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "checkout,build" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dwork.dir=${engine.work.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddist.dir=${engine.dist.dir}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dbuild.native=false" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Ddont.build.custom.tasks=true" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dcustom.tasks.cls=${custom.tasks.cls}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Dengine.dist.file.name=${engine.dist.file.name}" compose:Replacement merge: Default]
								[NT ->  : arg]
									[T -> value : attribute "-Denvironment.properties=${environment.properties}" compose:Replacement merge: Default]
						[NT -> -pre-package : target]
							[T -> name : attribute "-pre-package" compose:Replacement merge: Default]
							[T -> name : attribute "-pre-package" compose:Replacement merge: Default]
						[NT -> -release : target]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[T -> name : attribute "-release" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "true" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Release URL is ${release.url}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${product.dist.file}" compose:Replacement merge: Default]
								[NT ->  : release-package-server]
									[T -> archive : attribute "${product.dist.file}" compose:Replacement merge: Default]
									[T -> platforms : attribute "${product.platforms}" compose:Replacement merge: Default]
									[T -> registry : attribute "${release.registry}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> url : attribute "${release.url}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
							[NT ->  : if]
								[T -> property : attribute "release.to.server" compose:Replacement merge: Default]
								[T -> value : attribute "false" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Registry root is ${release.registry.dir}" compose:Replacement merge: Default]
								[NT ->  : echo]
									[T -> message : attribute "Archive is ${product.dist.file}" compose:Replacement merge: Default]
								[NT ->  : release-package-filesystem]
									[T -> archive : attribute "${product.dist.file}" compose:Replacement merge: Default]
									[T -> platforms : attribute "${product.platforms}" compose:Replacement merge: Default]
									[T -> root : attribute "${release.registry.dir}" compose:Replacement merge: Default]
									[T -> uid : attribute "${release.parent.uid}" compose:Replacement merge: Default]
									[T -> version : attribute "${release.parent.version}" compose:Replacement merge: Default]
						[NT -> usage : target]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[T -> name : attribute "usage" compose:Replacement merge: Default]
							[NT ->  : echo]
								[T -> #text : #text "             This is the base build script for nbi product package and is not              intended to be called directly. In order to create a derivative              implementation script, see              ${basedir}/.templates/product-template.xml         " compose:Replacement merge: Default]
