Found the following features in expression file:
left
base
right
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/samples/server/petstore/spring-mvc/src/main/java/io/swagger/model/User.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/samples/server/petstore/spring-mvc/src/main/java/io/swagger/model/User.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/samples/client/petstore/csharp/SwaggerClientTest/obj/Debug/.NETFramework,Version=v4.5.AssemblyAttribute.cs
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/left/samples/client/petstore/csharp/SwaggerClientTest/obj/Debug/.NETFramework,Version=v4.5.AssemblyAttribute.cs
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/samples/server/petstore/spring-mvc/src/main/java/io/swagger/model/User.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/samples/server/petstore/spring-mvc/src/main/java/io/swagger/model/User.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/samples/client/petstore/csharp/SwaggerClientTest/obj/Debug/.NETFramework,Version=v4.5.AssemblyAttribute.cs
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/base/samples/client/petstore/csharp/SwaggerClientTest/obj/Debug/.NETFramework,Version=v4.5.AssemblyAttribute.cs
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/samples/server/petstore/spring-mvc/src/main/java/io/swagger/model/User.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/samples/server/petstore/spring-mvc/src/main/java/io/swagger/model/User.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/samples/client/petstore/csharp/SwaggerClientTest/obj/Debug/.NETFramework,Version=v4.5.AssemblyAttribute.cs
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/right/samples/client/petstore/csharp/SwaggerClientTest/obj/Debug/.NETFramework,Version=v4.5.AssemblyAttribute.cs
[NT -> left : Feature]
	[NT -> samples : Folder]
		[NT -> server : Folder]
			[NT -> petstore : Folder]
				[NT -> spring-mvc : Folder]
					[NT -> src : Folder]
						[NT -> main : Folder]
							[NT -> java : Folder]
								[NT -> io : Folder]
									[NT -> swagger : Folder]
										[NT -> model : Folder]
											[NT -> User.java : Java-File]
												[NT -> - : CompilationUnit]
													[T -> - : PackageDeclaration "package io.swagger.model;" compose:Replacement merge: Default]
													[T -> io.swagger.annotations.* : ImportDeclaration "import io.swagger.annotations.*;" compose:Replacement merge: Default]
													[T -> com.fasterxml.jackson.annotation.JsonProperty{ImportPackage} : ImportDeclaration "import com.fasterxml.jackson.annotation.JsonProperty;" compose:Replacement merge: Default]
													[NT -> User : ClassDeclaration]
														[T -> - : Modifiers "@ApiModel(description = "") @javax.annotation.Generated(value = "class io.swagger.codegen.languages.SpringMVCServerCodegen", date = "2015-10-19T23:12:31.377-07:00") public" compose:Replacement merge: SemanticConflict]
														[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
														[T -> User : Id "User" compose:Replacement merge: Default]
														[T -> id : FieldDecl "private Long id = null;" compose:Replacement merge: SemanticConflict]
														[T -> username : FieldDecl "private String username = null;" compose:Replacement merge: SemanticConflict]
														[T -> firstName : FieldDecl "private String firstName = null;" compose:Replacement merge: SemanticConflict]
														[T -> lastName : FieldDecl "private String lastName = null;" compose:Replacement merge: SemanticConflict]
														[T -> email : FieldDecl "private String email = null;" compose:Replacement merge: SemanticConflict]
														[T -> password : FieldDecl "private String password = null;" compose:Replacement merge: SemanticConflict]
														[T -> phone : FieldDecl "private String phone = null;" compose:Replacement merge: SemanticConflict]
														[T -> userStatus : FieldDecl "private Integer userStatus = null;" compose:Replacement merge: SemanticConflict]
														[T -> getId({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("id")   public Long getId() {     return id;   }" compose:Replacement merge: LineBased]
														[T -> setId(Long-Long) : MethodDecl "public void setId(Long id) {     this.id = id;   }" compose:Replacement merge: LineBased]
														[T -> getUsername({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("username")   public String getUsername() {     return username;   }" compose:Replacement merge: LineBased]
														[T -> setUsername(String-String) : MethodDecl "public void setUsername(String username) {     this.username = username;   }" compose:Replacement merge: LineBased]
														[T -> getFirstName({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("firstName")   public String getFirstName() {     return firstName;   }" compose:Replacement merge: LineBased]
														[T -> setFirstName(String-String) : MethodDecl "public void setFirstName(String firstName) {     this.firstName = firstName;   }" compose:Replacement merge: LineBased]
														[T -> getLastName({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("lastName")   public String getLastName() {     return lastName;   }" compose:Replacement merge: LineBased]
														[T -> setLastName(String-String) : MethodDecl "public void setLastName(String lastName) {     this.lastName = lastName;   }" compose:Replacement merge: LineBased]
														[T -> getEmail({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("email")   public String getEmail() {     return email;   }" compose:Replacement merge: LineBased]
														[T -> setEmail(String-String) : MethodDecl "public void setEmail(String email) {     this.email = email;   }" compose:Replacement merge: LineBased]
														[T -> getPassword({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("password")   public String getPassword() {     return password;   }" compose:Replacement merge: LineBased]
														[T -> setPassword(String-String) : MethodDecl "public void setPassword(String password) {     this.password = password;   }" compose:Replacement merge: LineBased]
														[T -> getPhone({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("phone")   public String getPhone() {     return phone;   }" compose:Replacement merge: LineBased]
														[T -> setPhone(String-String) : MethodDecl "public void setPhone(String phone) {     this.phone = phone;   }" compose:Replacement merge: LineBased]
														[T -> getUserStatus({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "User Status")   @JsonProperty("userStatus")   public Integer getUserStatus() {     return userStatus;   }" compose:Replacement merge: LineBased]
														[T -> setUserStatus(Integer-Integer) : MethodDecl "public void setUserStatus(Integer userStatus) {     this.userStatus = userStatus;   }" compose:Replacement merge: LineBased]
														[T -> toString({FormalParametersInternal}) : MethodDecl "@Override   public String toString()  {     StringBuilder sb = new StringBuilder();     sb.append("class User {\n");          sb.append("  id: ").append(id).append("\n");     sb.append("  username: ").append(username).append("\n");     sb.append("  firstName: ").append(firstName).append("\n");     sb.append("  lastName: ").append(lastName).append("\n");     sb.append("  email: ").append(email).append("\n");     sb.append("  password: ").append(password).append("\n");     sb.append("  phone: ").append(phone).append("\n");     sb.append("  userStatus: ").append(userStatus).append("\n");     sb.append("}\n");     return sb.toString();   }" compose:Replacement merge: LineBased]
[NT -> base : Feature]
	[NT -> samples : Folder]
		[NT -> server : Folder]
			[NT -> petstore : Folder]
				[NT -> spring-mvc : Folder]
					[NT -> src : Folder]
						[NT -> main : Folder]
							[NT -> java : Folder]
								[NT -> io : Folder]
									[NT -> swagger : Folder]
										[NT -> model : Folder]
											[NT -> User.java : Java-File]
												[NT -> - : CompilationUnit]
													[T -> - : PackageDeclaration "package io.swagger.model;" compose:Replacement merge: Default]
													[T -> io.swagger.annotations.* : ImportDeclaration "import io.swagger.annotations.*;" compose:Replacement merge: Default]
													[T -> com.fasterxml.jackson.annotation.JsonProperty{ImportPackage} : ImportDeclaration "import com.fasterxml.jackson.annotation.JsonProperty;" compose:Replacement merge: Default]
													[NT -> User : ClassDeclaration]
														[T -> - : Modifiers "@ApiModel(description = "") @javax.annotation.Generated(value = "class io.swagger.codegen.languages.SpringMVCServerCodegen", date = "2015-09-30T16:27:59.075+08:00") public" compose:Replacement merge: SemanticConflict]
														[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
														[T -> User : Id "User" compose:Replacement merge: Default]
														[T -> id : FieldDecl "private Long id = null;" compose:Replacement merge: SemanticConflict]
														[T -> username : FieldDecl "private String username = null;" compose:Replacement merge: SemanticConflict]
														[T -> firstName : FieldDecl "private String firstName = null;" compose:Replacement merge: SemanticConflict]
														[T -> lastName : FieldDecl "private String lastName = null;" compose:Replacement merge: SemanticConflict]
														[T -> email : FieldDecl "private String email = null;" compose:Replacement merge: SemanticConflict]
														[T -> password : FieldDecl "private String password = null;" compose:Replacement merge: SemanticConflict]
														[T -> phone : FieldDecl "private String phone = null;" compose:Replacement merge: SemanticConflict]
														[T -> userStatus : FieldDecl "private Integer userStatus = null;" compose:Replacement merge: SemanticConflict]
														[T -> getId({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("id")   public Long getId() {     return id;   }" compose:Replacement merge: LineBased]
														[T -> setId(Long-Long) : MethodDecl "public void setId(Long id) {     this.id = id;   }" compose:Replacement merge: LineBased]
														[T -> getUsername({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("username")   public String getUsername() {     return username;   }" compose:Replacement merge: LineBased]
														[T -> setUsername(String-String) : MethodDecl "public void setUsername(String username) {     this.username = username;   }" compose:Replacement merge: LineBased]
														[T -> getFirstName({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("firstName")   public String getFirstName() {     return firstName;   }" compose:Replacement merge: LineBased]
														[T -> setFirstName(String-String) : MethodDecl "public void setFirstName(String firstName) {     this.firstName = firstName;   }" compose:Replacement merge: LineBased]
														[T -> getLastName({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("lastName")   public String getLastName() {     return lastName;   }" compose:Replacement merge: LineBased]
														[T -> setLastName(String-String) : MethodDecl "public void setLastName(String lastName) {     this.lastName = lastName;   }" compose:Replacement merge: LineBased]
														[T -> getEmail({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("email")   public String getEmail() {     return email;   }" compose:Replacement merge: LineBased]
														[T -> setEmail(String-String) : MethodDecl "public void setEmail(String email) {     this.email = email;   }" compose:Replacement merge: LineBased]
														[T -> getPassword({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("password")   public String getPassword() {     return password;   }" compose:Replacement merge: LineBased]
														[T -> setPassword(String-String) : MethodDecl "public void setPassword(String password) {     this.password = password;   }" compose:Replacement merge: LineBased]
														[T -> getPhone({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("phone")   public String getPhone() {     return phone;   }" compose:Replacement merge: LineBased]
														[T -> setPhone(String-String) : MethodDecl "public void setPhone(String phone) {     this.phone = phone;   }" compose:Replacement merge: LineBased]
														[T -> getUserStatus({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "User Status")   @JsonProperty("userStatus")   public Integer getUserStatus() {     return userStatus;   }" compose:Replacement merge: LineBased]
														[T -> setUserStatus(Integer-Integer) : MethodDecl "public void setUserStatus(Integer userStatus) {     this.userStatus = userStatus;   }" compose:Replacement merge: LineBased]
														[T -> toString({FormalParametersInternal}) : MethodDecl "@Override   public String toString()  {     StringBuilder sb = new StringBuilder();     sb.append("class User {\n");          sb.append("  id: ").append(id).append("\n");     sb.append("  username: ").append(username).append("\n");     sb.append("  firstName: ").append(firstName).append("\n");     sb.append("  lastName: ").append(lastName).append("\n");     sb.append("  email: ").append(email).append("\n");     sb.append("  password: ").append(password).append("\n");     sb.append("  phone: ").append(phone).append("\n");     sb.append("  userStatus: ").append(userStatus).append("\n");     sb.append("}\n");     return sb.toString();   }" compose:Replacement merge: LineBased]
[NT -> right : Feature]
	[NT -> samples : Folder]
		[NT -> server : Folder]
			[NT -> petstore : Folder]
				[NT -> spring-mvc : Folder]
					[NT -> src : Folder]
						[NT -> main : Folder]
							[NT -> java : Folder]
								[NT -> io : Folder]
									[NT -> swagger : Folder]
										[NT -> model : Folder]
											[NT -> User.java : Java-File]
												[NT -> - : CompilationUnit]
													[T -> - : PackageDeclaration "package io.swagger.model;" compose:Replacement merge: Default]
													[T -> io.swagger.annotations.* : ImportDeclaration "import io.swagger.annotations.*;" compose:Replacement merge: Default]
													[T -> com.fasterxml.jackson.annotation.JsonProperty{ImportPackage} : ImportDeclaration "import com.fasterxml.jackson.annotation.JsonProperty;" compose:Replacement merge: Default]
													[NT -> User : ClassDeclaration]
														[T -> - : Modifiers "@ApiModel(description = "") @javax.annotation.Generated(value = "class io.swagger.codegen.languages.SpringMVCServerCodegen", date = "2015-10-16T21:16:24.594-04:00") public" compose:Replacement merge: SemanticConflict]
														[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
														[T -> User : Id "User" compose:Replacement merge: Default]
														[T -> id : FieldDecl "private Long id = null;" compose:Replacement merge: SemanticConflict]
														[T -> username : FieldDecl "private String username = null;" compose:Replacement merge: SemanticConflict]
														[T -> firstName : FieldDecl "private String firstName = null;" compose:Replacement merge: SemanticConflict]
														[T -> lastName : FieldDecl "private String lastName = null;" compose:Replacement merge: SemanticConflict]
														[T -> email : FieldDecl "private String email = null;" compose:Replacement merge: SemanticConflict]
														[T -> password : FieldDecl "private String password = null;" compose:Replacement merge: SemanticConflict]
														[T -> phone : FieldDecl "private String phone = null;" compose:Replacement merge: SemanticConflict]
														[T -> userStatus : FieldDecl "private Integer userStatus = null;" compose:Replacement merge: SemanticConflict]
														[T -> getId({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("id")   public Long getId() {     return id;   }" compose:Replacement merge: LineBased]
														[T -> setId(Long-Long) : MethodDecl "public void setId(Long id) {     this.id = id;   }" compose:Replacement merge: LineBased]
														[T -> getUsername({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("username")   public String getUsername() {     return username;   }" compose:Replacement merge: LineBased]
														[T -> setUsername(String-String) : MethodDecl "public void setUsername(String username) {     this.username = username;   }" compose:Replacement merge: LineBased]
														[T -> getFirstName({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("firstName")   public String getFirstName() {     return firstName;   }" compose:Replacement merge: LineBased]
														[T -> setFirstName(String-String) : MethodDecl "public void setFirstName(String firstName) {     this.firstName = firstName;   }" compose:Replacement merge: LineBased]
														[T -> getLastName({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("lastName")   public String getLastName() {     return lastName;   }" compose:Replacement merge: LineBased]
														[T -> setLastName(String-String) : MethodDecl "public void setLastName(String lastName) {     this.lastName = lastName;   }" compose:Replacement merge: LineBased]
														[T -> getEmail({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("email")   public String getEmail() {     return email;   }" compose:Replacement merge: LineBased]
														[T -> setEmail(String-String) : MethodDecl "public void setEmail(String email) {     this.email = email;   }" compose:Replacement merge: LineBased]
														[T -> getPassword({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("password")   public String getPassword() {     return password;   }" compose:Replacement merge: LineBased]
														[T -> setPassword(String-String) : MethodDecl "public void setPassword(String password) {     this.password = password;   }" compose:Replacement merge: LineBased]
														[T -> getPhone({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "")   @JsonProperty("phone")   public String getPhone() {     return phone;   }" compose:Replacement merge: LineBased]
														[T -> setPhone(String-String) : MethodDecl "public void setPhone(String phone) {     this.phone = phone;   }" compose:Replacement merge: LineBased]
														[T -> getUserStatus({FormalParametersInternal}) : MethodDecl "@ApiModelProperty(value = "User Status")   @JsonProperty("userStatus")   public Integer getUserStatus() {     return userStatus;   }" compose:Replacement merge: LineBased]
														[T -> setUserStatus(Integer-Integer) : MethodDecl "public void setUserStatus(Integer userStatus) {     this.userStatus = userStatus;   }" compose:Replacement merge: LineBased]
														[T -> toString({FormalParametersInternal}) : MethodDecl "@Override   public String toString()  {     StringBuilder sb = new StringBuilder();     sb.append("class User {\n");          sb.append("  id: ").append(id).append("\n");     sb.append("  username: ").append(username).append("\n");     sb.append("  firstName: ").append(firstName).append("\n");     sb.append("  lastName: ").append(lastName).append("\n");     sb.append("  email: ").append(email).append("\n");     sb.append("  password: ").append(password).append("\n");     sb.append("  phone: ").append(phone).append("\n");     sb.append("  userStatus: ").append(userStatus).append("\n");     sb.append("}\n");     return sb.toString();   }" compose:Replacement merge: LineBased]
[NT -> left : Feature]
	[NT -> samples : Folder]
		[NT -> client : Folder]
			[NT -> petstore : Folder]
				[NT -> csharp : Folder]
					[NT -> SwaggerClientTest : Folder]
						[NT -> obj : Folder]
							[NT -> Debug : Folder]
								[NT -> .NETFramework,Version=v4.5.AssemblyAttribute.cs : CSharp-File]
									[NT -> - : compilation_unit]
										[T -> - : attributes_either "[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.5", FrameworkDisplayName = "")]" compose:Replacement merge: Default]
[NT -> base : Feature]
	[NT -> samples : Folder]
		[NT -> client : Folder]
			[NT -> petstore : Folder]
				[NT -> csharp : Folder]
					[NT -> SwaggerClientTest : Folder]
						[NT -> obj : Folder]
							[NT -> Debug : Folder]
								[NT -> .NETFramework,Version=v4.5.AssemblyAttribute.cs : CSharp-File]
									[NT -> - : compilation_unit]
										[T -> - : attributes_either "[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.5", FrameworkDisplayName = "")]" compose:Replacement merge: Default]
[NT -> right : Feature]
	[NT -> samples : Folder]
		[NT -> client : Folder]
			[NT -> petstore : Folder]
				[NT -> csharp : Folder]
					[NT -> SwaggerClientTest : Folder]
						[NT -> obj : Folder]
							[NT -> Debug : Folder]
								[NT -> .NETFramework,Version=v4.5.AssemblyAttribute.cs : CSharp-File]
									[NT -> - : compilation_unit]
										[T -> - : attributes_either "[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.5", FrameworkDisplayName = "")]" compose:Replacement merge: Default]
[NT -> left : Feature]
	[NT -> samples : Folder]
		[NT -> server : Folder]
			[NT -> petstore : Folder]
				[NT -> spring-mvc : Folder]
					[NT -> src : Folder]
						[NT -> main : Folder]
							[NT -> java : Folder]
								[NT -> io : Folder]
									[NT -> swagger : Folder]
										[NT -> model : Folder]
											[NT -> User.java.merge : .java.merge-File]
												[T -> User.java : .java-Content "package io.swagger.model;   import io.swagger.annotations.*; import com.fasterxml.jackson.annotation.JsonProperty;   @ApiModel(description = "") @javax.annotation.Generated(value = "class io.swagger.codegen.languages.SpringMVCServerCodegen", date = "2015-10-19T23:12:31.377-07:00") public class User  {      private Long id = null;   private String username = null;   private String firstName = null;   private String lastName = null;   private String email = null;   private String password = null;   private String phone = null;   private Integer userStatus = null;       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("id")   public Long getId() {     return id;   }   public void setId(Long id) {     this.id = id;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("username")   public String getUsername() {     return username;   }   public void setUsername(String username) {     this.username = username;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("firstName")   public String getFirstName() {     return firstName;   }   public void setFirstName(String firstName) {     this.firstName = firstName;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("lastName")   public String getLastName() {     return lastName;   }   public void setLastName(String lastName) {     this.lastName = lastName;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("email")   public String getEmail() {     return email;   }   public void setEmail(String email) {     this.email = email;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("password")   public String getPassword() {     return password;   }   public void setPassword(String password) {     this.password = password;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("phone")   public String getPhone() {     return phone;   }   public void setPhone(String phone) {     this.phone = phone;   }       /**    * User Status    **/   @ApiModelProperty(value = "User Status")   @JsonProperty("userStatus")   public Integer getUserStatus() {     return userStatus;   }   public void setUserStatus(Integer userStatus) {     this.userStatus = userStatus;   }        @Override   public String toString()  {     StringBuilder sb = new StringBuilder();     sb.append("class User {\n");          sb.append("  id: ").append(id).append("\n");     sb.append("  username: ").append(username).append("\n");     sb.append("  firstName: ").append(firstName).append("\n");     sb.append("  lastName: ").append(lastName).append("\n");     sb.append("  email: ").append(email).append("\n");     sb.append("  password: ").append(password).append("\n");     sb.append("  phone: ").append(phone).append("\n");     sb.append("  userStatus: ").append(userStatus).append("\n");     sb.append("}\n");     return sb.toString();   } } " compose:StringConcatenation merge: LineBased]
[NT -> base : Feature]
	[NT -> samples : Folder]
		[NT -> server : Folder]
			[NT -> petstore : Folder]
				[NT -> spring-mvc : Folder]
					[NT -> src : Folder]
						[NT -> main : Folder]
							[NT -> java : Folder]
								[NT -> io : Folder]
									[NT -> swagger : Folder]
										[NT -> model : Folder]
											[NT -> User.java.merge : .java.merge-File]
												[T -> User.java : .java-Content "package io.swagger.model;   import io.swagger.annotations.*; import com.fasterxml.jackson.annotation.JsonProperty;   @ApiModel(description = "") @javax.annotation.Generated(value = "class io.swagger.codegen.languages.SpringMVCServerCodegen", date = "2015-09-30T16:27:59.075+08:00") public class User  {      private Long id = null;   private String username = null;   private String firstName = null;   private String lastName = null;   private String email = null;   private String password = null;   private String phone = null;   private Integer userStatus = null;       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("id")   public Long getId() {     return id;   }   public void setId(Long id) {     this.id = id;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("username")   public String getUsername() {     return username;   }   public void setUsername(String username) {     this.username = username;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("firstName")   public String getFirstName() {     return firstName;   }   public void setFirstName(String firstName) {     this.firstName = firstName;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("lastName")   public String getLastName() {     return lastName;   }   public void setLastName(String lastName) {     this.lastName = lastName;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("email")   public String getEmail() {     return email;   }   public void setEmail(String email) {     this.email = email;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("password")   public String getPassword() {     return password;   }   public void setPassword(String password) {     this.password = password;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("phone")   public String getPhone() {     return phone;   }   public void setPhone(String phone) {     this.phone = phone;   }       /**    * User Status    **/   @ApiModelProperty(value = "User Status")   @JsonProperty("userStatus")   public Integer getUserStatus() {     return userStatus;   }   public void setUserStatus(Integer userStatus) {     this.userStatus = userStatus;   }        @Override   public String toString()  {     StringBuilder sb = new StringBuilder();     sb.append("class User {\n");          sb.append("  id: ").append(id).append("\n");     sb.append("  username: ").append(username).append("\n");     sb.append("  firstName: ").append(firstName).append("\n");     sb.append("  lastName: ").append(lastName).append("\n");     sb.append("  email: ").append(email).append("\n");     sb.append("  password: ").append(password).append("\n");     sb.append("  phone: ").append(phone).append("\n");     sb.append("  userStatus: ").append(userStatus).append("\n");     sb.append("}\n");     return sb.toString();   } } " compose:StringConcatenation merge: LineBased]
[NT -> right : Feature]
	[NT -> samples : Folder]
		[NT -> server : Folder]
			[NT -> petstore : Folder]
				[NT -> spring-mvc : Folder]
					[NT -> src : Folder]
						[NT -> main : Folder]
							[NT -> java : Folder]
								[NT -> io : Folder]
									[NT -> swagger : Folder]
										[NT -> model : Folder]
											[NT -> User.java.merge : .java.merge-File]
												[T -> User.java : .java-Content "package io.swagger.model;   import io.swagger.annotations.*; import com.fasterxml.jackson.annotation.JsonProperty;   @ApiModel(description = "") @javax.annotation.Generated(value = "class io.swagger.codegen.languages.SpringMVCServerCodegen", date = "2015-10-16T21:16:24.594-04:00") public class User  {      private Long id = null;   private String username = null;   private String firstName = null;   private String lastName = null;   private String email = null;   private String password = null;   private String phone = null;   private Integer userStatus = null;       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("id")   public Long getId() {     return id;   }   public void setId(Long id) {     this.id = id;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("username")   public String getUsername() {     return username;   }   public void setUsername(String username) {     this.username = username;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("firstName")   public String getFirstName() {     return firstName;   }   public void setFirstName(String firstName) {     this.firstName = firstName;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("lastName")   public String getLastName() {     return lastName;   }   public void setLastName(String lastName) {     this.lastName = lastName;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("email")   public String getEmail() {     return email;   }   public void setEmail(String email) {     this.email = email;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("password")   public String getPassword() {     return password;   }   public void setPassword(String password) {     this.password = password;   }       /**    **/   @ApiModelProperty(value = "")   @JsonProperty("phone")   public String getPhone() {     return phone;   }   public void setPhone(String phone) {     this.phone = phone;   }       /**    * User Status    **/   @ApiModelProperty(value = "User Status")   @JsonProperty("userStatus")   public Integer getUserStatus() {     return userStatus;   }   public void setUserStatus(Integer userStatus) {     this.userStatus = userStatus;   }        @Override   public String toString()  {     StringBuilder sb = new StringBuilder();     sb.append("class User {\n");          sb.append("  id: ").append(id).append("\n");     sb.append("  username: ").append(username).append("\n");     sb.append("  firstName: ").append(firstName).append("\n");     sb.append("  lastName: ").append(lastName).append("\n");     sb.append("  email: ").append(email).append("\n");     sb.append("  password: ").append(password).append("\n");     sb.append("  phone: ").append(phone).append("\n");     sb.append("  userStatus: ").append(userStatus).append("\n");     sb.append("}\n");     return sb.toString();   } } " compose:StringConcatenation merge: LineBased]
[NT -> left : Feature]
	[NT -> samples : Folder]
		[NT -> client : Folder]
			[NT -> petstore : Folder]
				[NT -> csharp : Folder]
					[NT -> SwaggerClientTest : Folder]
						[NT -> obj : Folder]
							[NT -> Debug : Folder]
								[NT -> .NETFramework,Version=v4.5.AssemblyAttribute.cs.merge : .cs.merge-File]
									[T -> .NETFramework,Version=v4.5.AssemblyAttribute.cs : .cs-Content "// <autogenerated /> [assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.5", FrameworkDisplayName = "")] " compose:StringConcatenation merge: LineBased]
[NT -> base : Feature]
	[NT -> samples : Folder]
		[NT -> client : Folder]
			[NT -> petstore : Folder]
				[NT -> csharp : Folder]
					[NT -> SwaggerClientTest : Folder]
						[NT -> obj : Folder]
							[NT -> Debug : Folder]
								[NT -> .NETFramework,Version=v4.5.AssemblyAttribute.cs.merge : .cs.merge-File]
									[T -> .NETFramework,Version=v4.5.AssemblyAttribute.cs : .cs-Content "// <autogenerated /> [assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.5", FrameworkDisplayName = "")] " compose:StringConcatenation merge: LineBased]
[NT -> right : Feature]
	[NT -> samples : Folder]
		[NT -> client : Folder]
			[NT -> petstore : Folder]
				[NT -> csharp : Folder]
					[NT -> SwaggerClientTest : Folder]
						[NT -> obj : Folder]
							[NT -> Debug : Folder]
								[NT -> .NETFramework,Version=v4.5.AssemblyAttribute.cs.merge : .cs.merge-File]
									[T -> .NETFramework,Version=v4.5.AssemblyAttribute.cs : .cs-Content "// <autogenerated /> [assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.5", FrameworkDisplayName = "")] " compose:StringConcatenation merge: LineBased]
