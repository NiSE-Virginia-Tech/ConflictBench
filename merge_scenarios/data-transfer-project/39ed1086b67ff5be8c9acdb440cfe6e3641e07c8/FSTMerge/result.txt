Found the following features in expression file:
left
base
right
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/data-transfer-project/left/extensions/data-transfer/portability-data-transfer-smugmug/src/test/java/org/datatransfer/smugmug/photos/SmugMugInterfaceTest.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/data-transfer-project/left/extensions/data-transfer/portability-data-transfer-smugmug/src/test/java/org/datatransfer/smugmug/photos/SmugMugInterfaceTest.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/data-transfer-project/base/extensions/data-transfer/portability-data-transfer-smugmug/src/test/java/org/datatransfer/smugmug/photos/SmugMugInterfaceTest.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/data-transfer-project/base/extensions/data-transfer/portability-data-transfer-smugmug/src/test/java/org/datatransfer/smugmug/photos/SmugMugInterfaceTest.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/data-transfer-project/right/extensions/data-transfer/portability-data-transfer-smugmug/src/test/java/org/datatransfer/smugmug/photos/SmugMugInterfaceTest.java
processing: /home/ppp/Research_Projects/Merge_Conflicts/Resource/workspace/data-transfer-project/right/extensions/data-transfer/portability-data-transfer-smugmug/src/test/java/org/datatransfer/smugmug/photos/SmugMugInterfaceTest.java
[NT -> left : Feature]
	[NT -> extensions : Folder]
		[NT -> data-transfer : Folder]
			[NT -> portability-data-transfer-smugmug : Folder]
				[NT -> src : Folder]
					[NT -> test : Folder]
						[NT -> java : Folder]
							[NT -> org : Folder]
								[NT -> datatransfer : Folder]
									[NT -> smugmug : Folder]
										[NT -> photos : Folder]
											[NT -> SmugMugInterfaceTest.java : Java-File]
												[NT -> - : CompilationUnit]
													[T -> - : PackageDeclaration "package org.datatransferproject.transfer.smugmug.photos;" compose:Replacement merge: Default]
													[T -> org.junit.Assert.assertEquals{ImportPackage} : ImportDeclaration "import static org.junit.Assert.assertEquals;" compose:Replacement merge: Default]
													[T -> org.junit.Test{ImportPackage} : ImportDeclaration "import org.junit.Test;" compose:Replacement merge: Default]
													[NT -> SmugMugInterfaceTest : ClassDeclaration]
														[T -> - : Modifiers "public" compose:Replacement merge: SemanticConflict]
														[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
														[T -> SmugMugInterfaceTest : Id "SmugMugInterfaceTest" compose:Replacement merge: Default]
														[T -> cleanName_standard({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_standard() {     assertEquals(SmugMugInterface.cleanName("MyAlbum"), "MyAlbum");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_punctuation({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_punctuation() {     assertEquals(SmugMugInterface.cleanName("MyAlbum!"), "MyAlbum");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_spaces({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_spaces() {     assertEquals(SmugMugInterface.cleanName("My Album"), "My-Album");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_long({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_long() {     assertEquals(         SmugMugInterface.cleanName(             "My Album From That One Time I did an Activity and took several" + " pictures of it"),         "My-Album-From-That-One-Time-I-did-an-Act");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_NonLatin({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_NonLatin() {     assertEquals(SmugMugInterface.cleanName("ჩემი ფოტოები"), "ჩემი-ფოტოები");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_AllWrong({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_AllWrong() {     assertEquals(SmugMugInterface.cleanName("🔥"), "");   }" compose:Replacement merge: LineBased]
[NT -> base : Feature]
	[NT -> extensions : Folder]
		[NT -> data-transfer : Folder]
			[NT -> portability-data-transfer-smugmug : Folder]
				[NT -> src : Folder]
					[NT -> test : Folder]
						[NT -> java : Folder]
							[NT -> org : Folder]
								[NT -> datatransfer : Folder]
									[NT -> smugmug : Folder]
										[NT -> photos : Folder]
											[NT -> SmugMugInterfaceTest.java : Java-File]
												[NT -> - : CompilationUnit]
													[T -> - : PackageDeclaration "package org.datatransferproject.transfer.smugmug.photos;" compose:Replacement merge: Default]
													[T -> org.junit.Test{ImportPackage} : ImportDeclaration "import org.junit.Test;" compose:Replacement merge: Default]
													[T -> org.junit.Assert.assertEquals{ImportPackage} : ImportDeclaration "import static org.junit.Assert.assertEquals;" compose:Replacement merge: Default]
													[NT -> SmugMugInterfaceTest : ClassDeclaration]
														[T -> - : Modifiers "public" compose:Replacement merge: SemanticConflict]
														[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
														[T -> SmugMugInterfaceTest : Id "SmugMugInterfaceTest" compose:Replacement merge: Default]
														[T -> cleanName_standard({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_standard() {       assertEquals(         SmugMugInterface.cleanName("MyAlbum"),         "MyAlbum");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_punctuation({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_punctuation() {       assertEquals(         SmugMugInterface.cleanName("MyAlbum!"),         "MyAlbum");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_spaces({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_spaces() {       assertEquals(         SmugMugInterface.cleanName("My Album"),         "My-Album");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_long({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_long() {       assertEquals(       SmugMugInterface.cleanName(         "My Album From That One Time I did an Activity and took several"           +" pictures of it"),       "My-Album-From-That-One-Time-I-did-an-Act");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_NonLatin({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_NonLatin() {       assertEquals(       SmugMugInterface.cleanName(         "ჩემი ფოტოები"),       "ჩემი-ფოტოები");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_AllWrong({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_AllWrong() {       assertEquals(       SmugMugInterface.cleanName(         "🔥"),       "");   }" compose:Replacement merge: LineBased]
[NT -> right : Feature]
	[NT -> extensions : Folder]
		[NT -> data-transfer : Folder]
			[NT -> portability-data-transfer-smugmug : Folder]
				[NT -> src : Folder]
					[NT -> test : Folder]
						[NT -> java : Folder]
							[NT -> org : Folder]
								[NT -> datatransfer : Folder]
									[NT -> smugmug : Folder]
										[NT -> photos : Folder]
											[NT -> SmugMugInterfaceTest.java : Java-File]
												[NT -> - : CompilationUnit]
													[T -> - : PackageDeclaration "package org.datatransferproject.transfer.smugmug.photos;" compose:Replacement merge: Default]
													[T -> org.junit.Test{ImportPackage} : ImportDeclaration "import org.junit.Test;" compose:Replacement merge: Default]
													[T -> org.junit.Assert.assertEquals{ImportPackage} : ImportDeclaration "import static org.junit.Assert.assertEquals;" compose:Replacement merge: Default]
													[NT -> SmugMugInterfaceTest : ClassDeclaration]
														[T -> - : Modifiers "public" compose:Replacement merge: SemanticConflict]
														[T -> - : ClassOrInterface1 "class" compose:Replacement merge: Default]
														[T -> SmugMugInterfaceTest : Id "SmugMugInterfaceTest" compose:Replacement merge: Default]
														[T -> cleanName_standard({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_standard() {     assertEquals(SmugMugInterface.cleanName("MyAlbum"), "MyAlbum");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_punctuation({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_punctuation() {     assertEquals(SmugMugInterface.cleanName("MyAlbum!"), "MyAlbum");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_spaces({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_spaces() {     assertEquals(SmugMugInterface.cleanName("My Album"), "My-Album");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_long({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_long() {     assertEquals(         SmugMugInterface.cleanName(             "My Album From That One Time I did an Activity and took several" + " pictures of it"),         "My-Album-From-That-One-Time-I-did-an-Act");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_NonLatin({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_NonLatin() {     assertEquals(SmugMugInterface.cleanName("ჩემი ფოტოები"), "ჩემი-ფოტოები");   }" compose:Replacement merge: LineBased]
														[T -> cleanName_AllWrong({FormalParametersInternal}) : MethodDecl "@Test   public void cleanName_AllWrong() {     assertEquals(SmugMugInterface.cleanName("🔥"), "");   }" compose:Replacement merge: LineBased]
[NT -> left : Feature]
	[NT -> extensions : Folder]
		[NT -> data-transfer : Folder]
			[NT -> portability-data-transfer-smugmug : Folder]
				[NT -> src : Folder]
					[NT -> test : Folder]
						[NT -> java : Folder]
							[NT -> org : Folder]
								[NT -> datatransfer : Folder]
									[NT -> smugmug : Folder]
										[NT -> photos : Folder]
											[NT -> SmugMugInterfaceTest.java.merge : .java.merge-File]
												[T -> SmugMugInterfaceTest.java : .java-Content "/*  * Copyright 2019 The Data Transfer Project Authors.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.datatransferproject.transfer.smugmug.photos;  import static org.junit.Assert.assertEquals;  import org.junit.Test;  public class SmugMugInterfaceTest {    @Test   public void cleanName_standard() {     assertEquals(SmugMugInterface.cleanName("MyAlbum"), "MyAlbum");   }    @Test   public void cleanName_punctuation() {     assertEquals(SmugMugInterface.cleanName("MyAlbum!"), "MyAlbum");   }    @Test   public void cleanName_spaces() {     assertEquals(SmugMugInterface.cleanName("My Album"), "My-Album");   }    @Test   public void cleanName_long() {     assertEquals(         SmugMugInterface.cleanName(             "My Album From That One Time I did an Activity and took several" + " pictures of it"),         "My-Album-From-That-One-Time-I-did-an-Act");   }    @Test   public void cleanName_NonLatin() {     assertEquals(SmugMugInterface.cleanName("ჩემი ფოტოები"), "ჩემი-ფოტოები");   }    @Test   public void cleanName_AllWrong() {     assertEquals(SmugMugInterface.cleanName("🔥"), "");   } } " compose:StringConcatenation merge: LineBased]
[NT -> base : Feature]
	[NT -> extensions : Folder]
		[NT -> data-transfer : Folder]
			[NT -> portability-data-transfer-smugmug : Folder]
				[NT -> src : Folder]
					[NT -> test : Folder]
						[NT -> java : Folder]
							[NT -> org : Folder]
								[NT -> datatransfer : Folder]
									[NT -> smugmug : Folder]
										[NT -> photos : Folder]
											[NT -> SmugMugInterfaceTest.java.merge : .java.merge-File]
												[T -> SmugMugInterfaceTest.java : .java-Content "/*  * Copyright 2019 The Data Transfer Project Authors.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.datatransferproject.transfer.smugmug.photos;  import org.junit.Test;  import static org.junit.Assert.assertEquals;   public class SmugMugInterfaceTest {    @Test   public void cleanName_standard() {       assertEquals(         SmugMugInterface.cleanName("MyAlbum"),         "MyAlbum");   }    @Test   public void cleanName_punctuation() {       assertEquals(         SmugMugInterface.cleanName("MyAlbum!"),         "MyAlbum");   }    @Test   public void cleanName_spaces() {       assertEquals(         SmugMugInterface.cleanName("My Album"),         "My-Album");   }    @Test   public void cleanName_long() {       assertEquals(       SmugMugInterface.cleanName(         "My Album From That One Time I did an Activity and took several"           +" pictures of it"),       "My-Album-From-That-One-Time-I-did-an-Act");   }    @Test   public void cleanName_NonLatin() {       assertEquals(       SmugMugInterface.cleanName(         "ჩემი ფოტოები"),       "ჩემი-ფოტოები");   }    @Test   public void cleanName_AllWrong() {       assertEquals(       SmugMugInterface.cleanName(         "🔥"),       "");   }  } " compose:StringConcatenation merge: LineBased]
[NT -> right : Feature]
	[NT -> extensions : Folder]
		[NT -> data-transfer : Folder]
			[NT -> portability-data-transfer-smugmug : Folder]
				[NT -> src : Folder]
					[NT -> test : Folder]
						[NT -> java : Folder]
							[NT -> org : Folder]
								[NT -> datatransfer : Folder]
									[NT -> smugmug : Folder]
										[NT -> photos : Folder]
											[NT -> SmugMugInterfaceTest.java.merge : .java.merge-File]
												[T -> SmugMugInterfaceTest.java : .java-Content "/*  * Copyright 2019 The Data Transfer Project Authors.  *  * Licensed under the Apache License, Version 2.0 (the "License");  * you may not use this file except in compliance with the License.  * You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing, software  * distributed under the License is distributed on an "AS IS" BASIS,  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  * See the License for the specific language governing permissions and  * limitations under the License.  */  package org.datatransferproject.transfer.smugmug.photos;  import org.junit.Test;  import static org.junit.Assert.assertEquals;  public class SmugMugInterfaceTest {    @Test   public void cleanName_standard() {     assertEquals(SmugMugInterface.cleanName("MyAlbum"), "MyAlbum");   }    @Test   public void cleanName_punctuation() {     assertEquals(SmugMugInterface.cleanName("MyAlbum!"), "MyAlbum");   }    @Test   public void cleanName_spaces() {     assertEquals(SmugMugInterface.cleanName("My Album"), "My-Album");   }    @Test   public void cleanName_long() {     assertEquals(         SmugMugInterface.cleanName(             "My Album From That One Time I did an Activity and took several" + " pictures of it"),         "My-Album-From-That-One-Time-I-did-an-Act");   }    @Test   public void cleanName_NonLatin() {     assertEquals(SmugMugInterface.cleanName("ჩემი ფოტოები"), "ჩემი-ფოტოები");   }    @Test   public void cleanName_AllWrong() {     assertEquals(SmugMugInterface.cleanName("🔥"), "");   } } " compose:StringConcatenation merge: LineBased]
